;;; Code generated by LEM-LSP-UTILS/PROTOCOL-GENERATOR based on specification-3-15.md; DO NOT EDIT.

(DEFPACKAGE :cl-lsp.LEM-LSP-UTILS/PROTOCOL
  (:IMPORT-FROM :cl-lsp.lem-lsp-utils/json)
  (:IMPORT-FROM :cl-lsp.LEM-LSP-UTILS/TYPE)
  (:EXPORT :SELECTION-RANGE-PARENT
           :SELECTION-RANGE-RANGE
           :SELECTION-RANGE
           :SELECTION-RANGE-PARAMS-POSITIONS
           :SELECTION-RANGE-PARAMS-TEXT-DOCUMENT
           :SELECTION-RANGE-PARAMS
           :SELECTION-RANGE-REGISTRATION-OPTIONS
           :SELECTION-RANGE-OPTIONS
           :SELECTION-RANGE-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION
           :SELECTION-RANGE-CLIENT-CAPABILITIES
           :FOLDING-RANGE-KIND
           :FOLDING-RANGE-END-CHARACTER
           :FOLDING-RANGE-END-LINE
           :FOLDING-RANGE-START-CHARACTER
           :FOLDING-RANGE-START-LINE
           :FOLDING-RANGE
           :FOLDING-RANGE-PARAMS-TEXT-DOCUMENT
           :FOLDING-RANGE-PARAMS
           :FOLDING-RANGE-REGISTRATION-OPTIONS
           :FOLDING-RANGE-OPTIONS
           :FOLDING-RANGE-CLIENT-CAPABILITIES-LINE-FOLDING-ONLY
           :FOLDING-RANGE-CLIENT-CAPABILITIES-RANGE-LIMIT
           :FOLDING-RANGE-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION
           :FOLDING-RANGE-CLIENT-CAPABILITIES
           :PREPARE-RENAME-PARAMS
           :RENAME-PARAMS-NEW-NAME
           :RENAME-PARAMS
           :RENAME-REGISTRATION-OPTIONS
           :RENAME-OPTIONS-PREPARE-PROVIDER
           :RENAME-OPTIONS
           :RENAME-CLIENT-CAPABILITIES-PREPARE-SUPPORT
           :RENAME-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION
           :RENAME-CLIENT-CAPABILITIES
           :DOCUMENT-ON-TYPE-FORMATTING-PARAMS-OPTIONS
           :DOCUMENT-ON-TYPE-FORMATTING-PARAMS-CH
           :DOCUMENT-ON-TYPE-FORMATTING-PARAMS
           :DOCUMENT-ON-TYPE-FORMATTING-REGISTRATION-OPTIONS
           :DOCUMENT-ON-TYPE-FORMATTING-OPTIONS-MORE-TRIGGER-CHARACTER
           :DOCUMENT-ON-TYPE-FORMATTING-OPTIONS-FIRST-TRIGGER-CHARACTER
           :DOCUMENT-ON-TYPE-FORMATTING-OPTIONS
           :DOCUMENT-ON-TYPE-FORMATTING-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION
           :DOCUMENT-ON-TYPE-FORMATTING-CLIENT-CAPABILITIES
           :DOCUMENT-RANGE-FORMATTING-PARAMS-OPTIONS
           :DOCUMENT-RANGE-FORMATTING-PARAMS-RANGE
           :DOCUMENT-RANGE-FORMATTING-PARAMS-TEXT-DOCUMENT
           :DOCUMENT-RANGE-FORMATTING-PARAMS
           :DOCUMENT-RANGE-FORMATTING-REGISTRATION-OPTIONS
           :DOCUMENT-RANGE-FORMATTING-OPTIONS
           :DOCUMENT-RANGE-FORMATTING-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION
           :DOCUMENT-RANGE-FORMATTING-CLIENT-CAPABILITIES
           :FORMATTING-OPTIONS-KEY
           :FORMATTING-OPTIONS-TRIM-FINAL-NEWLINES
           :FORMATTING-OPTIONS-INSERT-FINAL-NEWLINE
           :FORMATTING-OPTIONS-TRIM-TRAILING-WHITESPACE
           :FORMATTING-OPTIONS-INSERT-SPACES
           :FORMATTING-OPTIONS-TAB-SIZE
           :FORMATTING-OPTIONS
           :DOCUMENT-FORMATTING-PARAMS-OPTIONS
           :DOCUMENT-FORMATTING-PARAMS-TEXT-DOCUMENT
           :DOCUMENT-FORMATTING-PARAMS
           :DOCUMENT-FORMATTING-REGISTRATION-OPTIONS
           :DOCUMENT-FORMATTING-OPTIONS
           :DOCUMENT-FORMATTING-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION
           :DOCUMENT-FORMATTING-CLIENT-CAPABILITIES
           :COLOR-PRESENTATION-ADDITIONAL-TEXT-EDITS
           :COLOR-PRESENTATION-TEXT-EDIT
           :COLOR-PRESENTATION-LABEL
           :COLOR-PRESENTATION
           :COLOR-PRESENTATION-PARAMS-RANGE
           :COLOR-PRESENTATION-PARAMS-COLOR
           :COLOR-PRESENTATION-PARAMS-TEXT-DOCUMENT
           :COLOR-PRESENTATION-PARAMS
           :COLOR-ALPHA
           :COLOR-BLUE
           :COLOR-GREEN
           :COLOR-RED
           :COLOR
           :COLOR-INFORMATION-COLOR
           :COLOR-INFORMATION-RANGE
           :COLOR-INFORMATION
           :DOCUMENT-COLOR-PARAMS-TEXT-DOCUMENT
           :DOCUMENT-COLOR-PARAMS
           :DOCUMENT-COLOR-REGISTRATION-OPTIONS
           :DOCUMENT-COLOR-OPTIONS
           :DOCUMENT-COLOR-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION
           :DOCUMENT-COLOR-CLIENT-CAPABILITIES
           :DOCUMENT-LINK-DATA
           :DOCUMENT-LINK-TOOLTIP
           :DOCUMENT-LINK-TARGET
           :DOCUMENT-LINK-RANGE
           :DOCUMENT-LINK
           :DOCUMENT-LINK-PARAMS-TEXT-DOCUMENT
           :DOCUMENT-LINK-PARAMS
           :DOCUMENT-LINK-REGISTRATION-OPTIONS
           :DOCUMENT-LINK-OPTIONS-RESOLVE-PROVIDER
           :DOCUMENT-LINK-OPTIONS
           :DOCUMENT-LINK-CLIENT-CAPABILITIES-TOOLTIP-SUPPORT
           :DOCUMENT-LINK-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION
           :DOCUMENT-LINK-CLIENT-CAPABILITIES
           :CODE-LENS-DATA
           :CODE-LENS-COMMAND
           :CODE-LENS-RANGE
           :CODE-LENS
           :CODE-LENS-PARAMS-TEXT-DOCUMENT
           :CODE-LENS-PARAMS
           :CODE-LENS-REGISTRATION-OPTIONS
           :CODE-LENS-OPTIONS-RESOLVE-PROVIDER
           :CODE-LENS-OPTIONS
           :CODE-LENS-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION
           :CODE-LENS-CLIENT-CAPABILITIES
           :CODE-ACTION-COMMAND
           :CODE-ACTION-EDIT
           :CODE-ACTION-IS-PREFERRED
           :CODE-ACTION-DIAGNOSTICS
           :CODE-ACTION-KIND
           :CODE-ACTION-TITLE
           :CODE-ACTION
           :CODE-ACTION-CONTEXT-ONLY
           :CODE-ACTION-CONTEXT-DIAGNOSTICS
           :CODE-ACTION-CONTEXT
           :CODE-ACTION-KIND.SOURCE-ORGANIZE-IMPORTS
           :CODE-ACTION-KIND.SOURCE
           :CODE-ACTION-KIND.REFACTOR-REWRITE
           :CODE-ACTION-KIND.REFACTOR-INLINE
           :CODE-ACTION-KIND.REFACTOR-EXTRACT
           :CODE-ACTION-KIND.REFACTOR
           :CODE-ACTION-KIND.QUICK-FIX
           :CODE-ACTION-KIND.EMPTY
           :CODE-ACTION-PARAMS-CONTEXT
           :CODE-ACTION-PARAMS-RANGE
           :CODE-ACTION-PARAMS-TEXT-DOCUMENT
           :CODE-ACTION-PARAMS
           :CODE-ACTION-REGISTRATION-OPTIONS
           :CODE-ACTION-OPTIONS-CODE-ACTION-KINDS
           :CODE-ACTION-OPTIONS
           :CODE-ACTION-CLIENT-CAPABILITIES-IS-PREFERRED-SUPPORT
           :CODE-ACTION-CLIENT-CAPABILITIES-CODE-ACTION-LITERAL-SUPPORT
           :CODE-ACTION-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION
           :CODE-ACTION-CLIENT-CAPABILITIES
           :SYMBOL-INFORMATION-CONTAINER-NAME
           :SYMBOL-INFORMATION-LOCATION
           :SYMBOL-INFORMATION-DEPRECATED
           :SYMBOL-INFORMATION-KIND
           :SYMBOL-INFORMATION-NAME
           :SYMBOL-INFORMATION
           :DOCUMENT-SYMBOL-CHILDREN
           :DOCUMENT-SYMBOL-SELECTION-RANGE
           :DOCUMENT-SYMBOL-RANGE
           :DOCUMENT-SYMBOL-DEPRECATED
           :DOCUMENT-SYMBOL-KIND
           :DOCUMENT-SYMBOL-DETAIL
           :DOCUMENT-SYMBOL-NAME
           :DOCUMENT-SYMBOL
           :SYMBOL-KIND.TYPE-PARAMETER
           :SYMBOL-KIND.OPERATOR
           :SYMBOL-KIND.EVENT
           :SYMBOL-KIND.STRUCT
           :SYMBOL-KIND.ENUM-MEMBER
           :SYMBOL-KIND.NULL
           :SYMBOL-KIND.KEY
           :SYMBOL-KIND.OBJECT
           :SYMBOL-KIND.ARRAY
           :SYMBOL-KIND.BOOLEAN
           :SYMBOL-KIND.NUMBER
           :SYMBOL-KIND.STRING
           :SYMBOL-KIND.CONSTANT
           :SYMBOL-KIND.VARIABLE
           :SYMBOL-KIND.FUNCTION
           :SYMBOL-KIND.INTERFACE
           :SYMBOL-KIND.ENUM
           :SYMBOL-KIND.CONSTRUCTOR
           :SYMBOL-KIND.FIELD
           :SYMBOL-KIND.PROPERTY
           :SYMBOL-KIND.METHOD
           :SYMBOL-KIND.CLASS
           :SYMBOL-KIND.PACKAGE
           :SYMBOL-KIND.NAMESPACE
           :SYMBOL-KIND.MODULE
           :SYMBOL-KIND.FILE
           :DOCUMENT-SYMBOL-PARAMS-TEXT-DOCUMENT
           :DOCUMENT-SYMBOL-PARAMS
           :DOCUMENT-SYMBOL-REGISTRATION-OPTIONS
           :DOCUMENT-SYMBOL-OPTIONS
           :DOCUMENT-SYMBOL-CLIENT-CAPABILITIES-HIERARCHICAL-DOCUMENT-SYMBOL-SUPPORT
           :DOCUMENT-SYMBOL-CLIENT-CAPABILITIES-SYMBOL-KIND
           :DOCUMENT-SYMBOL-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION
           :DOCUMENT-SYMBOL-CLIENT-CAPABILITIES
           :DOCUMENT-HIGHLIGHT-KIND.WRITE
           :DOCUMENT-HIGHLIGHT-KIND.READ
           :DOCUMENT-HIGHLIGHT-KIND.TEXT
           :DOCUMENT-HIGHLIGHT-KIND
           :DOCUMENT-HIGHLIGHT-RANGE
           :DOCUMENT-HIGHLIGHT
           :DOCUMENT-HIGHLIGHT-PARAMS
           :DOCUMENT-HIGHLIGHT-REGISTRATION-OPTIONS
           :DOCUMENT-HIGHLIGHT-OPTIONS
           :DOCUMENT-HIGHLIGHT-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION
           :DOCUMENT-HIGHLIGHT-CLIENT-CAPABILITIES
           :REFERENCE-CONTEXT-INCLUDE-DECLARATION
           :REFERENCE-CONTEXT
           :REFERENCE-PARAMS-CONTEXT
           :REFERENCE-PARAMS
           :REFERENCE-REGISTRATION-OPTIONS
           :REFERENCE-OPTIONS
           :REFERENCE-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION
           :REFERENCE-CLIENT-CAPABILITIES
           :IMPLEMENTATION-PARAMS
           :IMPLEMENTATION-REGISTRATION-OPTIONS
           :IMPLEMENTATION-OPTIONS
           :IMPLEMENTATION-CLIENT-CAPABILITIES-LINK-SUPPORT
           :IMPLEMENTATION-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION
           :IMPLEMENTATION-CLIENT-CAPABILITIES
           :TYPE-DEFINITION-PARAMS
           :TYPE-DEFINITION-REGISTRATION-OPTIONS
           :TYPE-DEFINITION-OPTIONS
           :TYPE-DEFINITION-CLIENT-CAPABILITIES-LINK-SUPPORT
           :TYPE-DEFINITION-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION
           :TYPE-DEFINITION-CLIENT-CAPABILITIES
           :DEFINITION-PARAMS
           :DEFINITION-REGISTRATION-OPTIONS
           :DEFINITION-OPTIONS
           :DEFINITION-CLIENT-CAPABILITIES-LINK-SUPPORT
           :DEFINITION-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION
           :DEFINITION-CLIENT-CAPABILITIES
           :DECLARATION-PARAMS
           :DECLARATION-REGISTRATION-OPTIONS
           :DECLARATION-OPTIONS
           :DECLARATION-CLIENT-CAPABILITIES-LINK-SUPPORT
           :DECLARATION-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION
           :DECLARATION-CLIENT-CAPABILITIES
           :PARAMETER-INFORMATION-DOCUMENTATION
           :PARAMETER-INFORMATION-LABEL
           :PARAMETER-INFORMATION
           :SIGNATURE-INFORMATION-PARAMETERS
           :SIGNATURE-INFORMATION-DOCUMENTATION
           :SIGNATURE-INFORMATION-LABEL
           :SIGNATURE-INFORMATION
           :SIGNATURE-HELP-ACTIVE-PARAMETER
           :SIGNATURE-HELP-ACTIVE-SIGNATURE
           :SIGNATURE-HELP-SIGNATURES
           :SIGNATURE-HELP
           :SIGNATURE-HELP-CONTEXT-ACTIVE-SIGNATURE-HELP
           :SIGNATURE-HELP-CONTEXT-IS-RETRIGGER
           :SIGNATURE-HELP-CONTEXT-TRIGGER-CHARACTER
           :SIGNATURE-HELP-CONTEXT-TRIGGER-KIND
           :SIGNATURE-HELP-CONTEXT
           :SIGNATURE-HELP-TRIGGER-KIND.CONTENT-CHANGE
           :SIGNATURE-HELP-TRIGGER-KIND.TRIGGER-CHARACTER
           :SIGNATURE-HELP-TRIGGER-KIND.INVOKED
           :SIGNATURE-HELP-PARAMS-CONTEXT
           :SIGNATURE-HELP-PARAMS
           :SIGNATURE-HELP-REGISTRATION-OPTIONS
           :SIGNATURE-HELP-OPTIONS-RETRIGGER-CHARACTERS
           :SIGNATURE-HELP-OPTIONS-TRIGGER-CHARACTERS
           :SIGNATURE-HELP-OPTIONS
           :SIGNATURE-HELP-CLIENT-CAPABILITIES-CONTEXT-SUPPORT
           :SIGNATURE-HELP-CLIENT-CAPABILITIES-SIGNATURE-INFORMATION
           :SIGNATURE-HELP-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION
           :SIGNATURE-HELP-CLIENT-CAPABILITIES
           :HOVER-RANGE
           :HOVER-CONTENTS
           :HOVER
           :HOVER-PARAMS
           :HOVER-REGISTRATION-OPTIONS
           :HOVER-OPTIONS
           :HOVER-CLIENT-CAPABILITIES-CONTENT-FORMAT
           :HOVER-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION
           :HOVER-CLIENT-CAPABILITIES
           :COMPLETION-ITEM-KIND.TYPE-PARAMETER
           :COMPLETION-ITEM-KIND.OPERATOR
           :COMPLETION-ITEM-KIND.EVENT
           :COMPLETION-ITEM-KIND.STRUCT
           :COMPLETION-ITEM-KIND.CONSTANT
           :COMPLETION-ITEM-KIND.ENUM-MEMBER
           :COMPLETION-ITEM-KIND.FOLDER
           :COMPLETION-ITEM-KIND.REFERENCE
           :COMPLETION-ITEM-KIND.FILE
           :COMPLETION-ITEM-KIND.COLOR
           :COMPLETION-ITEM-KIND.SNIPPET
           :COMPLETION-ITEM-KIND.KEYWORD
           :COMPLETION-ITEM-KIND.ENUM
           :COMPLETION-ITEM-KIND.VALUE
           :COMPLETION-ITEM-KIND.UNIT
           :COMPLETION-ITEM-KIND.PROPERTY
           :COMPLETION-ITEM-KIND.MODULE
           :COMPLETION-ITEM-KIND.INTERFACE
           :COMPLETION-ITEM-KIND.CLASS
           :COMPLETION-ITEM-KIND.VARIABLE
           :COMPLETION-ITEM-KIND.FIELD
           :COMPLETION-ITEM-KIND.CONSTRUCTOR
           :COMPLETION-ITEM-KIND.FUNCTION
           :COMPLETION-ITEM-KIND.METHOD
           :COMPLETION-ITEM-KIND.TEXT
           :COMPLETION-ITEM-DATA
           :COMPLETION-ITEM-COMMAND
           :COMPLETION-ITEM-COMMIT-CHARACTERS
           :COMPLETION-ITEM-ADDITIONAL-TEXT-EDITS
           :COMPLETION-ITEM-TEXT-EDIT
           :COMPLETION-ITEM-INSERT-TEXT-FORMAT
           :COMPLETION-ITEM-INSERT-TEXT
           :COMPLETION-ITEM-FILTER-TEXT
           :COMPLETION-ITEM-SORT-TEXT
           :COMPLETION-ITEM-PRESELECT
           :COMPLETION-ITEM-DEPRECATED
           :COMPLETION-ITEM-DOCUMENTATION
           :COMPLETION-ITEM-DETAIL
           :COMPLETION-ITEM-TAGS
           :COMPLETION-ITEM-KIND
           :COMPLETION-ITEM-LABEL
           :COMPLETION-ITEM
           :COMPLETION-ITEM-TAG.DEPRECATED
           :INSERT-TEXT-FORMAT.SNIPPET
           :INSERT-TEXT-FORMAT.PLAIN-TEXT
           :COMPLETION-LIST-ITEMS
           :COMPLETION-LIST-IS-INCOMPLETE
           :COMPLETION-LIST
           :COMPLETION-CONTEXT-TRIGGER-CHARACTER
           :COMPLETION-CONTEXT-TRIGGER-KIND
           :COMPLETION-CONTEXT
           :COMPLETION-TRIGGER-KIND.TRIGGER-FOR-INCOMPLETE-COMPLETIONS
           :COMPLETION-TRIGGER-KIND.TRIGGER-CHARACTER
           :COMPLETION-TRIGGER-KIND.INVOKED
           :COMPLETION-PARAMS-CONTEXT
           :COMPLETION-PARAMS
           :COMPLETION-REGISTRATION-OPTIONS
           :COMPLETION-OPTIONS-RESOLVE-PROVIDER
           :COMPLETION-OPTIONS-ALL-COMMIT-CHARACTERS
           :COMPLETION-OPTIONS-TRIGGER-CHARACTERS
           :COMPLETION-OPTIONS
           :COMPLETION-CLIENT-CAPABILITIES-CONTEXT-SUPPORT
           :COMPLETION-CLIENT-CAPABILITIES-COMPLETION-ITEM-KIND
           :COMPLETION-CLIENT-CAPABILITIES-COMPLETION-ITEM
           :COMPLETION-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION
           :COMPLETION-CLIENT-CAPABILITIES
           :PUBLISH-DIAGNOSTICS-PARAMS-DIAGNOSTICS
           :PUBLISH-DIAGNOSTICS-PARAMS-VERSION
           :PUBLISH-DIAGNOSTICS-PARAMS-URI
           :PUBLISH-DIAGNOSTICS-PARAMS
           :PUBLISH-DIAGNOSTICS-CLIENT-CAPABILITIES-VERSION-SUPPORT
           :PUBLISH-DIAGNOSTICS-CLIENT-CAPABILITIES-TAG-SUPPORT
           :PUBLISH-DIAGNOSTICS-CLIENT-CAPABILITIES-RELATED-INFORMATION
           :PUBLISH-DIAGNOSTICS-CLIENT-CAPABILITIES
           :TEXT-DOCUMENT-SYNC-OPTIONS-SAVE
           :TEXT-DOCUMENT-SYNC-OPTIONS-WILL-SAVE-WAIT-UNTIL
           :TEXT-DOCUMENT-SYNC-OPTIONS-WILL-SAVE
           :TEXT-DOCUMENT-SYNC-CLIENT-CAPABILITIES-DID-SAVE
           :TEXT-DOCUMENT-SYNC-CLIENT-CAPABILITIES-WILL-SAVE-WAIT-UNTIL
           :TEXT-DOCUMENT-SYNC-CLIENT-CAPABILITIES-WILL-SAVE
           :TEXT-DOCUMENT-SYNC-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION
           :TEXT-DOCUMENT-SYNC-CLIENT-CAPABILITIES
           :DID-CLOSE-TEXT-DOCUMENT-PARAMS-TEXT-DOCUMENT
           :DID-CLOSE-TEXT-DOCUMENT-PARAMS
           :DID-SAVE-TEXT-DOCUMENT-PARAMS-TEXT
           :DID-SAVE-TEXT-DOCUMENT-PARAMS-TEXT-DOCUMENT
           :DID-SAVE-TEXT-DOCUMENT-PARAMS
           :TEXT-DOCUMENT-SAVE-REGISTRATION-OPTIONS-INCLUDE-TEXT
           :TEXT-DOCUMENT-SAVE-REGISTRATION-OPTIONS
           :SAVE-OPTIONS-INCLUDE-TEXT
           :SAVE-OPTIONS
           :TEXT-DOCUMENT-SAVE-REASON.FOCUS-OUT
           :TEXT-DOCUMENT-SAVE-REASON.AFTER-DELAY
           :TEXT-DOCUMENT-SAVE-REASON.MANUAL
           :WILL-SAVE-TEXT-DOCUMENT-PARAMS-REASON
           :WILL-SAVE-TEXT-DOCUMENT-PARAMS-TEXT-DOCUMENT
           :WILL-SAVE-TEXT-DOCUMENT-PARAMS
           :DID-CHANGE-TEXT-DOCUMENT-PARAMS-CONTENT-CHANGES
           :DID-CHANGE-TEXT-DOCUMENT-PARAMS-TEXT-DOCUMENT
           :DID-CHANGE-TEXT-DOCUMENT-PARAMS
           :TEXT-DOCUMENT-CHANGE-REGISTRATION-OPTIONS-SYNC-KIND
           :TEXT-DOCUMENT-CHANGE-REGISTRATION-OPTIONS
           :DID-OPEN-TEXT-DOCUMENT-PARAMS-TEXT-DOCUMENT
           :DID-OPEN-TEXT-DOCUMENT-PARAMS
           :TEXT-DOCUMENT-SYNC-OPTIONS-CHANGE
           :TEXT-DOCUMENT-SYNC-OPTIONS-OPEN-CLOSE
           :TEXT-DOCUMENT-SYNC-OPTIONS
           :TEXT-DOCUMENT-SYNC-KIND.INCREMENTAL
           :TEXT-DOCUMENT-SYNC-KIND.FULL
           :TEXT-DOCUMENT-SYNC-KIND.NONE
           :APPLY-WORKSPACE-EDIT-RESPONSE-FAILURE-REASON
           :APPLY-WORKSPACE-EDIT-RESPONSE-APPLIED
           :APPLY-WORKSPACE-EDIT-RESPONSE
           :APPLY-WORKSPACE-EDIT-PARAMS-EDIT
           :APPLY-WORKSPACE-EDIT-PARAMS-LABEL
           :APPLY-WORKSPACE-EDIT-PARAMS
           :EXECUTE-COMMAND-PARAMS-ARGUMENTS
           :EXECUTE-COMMAND-PARAMS-COMMAND
           :EXECUTE-COMMAND-PARAMS
           :EXECUTE-COMMAND-REGISTRATION-OPTIONS
           :EXECUTE-COMMAND-OPTIONS-COMMANDS
           :EXECUTE-COMMAND-OPTIONS
           :EXECUTE-COMMAND-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION
           :EXECUTE-COMMAND-CLIENT-CAPABILITIES
           :WORKSPACE-SYMBOL-PARAMS-QUERY
           :WORKSPACE-SYMBOL-PARAMS
           :WORKSPACE-SYMBOL-REGISTRATION-OPTIONS
           :WORKSPACE-SYMBOL-OPTIONS
           :WORKSPACE-SYMBOL-CLIENT-CAPABILITIES-SYMBOL-KIND
           :WORKSPACE-SYMBOL-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION
           :WORKSPACE-SYMBOL-CLIENT-CAPABILITIES
           :FILE-CHANGE-TYPE.DELETED
           :FILE-CHANGE-TYPE.CHANGED
           :FILE-CHANGE-TYPE.CREATED
           :FILE-EVENT-TYPE
           :FILE-EVENT-URI
           :FILE-EVENT
           :DID-CHANGE-WATCHED-FILES-PARAMS-CHANGES
           :DID-CHANGE-WATCHED-FILES-PARAMS
           :WATCH-KIND.DELETE
           :WATCH-KIND.CHANGE
           :WATCH-KIND.CREATE
           :FILE-SYSTEM-WATCHER-KIND
           :FILE-SYSTEM-WATCHER-GLOB-PATTERN
           :FILE-SYSTEM-WATCHER
           :DID-CHANGE-WATCHED-FILES-REGISTRATION-OPTIONS-WATCHERS
           :DID-CHANGE-WATCHED-FILES-REGISTRATION-OPTIONS
           :DID-CHANGE-WATCHED-FILES-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION
           :DID-CHANGE-WATCHED-FILES-CLIENT-CAPABILITIES
           :CONFIGURATION-ITEM-SECTION
           :CONFIGURATION-ITEM-SCOPE-URI
           :CONFIGURATION-ITEM
           :CONFIGURATION-PARAMS-ITEMS
           :CONFIGURATION-PARAMS
           :DID-CHANGE-CONFIGURATION-PARAMS-SETTINGS
           :DID-CHANGE-CONFIGURATION-PARAMS
           :DID-CHANGE-CONFIGURATION-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION
           :DID-CHANGE-CONFIGURATION-CLIENT-CAPABILITIES
           :WORKSPACE-FOLDERS-CHANGE-EVENT-REMOVED
           :WORKSPACE-FOLDERS-CHANGE-EVENT-ADDED
           :WORKSPACE-FOLDERS-CHANGE-EVENT
           :DID-CHANGE-WORKSPACE-FOLDERS-PARAMS-EVENT
           :DID-CHANGE-WORKSPACE-FOLDERS-PARAMS
           :WORKSPACE-FOLDER-NAME
           :WORKSPACE-FOLDER-URI
           :WORKSPACE-FOLDER
           :WORKSPACE-FOLDERS-SERVER-CAPABILITIES-CHANGE-NOTIFICATIONS
           :WORKSPACE-FOLDERS-SERVER-CAPABILITIES-SUPPORTED
           :WORKSPACE-FOLDERS-SERVER-CAPABILITIES
           :UNREGISTRATION-PARAMS-UNREGISTERATIONS
           :UNREGISTRATION-PARAMS
           :UNREGISTRATION-METHOD
           :UNREGISTRATION-ID
           :UNREGISTRATION
           :REGISTRATION-PARAMS-REGISTRATIONS
           :REGISTRATION-PARAMS
           :REGISTRATION-REGISTER-OPTIONS
           :REGISTRATION-METHOD
           :REGISTRATION-ID
           :REGISTRATION
           :WORK-DONE-PROGRESS-CANCEL-PARAMS-TOKEN
           :WORK-DONE-PROGRESS-CANCEL-PARAMS
           :WORK-DONE-PROGRESS-CREATE-PARAMS-TOKEN
           :WORK-DONE-PROGRESS-CREATE-PARAMS
           :LOG-MESSAGE-PARAMS-MESSAGE
           :LOG-MESSAGE-PARAMS-TYPE
           :LOG-MESSAGE-PARAMS
           :MESSAGE-ACTION-ITEM-TITLE
           :MESSAGE-ACTION-ITEM
           :SHOW-MESSAGE-REQUEST-PARAMS-ACTIONS
           :SHOW-MESSAGE-REQUEST-PARAMS-MESSAGE
           :SHOW-MESSAGE-REQUEST-PARAMS-TYPE
           :SHOW-MESSAGE-REQUEST-PARAMS
           :MESSAGE-TYPE.LOG
           :MESSAGE-TYPE.INFO
           :MESSAGE-TYPE.WARNING
           :MESSAGE-TYPE.ERROR
           :SHOW-MESSAGE-PARAMS-MESSAGE
           :SHOW-MESSAGE-PARAMS-TYPE
           :SHOW-MESSAGE-PARAMS
           :INITIALIZED-PARAMS
           :SERVER-CAPABILITIES-EXPERIMENTAL
           :SERVER-CAPABILITIES-WORKSPACE
           :SERVER-CAPABILITIES-WORKSPACE-SYMBOL-PROVIDER
           :SERVER-CAPABILITIES-SELECTION-RANGE-PROVIDER
           :SERVER-CAPABILITIES-EXECUTE-COMMAND-PROVIDER
           :SERVER-CAPABILITIES-FOLDING-RANGE-PROVIDER
           :SERVER-CAPABILITIES-RENAME-PROVIDER
           :SERVER-CAPABILITIES-DOCUMENT-ON-TYPE-FORMATTING-PROVIDER
           :SERVER-CAPABILITIES-DOCUMENT-RANGE-FORMATTING-PROVIDER
           :SERVER-CAPABILITIES-DOCUMENT-FORMATTING-PROVIDER
           :SERVER-CAPABILITIES-COLOR-PROVIDER
           :SERVER-CAPABILITIES-DOCUMENT-LINK-PROVIDER
           :SERVER-CAPABILITIES-CODE-LENS-PROVIDER
           :SERVER-CAPABILITIES-CODE-ACTION-PROVIDER
           :SERVER-CAPABILITIES-DOCUMENT-SYMBOL-PROVIDER
           :SERVER-CAPABILITIES-DOCUMENT-HIGHLIGHT-PROVIDER
           :SERVER-CAPABILITIES-REFERENCES-PROVIDER
           :SERVER-CAPABILITIES-IMPLEMENTATION-PROVIDER
           :SERVER-CAPABILITIES-TYPE-DEFINITION-PROVIDER
           :SERVER-CAPABILITIES-DEFINITION-PROVIDER
           :SERVER-CAPABILITIES-DECLARATION-PROVIDER
           :SERVER-CAPABILITIES-SIGNATURE-HELP-PROVIDER
           :SERVER-CAPABILITIES-HOVER-PROVIDER
           :SERVER-CAPABILITIES-COMPLETION-PROVIDER
           :SERVER-CAPABILITIES-TEXT-DOCUMENT-SYNC
           :SERVER-CAPABILITIES
           :INITIALIZE-ERROR-RETRY
           :INITIALIZE-ERROR
           :INITIALIZE-ERROR.UNKNOWN-PROTOCOL-VERSION
           :INITIALIZE-RESULT-SERVER-INFO
           :INITIALIZE-RESULT-CAPABILITIES
           :INITIALIZE-RESULT
           :CLIENT-CAPABILITIES-EXPERIMENTAL
           :CLIENT-CAPABILITIES-WINDOW
           :CLIENT-CAPABILITIES-TEXT-DOCUMENT
           :CLIENT-CAPABILITIES-WORKSPACE
           :CLIENT-CAPABILITIES
           :TEXT-DOCUMENT-CLIENT-CAPABILITIES-SELECTION-RANGE
           :TEXT-DOCUMENT-CLIENT-CAPABILITIES-FOLDING-RANGE
           :TEXT-DOCUMENT-CLIENT-CAPABILITIES-PUBLISH-DIAGNOSTICS
           :TEXT-DOCUMENT-CLIENT-CAPABILITIES-RENAME
           :TEXT-DOCUMENT-CLIENT-CAPABILITIES-ON-TYPE-FORMATTING
           :TEXT-DOCUMENT-CLIENT-CAPABILITIES-RANGE-FORMATTING
           :TEXT-DOCUMENT-CLIENT-CAPABILITIES-FORMATTING
           :TEXT-DOCUMENT-CLIENT-CAPABILITIES-COLOR-PROVIDER
           :TEXT-DOCUMENT-CLIENT-CAPABILITIES-DOCUMENT-LINK
           :TEXT-DOCUMENT-CLIENT-CAPABILITIES-CODE-LENS
           :TEXT-DOCUMENT-CLIENT-CAPABILITIES-CODE-ACTION
           :TEXT-DOCUMENT-CLIENT-CAPABILITIES-DOCUMENT-SYMBOL
           :TEXT-DOCUMENT-CLIENT-CAPABILITIES-DOCUMENT-HIGHLIGHT
           :TEXT-DOCUMENT-CLIENT-CAPABILITIES-REFERENCES
           :TEXT-DOCUMENT-CLIENT-CAPABILITIES-IMPLEMENTATION
           :TEXT-DOCUMENT-CLIENT-CAPABILITIES-TYPE-DEFINITION
           :TEXT-DOCUMENT-CLIENT-CAPABILITIES-DEFINITION
           :TEXT-DOCUMENT-CLIENT-CAPABILITIES-DECLARATION
           :TEXT-DOCUMENT-CLIENT-CAPABILITIES-SIGNATURE-HELP
           :TEXT-DOCUMENT-CLIENT-CAPABILITIES-HOVER
           :TEXT-DOCUMENT-CLIENT-CAPABILITIES-COMPLETION
           :TEXT-DOCUMENT-CLIENT-CAPABILITIES-SYNCHRONIZATION
           :TEXT-DOCUMENT-CLIENT-CAPABILITIES
           :INITIALIZE-PARAMS-WORKSPACE-FOLDERS
           :INITIALIZE-PARAMS-TRACE
           :INITIALIZE-PARAMS-CAPABILITIES
           :INITIALIZE-PARAMS-INITIALIZATION-OPTIONS
           :INITIALIZE-PARAMS-ROOT-URI
           :INITIALIZE-PARAMS-ROOT-PATH
           :INITIALIZE-PARAMS-CLIENT-INFO
           :INITIALIZE-PARAMS-PROCESS-ID
           :INITIALIZE-PARAMS
           :PARTIAL-RESULT-PARAMS-PARTIAL-RESULT-TOKEN
           :PARTIAL-RESULT-PARAMS
           :WORK-DONE-PROGRESS-OPTIONS-WORK-DONE-PROGRESS
           :WORK-DONE-PROGRESS-OPTIONS
           :WORK-DONE-PROGRESS-PARAMS-WORK-DONE-TOKEN
           :WORK-DONE-PROGRESS-PARAMS
           :WORK-DONE-PROGRESS-END-MESSAGE
           :WORK-DONE-PROGRESS-END-KIND
           :WORK-DONE-PROGRESS-END
           :WORK-DONE-PROGRESS-REPORT-PERCENTAGE
           :WORK-DONE-PROGRESS-REPORT-MESSAGE
           :WORK-DONE-PROGRESS-REPORT-CANCELLABLE
           :WORK-DONE-PROGRESS-REPORT-KIND
           :WORK-DONE-PROGRESS-REPORT
           :WORK-DONE-PROGRESS-BEGIN-PERCENTAGE
           :WORK-DONE-PROGRESS-BEGIN-MESSAGE
           :WORK-DONE-PROGRESS-BEGIN-CANCELLABLE
           :WORK-DONE-PROGRESS-BEGIN-TITLE
           :WORK-DONE-PROGRESS-BEGIN-KIND
           :WORK-DONE-PROGRESS-BEGIN
           :MARKUP-CONTENT-VALUE
           :MARKUP-CONTENT-KIND
           :MARKUP-CONTENT
           :MARKUP-KIND.MARKDOWN
           :MARKUP-KIND.PLAIN-TEXT
           :TEXT-DOCUMENT-REGISTRATION-OPTIONS-DOCUMENT-SELECTOR
           :TEXT-DOCUMENT-REGISTRATION-OPTIONS
           :STATIC-REGISTRATION-OPTIONS-ID
           :STATIC-REGISTRATION-OPTIONS
           :DOCUMENT-FILTER-PATTERN
           :DOCUMENT-FILTER-SCHEME
           :DOCUMENT-FILTER-LANGUAGE
           :DOCUMENT-FILTER
           :TEXT-DOCUMENT-POSITION-PARAMS-POSITION
           :TEXT-DOCUMENT-POSITION-PARAMS-TEXT-DOCUMENT
           :TEXT-DOCUMENT-POSITION-PARAMS
           :VERSIONED-TEXT-DOCUMENT-IDENTIFIER-VERSION
           :VERSIONED-TEXT-DOCUMENT-IDENTIFIER
           :TEXT-DOCUMENT-ITEM-TEXT
           :TEXT-DOCUMENT-ITEM-VERSION
           :TEXT-DOCUMENT-ITEM-LANGUAGE-ID
           :TEXT-DOCUMENT-ITEM-URI
           :TEXT-DOCUMENT-ITEM
           :TEXT-DOCUMENT-IDENTIFIER-URI
           :TEXT-DOCUMENT-IDENTIFIER
           :FAILURE-HANDLING-KIND.UNDO
           :FAILURE-HANDLING-KIND.TEXT-ONLY-TRANSACTIONAL
           :FAILURE-HANDLING-KIND.TRANSACTIONAL
           :FAILURE-HANDLING-KIND.ABORT
           :RESOURCE-OPERATION-KIND.DELETE
           :RESOURCE-OPERATION-KIND.RENAME
           :RESOURCE-OPERATION-KIND.CREATE
           :WORKSPACE-EDIT-CLIENT-CAPABILITIES-FAILURE-HANDLING
           :WORKSPACE-EDIT-CLIENT-CAPABILITIES-RESOURCE-OPERATIONS
           :WORKSPACE-EDIT-CLIENT-CAPABILITIES-DOCUMENT-CHANGES
           :WORKSPACE-EDIT-CLIENT-CAPABILITIES
           :WORKSPACE-EDIT-DOCUMENT-CHANGES
           :WORKSPACE-EDIT-CHANGES
           :WORKSPACE-EDIT
           :DELETE-FILE-URI
           :DELETE-FILE-KIND
           :DELETE-FILE
           :DELETE-FILE-OPTIONS-IGNORE-IF-NOT-EXISTS
           :DELETE-FILE-OPTIONS-RECURSIVE
           :DELETE-FILE-OPTIONS
           :RENAME-FILE-NEW-URI
           :RENAME-FILE-OLD-URI
           :RENAME-FILE-KIND
           :RENAME-FILE
           :RENAME-FILE-OPTIONS-IGNORE-IF-EXISTS
           :RENAME-FILE-OPTIONS-OVERWRITE
           :RENAME-FILE-OPTIONS
           :CREATE-FILE-URI
           :CREATE-FILE-KIND
           :CREATE-FILE
           :CREATE-FILE-OPTIONS-IGNORE-IF-EXISTS
           :CREATE-FILE-OPTIONS-OVERWRITE
           :CREATE-FILE-OPTIONS
           :TEXT-DOCUMENT-EDIT-EDITS
           :TEXT-DOCUMENT-EDIT-TEXT-DOCUMENT
           :TEXT-DOCUMENT-EDIT
           :TEXT-EDIT-NEW-TEXT
           :TEXT-EDIT-RANGE
           :TEXT-EDIT
           :COMMAND-ARGUMENTS
           :COMMAND-COMMAND
           :COMMAND-TITLE
           :COMMAND
           :DIAGNOSTIC-RELATED-INFORMATION-MESSAGE
           :DIAGNOSTIC-RELATED-INFORMATION-LOCATION
           :DIAGNOSTIC-TAG.DEPRECATED
           :DIAGNOSTIC-TAG.UNNECESSARY
           :DIAGNOSTIC-SEVERITY.HINT
           :DIAGNOSTIC-SEVERITY.INFORMATION
           :DIAGNOSTIC-SEVERITY.WARNING
           :DIAGNOSTIC-SEVERITY.ERROR
           :DIAGNOSTIC-RELATED-INFORMATION
           :DIAGNOSTIC-TAGS
           :DIAGNOSTIC-MESSAGE
           :DIAGNOSTIC-SOURCE
           :DIAGNOSTIC-CODE
           :DIAGNOSTIC-SEVERITY
           :DIAGNOSTIC-RANGE
           :DIAGNOSTIC
           :LOCATION-LINK-TARGET-SELECTION-RANGE
           :LOCATION-LINK-TARGET-RANGE
           :LOCATION-LINK-TARGET-URI
           :LOCATION-LINK-ORIGIN-SELECTION-RANGE
           :LOCATION-LINK
           :LOCATION-RANGE
           :LOCATION-URI
           :LOCATION
           :RANGE-END
           :RANGE-START
           :RANGE
           :POSITION-CHARACTER
           :POSITION-LINE
           :POSITION
           :PROGRESS-PARAMS-VALUE
           :PROGRESS-PARAMS-TOKEN
           :PROGRESS-PARAMS
           :CANCEL-PARAMS-ID
           :CANCEL-PARAMS
           :NOTIFICATION-MESSAGE-PARAMS
           :NOTIFICATION-MESSAGE-METHOD
           :NOTIFICATION-MESSAGE
           :ERROR-CODES.CONTENT-MODIFIED
           :ERROR-CODES.REQUEST-CANCELLED
           :ERROR-CODES.UNKNOWN-ERROR-CODE
           :ERROR-CODES.SERVER-NOT-INITIALIZED
           :ERROR-CODES.SERVER-ERROR-END
           :ERROR-CODES.SERVER-ERROR-START
           :ERROR-CODES.INTERNAL-ERROR
           :ERROR-CODES.INVALID-PARAMS
           :ERROR-CODES.METHOD-NOT-FOUND
           :ERROR-CODES.INVALID-REQUEST
           :ERROR-CODES.PARSE-ERROR
           :RESPONSE-ERROR-DATA
           :RESPONSE-ERROR-MESSAGE
           :RESPONSE-ERROR-CODE
           :RESPONSE-ERROR
           :RESPONSE-MESSAGE-ERROR
           :RESPONSE-MESSAGE-RESULT
           :RESPONSE-MESSAGE-ID
           :RESPONSE-MESSAGE
           :REQUEST-MESSAGE-PARAMS
           :REQUEST-MESSAGE-METHOD
           :REQUEST-MESSAGE-ID
           :REQUEST-MESSAGE
           :MESSAGE-JSONRPC
           :MESSAGE))
(IN-PACKAGE :cl-lsp.lem-LSP-UTILS/PROTOCOL)
(cl-package-locks:lock-package :cl-lsp.lem-lsp-utils/protocol)
(COMMON-LISP:DEFCLASS MESSAGE (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((JSONRPC :INITARG :JSONRPC :DOCUMENTATION "" :TYPE COMMON-LISP:STRING :READER
                        MESSAGE-JSONRPC)))

(COMMON-LISP:DEFCLASS REQUEST-MESSAGE (MESSAGE)
                      ((ID :INITARG :ID :DOCUMENTATION "*
* The request id."
                        :TYPE (COMMON-LISP:OR COMMON-LISP:NUMBER COMMON-LISP:STRING) :READER
                        REQUEST-MESSAGE-ID)
                       (METHOD :INITARG :METHOD :DOCUMENTATION "*
* The method to be invoked."
                        :TYPE COMMON-LISP:STRING :READER REQUEST-MESSAGE-METHOD)
                       (PARAMS? :INITARG :PARAMS :DOCUMENTATION "*
* The method's params."
                        :TYPE (COMMON-LISP:OR ARRAY OBJECT) :READER REQUEST-MESSAGE-PARAMS)))

(COMMON-LISP:DEFCLASS RESPONSE-MESSAGE (MESSAGE)
                      ((ID :INITARG :ID :DOCUMENTATION "*
* The request id."
                        :TYPE
                        (COMMON-LISP:OR COMMON-LISP:NUMBER COMMON-LISP:STRING
                                        (COMMON-LISP:OR COMMON-LISP:NULL (COMMON-LISP:EQL :NULL)))
                        :READER RESPONSE-MESSAGE-ID)
                       (RESULT? :INITARG :RESULT :DOCUMENTATION "*
* The result of a request. This member is REQUIRED on success.
* This member MUST NOT exist if there was an error invoking the method."
                        :TYPE
                        (COMMON-LISP:OR COMMON-LISP:STRING COMMON-LISP:NUMBER
                                        LEM-LSP-UTILS/TYPE:TS-BOOLEAN OBJECT
                                        (COMMON-LISP:OR COMMON-LISP:NULL (COMMON-LISP:EQL :NULL)))
                        :READER RESPONSE-MESSAGE-RESULT)
                       (ERROR? :INITARG :ERROR :DOCUMENTATION "*
* The error object in case a request fails."
                        :TYPE RESPONSE-ERROR :READER RESPONSE-MESSAGE-ERROR)))

(COMMON-LISP:DEFCLASS RESPONSE-ERROR (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((CODE :INITARG :CODE :DOCUMENTATION "*
* A number indicating the error type that occurred."
                        :TYPE COMMON-LISP:NUMBER :READER RESPONSE-ERROR-CODE)
                       (MESSAGE :INITARG :MESSAGE :DOCUMENTATION "*
* A string providing a short description of the error."
                        :TYPE COMMON-LISP:STRING :READER RESPONSE-ERROR-MESSAGE)
                       (DATA? :INITARG :DATA :DOCUMENTATION "*
* A primitive or structured value that contains additional
* information about the error. Can be omitted."
                        :TYPE
                        (COMMON-LISP:OR COMMON-LISP:STRING COMMON-LISP:NUMBER
                                        LEM-LSP-UTILS/TYPE:TS-BOOLEAN ARRAY OBJECT
                                        (COMMON-LISP:OR COMMON-LISP:NULL (COMMON-LISP:EQL :NULL)))
                        :READER RESPONSE-ERROR-DATA)))

(COMMON-LISP:PROGN
 (COMMON-LISP:DEFTYPE ERROR-CODES () COMMON-LISP:T)
 (COMMON-LISP:DEFPARAMETER ERROR-CODES.PARSE-ERROR -32700)
 (COMMON-LISP:DEFPARAMETER ERROR-CODES.INVALID-REQUEST -32600)
 (COMMON-LISP:DEFPARAMETER ERROR-CODES.METHOD-NOT-FOUND -32601)
 (COMMON-LISP:DEFPARAMETER ERROR-CODES.INVALID-PARAMS -32602)
 (COMMON-LISP:DEFPARAMETER ERROR-CODES.INTERNAL-ERROR -32603)
 (COMMON-LISP:DEFPARAMETER ERROR-CODES.SERVER-ERROR-START -32099)
 (COMMON-LISP:DEFPARAMETER ERROR-CODES.SERVER-ERROR-END -32000)
 (COMMON-LISP:DEFPARAMETER ERROR-CODES.SERVER-NOT-INITIALIZED -32002)
 (COMMON-LISP:DEFPARAMETER ERROR-CODES.UNKNOWN-ERROR-CODE -32001)
 (COMMON-LISP:DEFPARAMETER ERROR-CODES.REQUEST-CANCELLED -32800)
 (COMMON-LISP:DEFPARAMETER ERROR-CODES.CONTENT-MODIFIED -32801))

(COMMON-LISP:DEFCLASS NOTIFICATION-MESSAGE (MESSAGE)
                      ((METHOD :INITARG :METHOD :DOCUMENTATION "*
* The method to be invoked."
                        :TYPE COMMON-LISP:STRING :READER NOTIFICATION-MESSAGE-METHOD)
                       (PARAMS? :INITARG :PARAMS :DOCUMENTATION "*
* The notification's params."
                        :TYPE (COMMON-LISP:OR ARRAY OBJECT) :READER NOTIFICATION-MESSAGE-PARAMS)))

(COMMON-LISP:DEFCLASS CANCEL-PARAMS (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((ID :INITARG :ID :DOCUMENTATION "*
* The request id to cancel."
                        :TYPE (COMMON-LISP:OR COMMON-LISP:NUMBER COMMON-LISP:STRING) :READER
                        CANCEL-PARAMS-ID)))

(COMMON-LISP:DEFTYPE PROGRESS-TOKEN () '(COMMON-LISP:OR COMMON-LISP:NUMBER COMMON-LISP:STRING))

(COMMON-LISP:DEFCLASS PROGRESS-PARAMS (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((TOKEN :INITARG :TOKEN :DOCUMENTATION "*
* The progress token provided by the client or server."
                        :TYPE PROGRESS-TOKEN :READER PROGRESS-PARAMS-TOKEN)
                       (VALUE :INITARG :VALUE :DOCUMENTATION "*
* The progress data."
                        :TYPE T :READER PROGRESS-PARAMS-VALUE)))

(COMMON-LISP:DEFTYPE DOCUMENT-URI () 'COMMON-LISP:STRING)

(COMMON-LISP:DEFCLASS POSITION (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((LINE :INITARG :LINE :DOCUMENTATION "*
* Line position in a document (zero-based)."
                        :TYPE COMMON-LISP:NUMBER :READER POSITION-LINE)
                       (CHARACTER :INITARG :CHARACTER :DOCUMENTATION "*
* Character offset on a line in a document (zero-based). Assuming that the line is
* represented as a string, the `character` value represents the gap between the
* `character` and `character + 1`.
*
* If the character value is greater than the line length it defaults back to the
* line length."
                        :TYPE COMMON-LISP:NUMBER :READER POSITION-CHARACTER)))

(COMMON-LISP:DEFCLASS RANGE (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((START :INITARG :START :DOCUMENTATION "*
* The range's start position."
                        :TYPE POSITION :READER RANGE-START)
                       (END :INITARG :END :DOCUMENTATION "*
* The range's end position."
                        :TYPE POSITION :READER RANGE-END)))

(COMMON-LISP:DEFCLASS LOCATION (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((URI :INITARG :URI :DOCUMENTATION "" :TYPE DOCUMENT-URI :READER LOCATION-URI)
                       (RANGE :INITARG :RANGE :DOCUMENTATION "" :TYPE RANGE :READER LOCATION-RANGE)))

(COMMON-LISP:DEFCLASS LOCATION-LINK (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((ORIGIN-SELECTION-RANGE? :INITARG :ORIGIN-SELECTION-RANGE :DOCUMENTATION "*
* Span of the origin of this link.
*
* Used as the underlined span for mouse interaction. Defaults to the word range at
* the mouse position."
                        :TYPE RANGE :READER LOCATION-LINK-ORIGIN-SELECTION-RANGE)
                       (TARGET-URI :INITARG :TARGET-URI :DOCUMENTATION "*
* The target resource identifier of this link."
                        :TYPE DOCUMENT-URI :READER LOCATION-LINK-TARGET-URI)
                       (TARGET-RANGE :INITARG :TARGET-RANGE :DOCUMENTATION "*
* The full target range of this link. If the target for example is a symbol then target range is the
* range enclosing this symbol not including leading/trailing whitespace but everything else
* like comments. This information is typically used to highlight the range in the editor."
                        :TYPE RANGE :READER LOCATION-LINK-TARGET-RANGE)
                       (TARGET-SELECTION-RANGE :INITARG :TARGET-SELECTION-RANGE :DOCUMENTATION "*
* The range that should be selected and revealed when this link is being followed, e.g the name of a function.
* Must be contained by the the `targetRange`. See also `DocumentSymbol#range`"
                        :TYPE RANGE :READER LOCATION-LINK-TARGET-SELECTION-RANGE)))

(COMMON-LISP:DEFCLASS DIAGNOSTIC (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((RANGE :INITARG :RANGE :DOCUMENTATION "*
* The range at which the message applies."
                        :TYPE RANGE :READER DIAGNOSTIC-RANGE)
                       (SEVERITY? :INITARG :SEVERITY :DOCUMENTATION "*
* The diagnostic's severity. Can be omitted. If omitted it is up to the
* client to interpret diagnostics as error, warning, info or hint."
                        :TYPE DIAGNOSTIC-SEVERITY :READER DIAGNOSTIC-SEVERITY)
                       (CODE? :INITARG :CODE :DOCUMENTATION "*
* The diagnostic's code, which might appear in the user interface."
                        :TYPE (COMMON-LISP:OR COMMON-LISP:NUMBER COMMON-LISP:STRING) :READER
                        DIAGNOSTIC-CODE)
                       (SOURCE? :INITARG :SOURCE :DOCUMENTATION "*
* A human-readable string describing the source of this
* diagnostic, e.g. 'typescript' or 'super lint'."
                        :TYPE COMMON-LISP:STRING :READER DIAGNOSTIC-SOURCE)
                       (MESSAGE :INITARG :MESSAGE :DOCUMENTATION "*
* The diagnostic's message."
                        :TYPE COMMON-LISP:STRING :READER DIAGNOSTIC-MESSAGE)
                       (TAGS? :INITARG :TAGS :DOCUMENTATION "*
* Additional metadata about the diagnostic.
*
* @since 3.15.0"
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY DIAGNOSTIC-TAG) :READER DIAGNOSTIC-TAGS)
                       (RELATED-INFORMATION? :INITARG :RELATED-INFORMATION :DOCUMENTATION "*
* An array of related diagnostic information, e.g. when symbol-names within
* a scope collide all definitions can be marked via this property."
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY DIAGNOSTIC-RELATED-INFORMATION) :READER
                        DIAGNOSTIC-RELATED-INFORMATION)))

(COMMON-LISP:PROGN
 (COMMON-LISP:DEFTYPE DIAGNOSTIC-SEVERITY () COMMON-LISP:T)
 (COMMON-LISP:DEFPARAMETER DIAGNOSTIC-SEVERITY.ERROR 1)
 (COMMON-LISP:DEFPARAMETER DIAGNOSTIC-SEVERITY.WARNING 2)
 (COMMON-LISP:DEFPARAMETER DIAGNOSTIC-SEVERITY.INFORMATION 3)
 (COMMON-LISP:DEFPARAMETER DIAGNOSTIC-SEVERITY.HINT 4))

(COMMON-LISP:DEFTYPE DIAGNOSTIC-SEVERITY ()
  '(COMMON-LISP:OR (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 1)
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 2)
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 3)
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 4)))

(COMMON-LISP:PROGN
 (COMMON-LISP:DEFTYPE DIAGNOSTIC-TAG () COMMON-LISP:T)
 (COMMON-LISP:DEFPARAMETER DIAGNOSTIC-TAG.UNNECESSARY 1)
 (COMMON-LISP:DEFPARAMETER DIAGNOSTIC-TAG.DEPRECATED 2))

(COMMON-LISP:DEFTYPE DIAGNOSTIC-TAG ()
  '(COMMON-LISP:OR (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 1)
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 2)))

(COMMON-LISP:DEFCLASS DIAGNOSTIC-RELATED-INFORMATION (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((LOCATION :INITARG :LOCATION :DOCUMENTATION "*
* The location of this related diagnostic information."
                        :TYPE LOCATION :READER DIAGNOSTIC-RELATED-INFORMATION-LOCATION)
                       (MESSAGE :INITARG :MESSAGE :DOCUMENTATION "*
* The message of this related diagnostic information."
                        :TYPE COMMON-LISP:STRING :READER DIAGNOSTIC-RELATED-INFORMATION-MESSAGE)))

(COMMON-LISP:DEFCLASS COMMAND (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((TITLE :INITARG :TITLE :DOCUMENTATION "*
* Title of the command, like `save`."
                        :TYPE COMMON-LISP:STRING :READER COMMAND-TITLE)
                       (COMMAND :INITARG :COMMAND :DOCUMENTATION "*
* The identifier of the actual command handler."
                        :TYPE COMMON-LISP:STRING :READER COMMAND-COMMAND)
                       (ARGUMENTS? :INITARG :ARGUMENTS :DOCUMENTATION "*
* Arguments that the command handler should be
* invoked with."
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY COMMON-LISP:T) :READER COMMAND-ARGUMENTS)))

(COMMON-LISP:DEFCLASS TEXT-EDIT (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((RANGE :INITARG :RANGE :DOCUMENTATION "*
* The range of the text document to be manipulated. To insert
* text into a document create a range where start === end."
                        :TYPE RANGE :READER TEXT-EDIT-RANGE)
                       (NEW-TEXT :INITARG :NEW-TEXT :DOCUMENTATION "*
* The string to be inserted. For delete operations use an
* empty string."
                        :TYPE COMMON-LISP:STRING :READER TEXT-EDIT-NEW-TEXT)))

(COMMON-LISP:DEFCLASS TEXT-DOCUMENT-EDIT (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((TEXT-DOCUMENT :INITARG :TEXT-DOCUMENT :DOCUMENTATION "*
* The text document to change."
                        :TYPE VERSIONED-TEXT-DOCUMENT-IDENTIFIER :READER
                        TEXT-DOCUMENT-EDIT-TEXT-DOCUMENT)
                       (EDITS :INITARG :EDITS :DOCUMENTATION "*
* The edits to be applied."
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY TEXT-EDIT) :READER
                        TEXT-DOCUMENT-EDIT-EDITS)))

(COMMON-LISP:DEFCLASS CREATE-FILE-OPTIONS (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((OVERWRITE? :INITARG :OVERWRITE :DOCUMENTATION "*
* Overwrite existing file. Overwrite wins over `ignoreIfExists`"
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER CREATE-FILE-OPTIONS-OVERWRITE)
                       (IGNORE-IF-EXISTS? :INITARG :IGNORE-IF-EXISTS :DOCUMENTATION "*
* Ignore if exists."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        CREATE-FILE-OPTIONS-IGNORE-IF-EXISTS)))

(COMMON-LISP:DEFCLASS CREATE-FILE (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((KIND :INITARG :KIND :DOCUMENTATION "*
* A create"
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER "create") :READER
                        CREATE-FILE-KIND)
                       (URI :INITARG :URI :DOCUMENTATION "*
* The resource to create."
                        :TYPE DOCUMENT-URI :READER CREATE-FILE-URI)
                       (OPTIONS? :INITARG :OPTIONS :DOCUMENTATION "*
* Additional options"
                        :TYPE CREATE-FILE-OPTIONS :READER CREATE-FILE-OPTIONS)))

(COMMON-LISP:DEFCLASS RENAME-FILE-OPTIONS (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((OVERWRITE? :INITARG :OVERWRITE :DOCUMENTATION "*
* Overwrite target if existing. Overwrite wins over `ignoreIfExists`"
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER RENAME-FILE-OPTIONS-OVERWRITE)
                       (IGNORE-IF-EXISTS? :INITARG :IGNORE-IF-EXISTS :DOCUMENTATION "*
* Ignores if target exists."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        RENAME-FILE-OPTIONS-IGNORE-IF-EXISTS)))

(COMMON-LISP:DEFCLASS RENAME-FILE (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((KIND :INITARG :KIND :DOCUMENTATION "*
* A rename"
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER "rename") :READER
                        RENAME-FILE-KIND)
                       (OLD-URI :INITARG :OLD-URI :DOCUMENTATION "*
* The old (existing) location."
                        :TYPE DOCUMENT-URI :READER RENAME-FILE-OLD-URI)
                       (NEW-URI :INITARG :NEW-URI :DOCUMENTATION "*
* The new location."
                        :TYPE DOCUMENT-URI :READER RENAME-FILE-NEW-URI)
                       (OPTIONS? :INITARG :OPTIONS :DOCUMENTATION "*
* Rename options."
                        :TYPE RENAME-FILE-OPTIONS :READER RENAME-FILE-OPTIONS)))

(COMMON-LISP:DEFCLASS DELETE-FILE-OPTIONS (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((RECURSIVE? :INITARG :RECURSIVE :DOCUMENTATION "*
* Delete the content recursively if a folder is denoted."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER DELETE-FILE-OPTIONS-RECURSIVE)
                       (IGNORE-IF-NOT-EXISTS? :INITARG :IGNORE-IF-NOT-EXISTS :DOCUMENTATION "*
* Ignore the operation if the file doesn't exist."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        DELETE-FILE-OPTIONS-IGNORE-IF-NOT-EXISTS)))

(COMMON-LISP:DEFCLASS DELETE-FILE (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((KIND :INITARG :KIND :DOCUMENTATION "*
* A delete"
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER "delete") :READER
                        DELETE-FILE-KIND)
                       (URI :INITARG :URI :DOCUMENTATION "*
* The file to delete."
                        :TYPE DOCUMENT-URI :READER DELETE-FILE-URI)
                       (OPTIONS? :INITARG :OPTIONS :DOCUMENTATION "*
* Delete options."
                        :TYPE DELETE-FILE-OPTIONS :READER DELETE-FILE-OPTIONS)))

(COMMON-LISP:DEFCLASS WORKSPACE-EDIT (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((CHANGES? :INITARG :CHANGES :DOCUMENTATION "*
* Holds changes to existing resources."
                        :TYPE
                        (LEM-LSP-UTILS/TYPE:TS-INTERFACE
                         ("uri" :TYPE
                          (LEM-LSP-UTILS/TYPE:TS-OBJECT DOCUMENT-URI
                           (LEM-LSP-UTILS/TYPE:TS-ARRAY TEXT-EDIT))
                          :OPTIONAL-P COMMON-LISP:T))
                        :READER WORKSPACE-EDIT-CHANGES)
                       (DOCUMENT-CHANGES? :INITARG :DOCUMENT-CHANGES :DOCUMENTATION "*
* Depending on the client capability `workspace.workspaceEdit.resourceOperations` document changes
* are either an array of `TextDocumentEdit`s to express changes to n different text documents
* where each text document edit addresses a specific version of a text document. Or it can contain
* above `TextDocumentEdit`s mixed with create, rename and delete file / folder operations.
*
* Whether a client supports versioned document edits is expressed via
* `workspace.workspaceEdit.documentChanges` client capability.
*
* If a client neither supports `documentChanges` nor `workspace.workspaceEdit.resourceOperations` then
* only plain `TextEdit`s using the `changes` property are supported."
                        :TYPE
                        (COMMON-LISP:OR (LEM-LSP-UTILS/TYPE:TS-ARRAY TEXT-DOCUMENT-EDIT)
                                        (LEM-LSP-UTILS/TYPE:TS-ARRAY
                                         (COMMON-LISP:OR TEXT-DOCUMENT-EDIT CREATE-FILE RENAME-FILE
                                                         DELETE-FILE)))
                        :READER WORKSPACE-EDIT-DOCUMENT-CHANGES)))

(COMMON-LISP:DEFCLASS WORKSPACE-EDIT-CLIENT-CAPABILITIES (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((DOCUMENT-CHANGES? :INITARG :DOCUMENT-CHANGES :DOCUMENTATION "*
* The client supports versioned document changes in `WorkspaceEdit`s"
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        WORKSPACE-EDIT-CLIENT-CAPABILITIES-DOCUMENT-CHANGES)
                       (RESOURCE-OPERATIONS? :INITARG :RESOURCE-OPERATIONS :DOCUMENTATION "*
* The resource operations the client supports. Clients should at least
* support 'create', 'rename' and 'delete' files and folders.
*
* @since 3.13.0"
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY RESOURCE-OPERATION-KIND) :READER
                        WORKSPACE-EDIT-CLIENT-CAPABILITIES-RESOURCE-OPERATIONS)
                       (FAILURE-HANDLING? :INITARG :FAILURE-HANDLING :DOCUMENTATION "*
* The failure handling strategy of a client if applying the workspace edit
* fails.
*
* @since 3.13.0"
                        :TYPE FAILURE-HANDLING-KIND :READER
                        WORKSPACE-EDIT-CLIENT-CAPABILITIES-FAILURE-HANDLING)))

(COMMON-LISP:DEFTYPE RESOURCE-OPERATION-KIND ()
  '(COMMON-LISP:OR (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER "create")
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER "rename")
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER "delete")))

(COMMON-LISP:PROGN
 (COMMON-LISP:DEFTYPE RESOURCE-OPERATION-KIND () COMMON-LISP:T)
 (COMMON-LISP:DEFPARAMETER RESOURCE-OPERATION-KIND.CREATE "create")
 (COMMON-LISP:DEFPARAMETER RESOURCE-OPERATION-KIND.RENAME "rename")
 (COMMON-LISP:DEFPARAMETER RESOURCE-OPERATION-KIND.DELETE "delete"))

(COMMON-LISP:DEFTYPE FAILURE-HANDLING-KIND ()
  '(COMMON-LISP:OR (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER "abort")
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER "transactional")
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER "undo")
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER "textOnlyTransactional")))

(COMMON-LISP:PROGN
 (COMMON-LISP:DEFTYPE FAILURE-HANDLING-KIND () COMMON-LISP:T)
 (COMMON-LISP:DEFPARAMETER FAILURE-HANDLING-KIND.ABORT "abort")
 (COMMON-LISP:DEFPARAMETER FAILURE-HANDLING-KIND.TRANSACTIONAL "transactional")
 (COMMON-LISP:DEFPARAMETER FAILURE-HANDLING-KIND.TEXT-ONLY-TRANSACTIONAL "textOnlyTransactional")
 (COMMON-LISP:DEFPARAMETER FAILURE-HANDLING-KIND.UNDO "undo"))

(COMMON-LISP:DEFCLASS TEXT-DOCUMENT-IDENTIFIER (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((URI :INITARG :URI :DOCUMENTATION "*
* The text document's URI."
                        :TYPE DOCUMENT-URI :READER TEXT-DOCUMENT-IDENTIFIER-URI)))

(COMMON-LISP:DEFCLASS TEXT-DOCUMENT-ITEM (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((URI :INITARG :URI :DOCUMENTATION "*
* The text document's URI."
                        :TYPE DOCUMENT-URI :READER TEXT-DOCUMENT-ITEM-URI)
                       (LANGUAGE-ID :INITARG :LANGUAGE-ID :DOCUMENTATION "*
* The text document's language identifier."
                        :TYPE COMMON-LISP:STRING :READER TEXT-DOCUMENT-ITEM-LANGUAGE-ID)
                       (VERSION :INITARG :VERSION :DOCUMENTATION "*
* The version number of this document (it will increase after each
* change, including undo/redo)."
                        :TYPE COMMON-LISP:NUMBER :READER TEXT-DOCUMENT-ITEM-VERSION)
                       (TEXT :INITARG :TEXT :DOCUMENTATION "*
* The content of the opened text document."
                        :TYPE COMMON-LISP:STRING :READER TEXT-DOCUMENT-ITEM-TEXT)))

(COMMON-LISP:DEFCLASS VERSIONED-TEXT-DOCUMENT-IDENTIFIER (TEXT-DOCUMENT-IDENTIFIER)
                      ((VERSION :INITARG :VERSION :DOCUMENTATION "*
* The version number of this document. If a versioned text document identifier
* is sent from the server to the client and the file is not open in the editor
* (the server has not received an open notification before) the server can send
* `null` to indicate that the version is known and the content on disk is the
* master (as speced with document content ownership).
*
* The version number of a document will increase after each change, including
* undo/redo. The number doesn't need to be consecutive."
                        :TYPE
                        (COMMON-LISP:OR COMMON-LISP:NUMBER
                                        (COMMON-LISP:OR COMMON-LISP:NULL (COMMON-LISP:EQL :NULL)))
                        :READER VERSIONED-TEXT-DOCUMENT-IDENTIFIER-VERSION)))

(COMMON-LISP:DEFCLASS TEXT-DOCUMENT-POSITION-PARAMS (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((TEXT-DOCUMENT :INITARG :TEXT-DOCUMENT :DOCUMENTATION "*
* The text document."
                        :TYPE TEXT-DOCUMENT-IDENTIFIER :READER
                        TEXT-DOCUMENT-POSITION-PARAMS-TEXT-DOCUMENT)
                       (POSITION :INITARG :POSITION :DOCUMENTATION "*
* The position inside the text document."
                        :TYPE POSITION :READER TEXT-DOCUMENT-POSITION-PARAMS-POSITION)))

(COMMON-LISP:DEFCLASS DOCUMENT-FILTER (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((LANGUAGE? :INITARG :LANGUAGE :DOCUMENTATION "*
* A language id, like `typescript`."
                        :TYPE COMMON-LISP:STRING :READER DOCUMENT-FILTER-LANGUAGE)
                       (SCHEME? :INITARG :SCHEME :DOCUMENTATION "*
* A Uri [scheme](#Uri.scheme), like `file` or `untitled`."
                        :TYPE COMMON-LISP:STRING :READER DOCUMENT-FILTER-SCHEME)
                       (PATTERN? :INITARG :PATTERN :DOCUMENTATION "*
* A glob pattern, like `*.{ts,js}`.
*
* Glob patterns can have the following syntax:
* - `*` to match one or more characters in a path segment
* - `?` to match on one character in a path segment
* - `**` to match any number of path segments, including none
* - `{}` to group conditions (e.g. `**​/*.{ts,js}` matches all TypeScript and JavaScript files)
* - `[]` to declare a range of characters to match in a path segment (e.g., `example.[0-9]` to match on `example.0`, `example.1`, …)
* - `[!...]` to negate a range of characters to match in a path segment (e.g., `example.[!0-9]` to match on `example.a`, `example.b`, but not `example.0`)"
                        :TYPE COMMON-LISP:STRING :READER DOCUMENT-FILTER-PATTERN)))

(COMMON-LISP:DEFTYPE DOCUMENT-SELECTOR () '(LEM-LSP-UTILS/TYPE:TS-ARRAY DOCUMENT-FILTER))

(COMMON-LISP:DEFCLASS STATIC-REGISTRATION-OPTIONS (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((ID? :INITARG :ID :DOCUMENTATION "*
* The id used to register the request. The id can be used to deregister
* the request again. See also Registration#id."
                        :TYPE COMMON-LISP:STRING :READER STATIC-REGISTRATION-OPTIONS-ID)))

(COMMON-LISP:DEFCLASS TEXT-DOCUMENT-REGISTRATION-OPTIONS (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((DOCUMENT-SELECTOR :INITARG :DOCUMENT-SELECTOR :DOCUMENTATION "*
* A document selector to identify the scope of the registration. If set to null
* the document selector provided on the client side will be used."
                        :TYPE
                        (COMMON-LISP:OR DOCUMENT-SELECTOR
                                        (COMMON-LISP:OR COMMON-LISP:NULL (COMMON-LISP:EQL :NULL)))
                        :READER TEXT-DOCUMENT-REGISTRATION-OPTIONS-DOCUMENT-SELECTOR)))

(COMMON-LISP:PROGN
 (COMMON-LISP:DEFTYPE MARKUP-KIND () COMMON-LISP:T)
 (COMMON-LISP:DEFPARAMETER MARKUP-KIND.PLAIN-TEXT "plaintext")
 (COMMON-LISP:DEFPARAMETER MARKUP-KIND.MARKDOWN "markdown"))

(COMMON-LISP:DEFTYPE MARKUP-KIND ()
  '(COMMON-LISP:OR (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER "plaintext")
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER "markdown")))

(COMMON-LISP:DEFCLASS MARKUP-CONTENT (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((KIND :INITARG :KIND :DOCUMENTATION "*
* The type of the Markup"
                        :TYPE MARKUP-KIND :READER MARKUP-CONTENT-KIND)
                       (VALUE :INITARG :VALUE :DOCUMENTATION "*
* The content itself"
                        :TYPE COMMON-LISP:STRING :READER MARKUP-CONTENT-VALUE)))

(COMMON-LISP:DEFCLASS WORK-DONE-PROGRESS-BEGIN (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((KIND :INITARG :KIND :DOCUMENTATION "" :TYPE
                        (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER "begin") :READER
                        WORK-DONE-PROGRESS-BEGIN-KIND)
                       (TITLE :INITARG :TITLE :DOCUMENTATION "*
* Mandatory title of the progress operation. Used to briefly inform about
* the kind of operation being performed.
*
* Examples: \"Indexing\" or \"Linking dependencies\"."
                        :TYPE COMMON-LISP:STRING :READER WORK-DONE-PROGRESS-BEGIN-TITLE)
                       (CANCELLABLE? :INITARG :CANCELLABLE :DOCUMENTATION "*
* Controls if a cancel button should show to allow the user to cancel the
* long running operation. Clients that don't support cancellation are allowed
* to ignore the setting."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        WORK-DONE-PROGRESS-BEGIN-CANCELLABLE)
                       (MESSAGE? :INITARG :MESSAGE :DOCUMENTATION "*
* Optional, more detailed associated progress message. Contains
* complementary information to the `title`.
*
* Examples: \"3/25 files\", \"project/src/module2\", \"node_modules/some_dep\".
* If unset, the previous progress message (if any) is still valid."
                        :TYPE COMMON-LISP:STRING :READER WORK-DONE-PROGRESS-BEGIN-MESSAGE)
                       (PERCENTAGE? :INITARG :PERCENTAGE :DOCUMENTATION "*
* Optional progress percentage to display (value 100 is considered 100%).
* If not provided infinite progress is assumed and clients are allowed
* to ignore the `percentage` value in subsequent in report notifications.
*
* The value should be steadily rising. Clients are free to ignore values
* that are not following this rule."
                        :TYPE COMMON-LISP:NUMBER :READER WORK-DONE-PROGRESS-BEGIN-PERCENTAGE)))

(COMMON-LISP:DEFCLASS WORK-DONE-PROGRESS-REPORT (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((KIND :INITARG :KIND :DOCUMENTATION "" :TYPE
                        (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER "report") :READER
                        WORK-DONE-PROGRESS-REPORT-KIND)
                       (CANCELLABLE? :INITARG :CANCELLABLE :DOCUMENTATION "*
* Controls enablement state of a cancel button. This property is only valid if a cancel
* button got requested in the `WorkDoneProgressStart` payload.
*
* Clients that don't support cancellation or don't support control the button's
* enablement state are allowed to ignore the setting."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        WORK-DONE-PROGRESS-REPORT-CANCELLABLE)
                       (MESSAGE? :INITARG :MESSAGE :DOCUMENTATION "*
* Optional, more detailed associated progress message. Contains
* complementary information to the `title`.
*
* Examples: \"3/25 files\", \"project/src/module2\", \"node_modules/some_dep\".
* If unset, the previous progress message (if any) is still valid."
                        :TYPE COMMON-LISP:STRING :READER WORK-DONE-PROGRESS-REPORT-MESSAGE)
                       (PERCENTAGE? :INITARG :PERCENTAGE :DOCUMENTATION "*
* Optional progress percentage to display (value 100 is considered 100%).
* If not provided infinite progress is assumed and clients are allowed
* to ignore the `percentage` value in subsequent in report notifications.
*
* The value should be steadily rising. Clients are free to ignore values
* that are not following this rule."
                        :TYPE COMMON-LISP:NUMBER :READER WORK-DONE-PROGRESS-REPORT-PERCENTAGE)))

(COMMON-LISP:DEFCLASS WORK-DONE-PROGRESS-END (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((KIND :INITARG :KIND :DOCUMENTATION "" :TYPE
                        (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER "end") :READER
                        WORK-DONE-PROGRESS-END-KIND)
                       (MESSAGE? :INITARG :MESSAGE :DOCUMENTATION "*
* Optional, a final message indicating to for example indicate the outcome
* of the operation."
                        :TYPE COMMON-LISP:STRING :READER WORK-DONE-PROGRESS-END-MESSAGE)))

(COMMON-LISP:DEFCLASS WORK-DONE-PROGRESS-PARAMS (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((WORK-DONE-TOKEN? :INITARG :WORK-DONE-TOKEN :DOCUMENTATION "*
* An optional token that a server can use to report work done progress."
                        :TYPE PROGRESS-TOKEN :READER WORK-DONE-PROGRESS-PARAMS-WORK-DONE-TOKEN)))

(COMMON-LISP:DEFCLASS WORK-DONE-PROGRESS-OPTIONS (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((WORK-DONE-PROGRESS? :INITARG :WORK-DONE-PROGRESS :DOCUMENTATION "" :TYPE
                        LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        WORK-DONE-PROGRESS-OPTIONS-WORK-DONE-PROGRESS)))

(COMMON-LISP:DEFCLASS PARTIAL-RESULT-PARAMS (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((PARTIAL-RESULT-TOKEN? :INITARG :PARTIAL-RESULT-TOKEN :DOCUMENTATION "*
* An optional token that a server can use to report partial results (e.g. streaming) to
* the client."
                        :TYPE PROGRESS-TOKEN :READER PARTIAL-RESULT-PARAMS-PARTIAL-RESULT-TOKEN)))

(COMMON-LISP:DEFCLASS INITIALIZE-PARAMS (WORK-DONE-PROGRESS-PARAMS)
                      ((PROCESS-ID :INITARG :PROCESS-ID :DOCUMENTATION "*
* The process Id of the parent process that started
* the server. Is null if the process has not been started by another process.
* If the parent process is not alive then the server should exit (see exit notification) its process."
                        :TYPE
                        (COMMON-LISP:OR COMMON-LISP:NUMBER
                                        (COMMON-LISP:OR COMMON-LISP:NULL (COMMON-LISP:EQL :NULL)))
                        :READER INITIALIZE-PARAMS-PROCESS-ID)
                       (CLIENT-INFO? :INITARG :CLIENT-INFO :DOCUMENTATION "*
* Information about the client
*
* @since 3.15.0"
                        :TYPE
                        (LEM-LSP-UTILS/TYPE:TS-INTERFACE
                         ("name" :TYPE COMMON-LISP:STRING :OPTIONAL-P COMMON-LISP:NIL)
                         ("version" :TYPE COMMON-LISP:STRING :OPTIONAL-P COMMON-LISP:T))
                        :READER INITIALIZE-PARAMS-CLIENT-INFO)
                       (ROOT-PATH? :INITARG :ROOT-PATH :DOCUMENTATION "*
* The rootPath of the workspace. Is null
* if no folder is open.
*
* @deprecated in favour of rootUri."
                        :TYPE
                        (COMMON-LISP:OR COMMON-LISP:STRING
                                        (COMMON-LISP:OR COMMON-LISP:NULL (COMMON-LISP:EQL :NULL)))
                        :READER INITIALIZE-PARAMS-ROOT-PATH)
                       (ROOT-URI :INITARG :ROOT-URI :DOCUMENTATION "*
* The rootUri of the workspace. Is null if no
* folder is open. If both `rootPath` and `rootUri` are set
* `rootUri` wins."
                        :TYPE
                        (COMMON-LISP:OR DOCUMENT-URI
                                        (COMMON-LISP:OR COMMON-LISP:NULL (COMMON-LISP:EQL :NULL)))
                        :READER INITIALIZE-PARAMS-ROOT-URI)
                       (INITIALIZATION-OPTIONS? :INITARG :INITIALIZATION-OPTIONS :DOCUMENTATION "*
* User provided initialization options."
                        :TYPE COMMON-LISP:T :READER INITIALIZE-PARAMS-INITIALIZATION-OPTIONS)
                       (CAPABILITIES :INITARG :CAPABILITIES :DOCUMENTATION "*
* The capabilities provided by the client (editor or tool)"
                        :TYPE CLIENT-CAPABILITIES :READER INITIALIZE-PARAMS-CAPABILITIES)
                       (TRACE? :INITARG :TRACE :DOCUMENTATION "*
* The initial trace setting. If omitted trace is disabled ('off')."
                        :TYPE
                        (COMMON-LISP:OR (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER "off")
                                        (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER "messages")
                                        (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER "verbose"))
                        :READER INITIALIZE-PARAMS-TRACE)
                       (WORKSPACE-FOLDERS? :INITARG :WORKSPACE-FOLDERS :DOCUMENTATION "*
* The workspace folders configured in the client when the server starts.
* This property is only available if the client supports workspace folders.
* It can be `null` if the client supports workspace folders but none are
* configured.
*
* @since 3.6.0"
                        :TYPE
                        (COMMON-LISP:OR (LEM-LSP-UTILS/TYPE:TS-ARRAY WORKSPACE-FOLDER)
                                        (COMMON-LISP:OR COMMON-LISP:NULL (COMMON-LISP:EQL :NULL)))
                        :READER INITIALIZE-PARAMS-WORKSPACE-FOLDERS)))

(COMMON-LISP:DEFCLASS TEXT-DOCUMENT-CLIENT-CAPABILITIES (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((SYNCHRONIZATION? :INITARG :SYNCHRONIZATION :DOCUMENTATION "" :TYPE
                        TEXT-DOCUMENT-SYNC-CLIENT-CAPABILITIES :READER
                        TEXT-DOCUMENT-CLIENT-CAPABILITIES-SYNCHRONIZATION)
                       (COMPLETION? :INITARG :COMPLETION :DOCUMENTATION "*
* Capabilities specific to the `textDocument/completion` request."
                        :TYPE COMPLETION-CLIENT-CAPABILITIES :READER
                        TEXT-DOCUMENT-CLIENT-CAPABILITIES-COMPLETION)
                       (HOVER? :INITARG :HOVER :DOCUMENTATION "*
* Capabilities specific to the `textDocument/hover` request."
                        :TYPE HOVER-CLIENT-CAPABILITIES :READER
                        TEXT-DOCUMENT-CLIENT-CAPABILITIES-HOVER)
                       (SIGNATURE-HELP? :INITARG :SIGNATURE-HELP :DOCUMENTATION "*
* Capabilities specific to the `textDocument/signatureHelp` request."
                        :TYPE SIGNATURE-HELP-CLIENT-CAPABILITIES :READER
                        TEXT-DOCUMENT-CLIENT-CAPABILITIES-SIGNATURE-HELP)
                       (DECLARATION? :INITARG :DECLARATION :DOCUMENTATION "*
* Capabilities specific to the `textDocument/declaration` request.
*
* @since 3.14.0"
                        :TYPE DECLARATION-CLIENT-CAPABILITIES :READER
                        TEXT-DOCUMENT-CLIENT-CAPABILITIES-DECLARATION)
                       (DEFINITION? :INITARG :DEFINITION :DOCUMENTATION "*
* Capabilities specific to the `textDocument/definition` request."
                        :TYPE DEFINITION-CLIENT-CAPABILITIES :READER
                        TEXT-DOCUMENT-CLIENT-CAPABILITIES-DEFINITION)
                       (TYPE-DEFINITION? :INITARG :TYPE-DEFINITION :DOCUMENTATION "*
* Capabilities specific to the `textDocument/typeDefinition` request.
*
* @since 3.6.0"
                        :TYPE TYPE-DEFINITION-CLIENT-CAPABILITIES :READER
                        TEXT-DOCUMENT-CLIENT-CAPABILITIES-TYPE-DEFINITION)
                       (IMPLEMENTATION? :INITARG :IMPLEMENTATION :DOCUMENTATION "*
* Capabilities specific to the `textDocument/implementation` request.
*
* @since 3.6.0"
                        :TYPE IMPLEMENTATION-CLIENT-CAPABILITIES :READER
                        TEXT-DOCUMENT-CLIENT-CAPABILITIES-IMPLEMENTATION)
                       (REFERENCES? :INITARG :REFERENCES :DOCUMENTATION "*
* Capabilities specific to the `textDocument/references` request."
                        :TYPE REFERENCE-CLIENT-CAPABILITIES :READER
                        TEXT-DOCUMENT-CLIENT-CAPABILITIES-REFERENCES)
                       (DOCUMENT-HIGHLIGHT? :INITARG :DOCUMENT-HIGHLIGHT :DOCUMENTATION "*
* Capabilities specific to the `textDocument/documentHighlight` request."
                        :TYPE DOCUMENT-HIGHLIGHT-CLIENT-CAPABILITIES :READER
                        TEXT-DOCUMENT-CLIENT-CAPABILITIES-DOCUMENT-HIGHLIGHT)
                       (DOCUMENT-SYMBOL? :INITARG :DOCUMENT-SYMBOL :DOCUMENTATION "*
* Capabilities specific to the `textDocument/documentSymbol` request."
                        :TYPE DOCUMENT-SYMBOL-CLIENT-CAPABILITIES :READER
                        TEXT-DOCUMENT-CLIENT-CAPABILITIES-DOCUMENT-SYMBOL)
                       (CODE-ACTION? :INITARG :CODE-ACTION :DOCUMENTATION "*
* Capabilities specific to the `textDocument/codeAction` request."
                        :TYPE CODE-ACTION-CLIENT-CAPABILITIES :READER
                        TEXT-DOCUMENT-CLIENT-CAPABILITIES-CODE-ACTION)
                       (CODE-LENS? :INITARG :CODE-LENS :DOCUMENTATION "*
* Capabilities specific to the `textDocument/codeLens` request."
                        :TYPE CODE-LENS-CLIENT-CAPABILITIES :READER
                        TEXT-DOCUMENT-CLIENT-CAPABILITIES-CODE-LENS)
                       (DOCUMENT-LINK? :INITARG :DOCUMENT-LINK :DOCUMENTATION "*
* Capabilities specific to the `textDocument/documentLink` request."
                        :TYPE DOCUMENT-LINK-CLIENT-CAPABILITIES :READER
                        TEXT-DOCUMENT-CLIENT-CAPABILITIES-DOCUMENT-LINK)
                       (COLOR-PROVIDER? :INITARG :COLOR-PROVIDER :DOCUMENTATION "*
* Capabilities specific to the `textDocument/documentColor` and the
* `textDocument/colorPresentation` request.
*
* @since 3.6.0"
                        :TYPE DOCUMENT-COLOR-CLIENT-CAPABILITIES :READER
                        TEXT-DOCUMENT-CLIENT-CAPABILITIES-COLOR-PROVIDER)
                       (FORMATTING? :INITARG :FORMATTING :DOCUMENTATION "*
* Capabilities specific to the `textDocument/formatting` request."
                        :TYPE DOCUMENT-FORMATTING-CLIENT-CAPABILITIES :READER
                        TEXT-DOCUMENT-CLIENT-CAPABILITIES-FORMATTING)
                       (RANGE-FORMATTING? :INITARG :RANGE-FORMATTING :DOCUMENTATION "*
* Capabilities specific to the `textDocument/rangeFormatting` request."
                        :TYPE DOCUMENT-RANGE-FORMATTING-CLIENT-CAPABILITIES :READER
                        TEXT-DOCUMENT-CLIENT-CAPABILITIES-RANGE-FORMATTING)
                       (ON-TYPE-FORMATTING? :INITARG :ON-TYPE-FORMATTING :DOCUMENTATION "* request.
* Capabilities specific to the `textDocument/onTypeFormatting` request."
                        :TYPE DOCUMENT-ON-TYPE-FORMATTING-CLIENT-CAPABILITIES :READER
                        TEXT-DOCUMENT-CLIENT-CAPABILITIES-ON-TYPE-FORMATTING)
                       (RENAME? :INITARG :RENAME :DOCUMENTATION "*
* Capabilities specific to the `textDocument/rename` request."
                        :TYPE RENAME-CLIENT-CAPABILITIES :READER
                        TEXT-DOCUMENT-CLIENT-CAPABILITIES-RENAME)
                       (PUBLISH-DIAGNOSTICS? :INITARG :PUBLISH-DIAGNOSTICS :DOCUMENTATION "*
* Capabilities specific to the `textDocument/publishDiagnostics` notification."
                        :TYPE PUBLISH-DIAGNOSTICS-CLIENT-CAPABILITIES :READER
                        TEXT-DOCUMENT-CLIENT-CAPABILITIES-PUBLISH-DIAGNOSTICS)
                       (FOLDING-RANGE? :INITARG :FOLDING-RANGE :DOCUMENTATION "*
* Capabilities specific to the `textDocument/foldingRange` request.
*
* @since 3.10.0"
                        :TYPE FOLDING-RANGE-CLIENT-CAPABILITIES :READER
                        TEXT-DOCUMENT-CLIENT-CAPABILITIES-FOLDING-RANGE)
                       (SELECTION-RANGE? :INITARG :SELECTION-RANGE :DOCUMENTATION "*
* Capabilities specific to the `textDocument/selectionRange` request.
*
* @since 3.15.0"
                        :TYPE SELECTION-RANGE-CLIENT-CAPABILITIES :READER
                        TEXT-DOCUMENT-CLIENT-CAPABILITIES-SELECTION-RANGE)))

(COMMON-LISP:DEFCLASS CLIENT-CAPABILITIES (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((WORKSPACE? :INITARG :WORKSPACE :DOCUMENTATION "*
* Workspace specific client capabilities."
                        :TYPE
                        (LEM-LSP-UTILS/TYPE:TS-INTERFACE
                         ("applyEdit" :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :OPTIONAL-P COMMON-LISP:T)
                         ("workspaceEdit" :TYPE WORKSPACE-EDIT-CLIENT-CAPABILITIES :OPTIONAL-P
                          COMMON-LISP:T)
                         ("didChangeConfiguration" :TYPE DID-CHANGE-CONFIGURATION-CLIENT-CAPABILITIES
                          :OPTIONAL-P COMMON-LISP:T)
                         ("didChangeWatchedFiles" :TYPE DID-CHANGE-WATCHED-FILES-CLIENT-CAPABILITIES
                          :OPTIONAL-P COMMON-LISP:T)
                         ("symbol" :TYPE WORKSPACE-SYMBOL-CLIENT-CAPABILITIES :OPTIONAL-P
                          COMMON-LISP:T)
                         ("executeCommand" :TYPE EXECUTE-COMMAND-CLIENT-CAPABILITIES :OPTIONAL-P
                          COMMON-LISP:T)
                         ("workspaceFolders" :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :OPTIONAL-P
                          COMMON-LISP:T)
                         ("configuration" :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :OPTIONAL-P
                          COMMON-LISP:T))
                        :READER CLIENT-CAPABILITIES-WORKSPACE)
                       (TEXT-DOCUMENT? :INITARG :TEXT-DOCUMENT :DOCUMENTATION "*
* Text document specific client capabilities."
                        :TYPE TEXT-DOCUMENT-CLIENT-CAPABILITIES :READER
                        CLIENT-CAPABILITIES-TEXT-DOCUMENT)
                       (WINDOW? :INITARG :WINDOW :DOCUMENTATION "*
* Window specific client capabilities."
                        :TYPE
                        (LEM-LSP-UTILS/TYPE:TS-INTERFACE
                         ("workDoneProgress" :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :OPTIONAL-P
                          COMMON-LISP:T))
                        :READER CLIENT-CAPABILITIES-WINDOW)
                       (EXPERIMENTAL? :INITARG :EXPERIMENTAL :DOCUMENTATION "*
* Experimental client capabilities."
                        :TYPE COMMON-LISP:T :READER CLIENT-CAPABILITIES-EXPERIMENTAL)))

(COMMON-LISP:DEFCLASS INITIALIZE-RESULT (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((CAPABILITIES :INITARG :CAPABILITIES :DOCUMENTATION "*
* The capabilities the language server provides."
                        :TYPE SERVER-CAPABILITIES :READER INITIALIZE-RESULT-CAPABILITIES)
                       (SERVER-INFO? :INITARG :SERVER-INFO :DOCUMENTATION "*
* Information about the server.
*
* @since 3.15.0"
                        :TYPE
                        (LEM-LSP-UTILS/TYPE:TS-INTERFACE
                         ("name" :TYPE COMMON-LISP:STRING :OPTIONAL-P COMMON-LISP:NIL)
                         ("version" :TYPE COMMON-LISP:STRING :OPTIONAL-P COMMON-LISP:T))
                        :READER INITIALIZE-RESULT-SERVER-INFO)))

(COMMON-LISP:PROGN
 (COMMON-LISP:DEFTYPE INITIALIZE-ERROR () COMMON-LISP:T)
 (COMMON-LISP:DEFPARAMETER INITIALIZE-ERROR.UNKNOWN-PROTOCOL-VERSION 1))

(COMMON-LISP:DEFCLASS INITIALIZE-ERROR (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((RETRY :INITARG :RETRY :DOCUMENTATION "*
* Indicates whether the client execute the following retry logic:
* (1) show the message provided by the ResponseError to the user
* (2) user selects retry or cancel
* (3) if user selected retry the initialize method is sent again."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER INITIALIZE-ERROR-RETRY)))

(COMMON-LISP:DEFCLASS SERVER-CAPABILITIES (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((TEXT-DOCUMENT-SYNC? :INITARG :TEXT-DOCUMENT-SYNC :DOCUMENTATION "*
* Defines how text documents are synced. Is either a detailed structure defining each notification or
* for backwards compatibility the TextDocumentSyncKind number. If omitted it defaults to `TextDocumentSyncKind.None`."
                        :TYPE (COMMON-LISP:OR TEXT-DOCUMENT-SYNC-OPTIONS COMMON-LISP:NUMBER) :READER
                        SERVER-CAPABILITIES-TEXT-DOCUMENT-SYNC)
                       (COMPLETION-PROVIDER? :INITARG :COMPLETION-PROVIDER :DOCUMENTATION "*
* The server provides completion support."
                        :TYPE COMPLETION-OPTIONS :READER SERVER-CAPABILITIES-COMPLETION-PROVIDER)
                       (HOVER-PROVIDER? :INITARG :HOVER-PROVIDER :DOCUMENTATION "*
* The server provides hover support."
                        :TYPE (COMMON-LISP:OR LEM-LSP-UTILS/TYPE:TS-BOOLEAN HOVER-OPTIONS) :READER
                        SERVER-CAPABILITIES-HOVER-PROVIDER)
                       (SIGNATURE-HELP-PROVIDER? :INITARG :SIGNATURE-HELP-PROVIDER :DOCUMENTATION "*
* The server provides signature help support."
                        :TYPE SIGNATURE-HELP-OPTIONS :READER
                        SERVER-CAPABILITIES-SIGNATURE-HELP-PROVIDER)
                       (DECLARATION-PROVIDER? :INITARG :DECLARATION-PROVIDER :DOCUMENTATION "*
* The server provides go to declaration support.
*
* @since 3.14.0"
                        :TYPE
                        (COMMON-LISP:OR LEM-LSP-UTILS/TYPE:TS-BOOLEAN DECLARATION-OPTIONS
                                        DECLARATION-REGISTRATION-OPTIONS)
                        :READER SERVER-CAPABILITIES-DECLARATION-PROVIDER)
                       (DEFINITION-PROVIDER? :INITARG :DEFINITION-PROVIDER :DOCUMENTATION "*
* The server provides goto definition support."
                        :TYPE (COMMON-LISP:OR LEM-LSP-UTILS/TYPE:TS-BOOLEAN DEFINITION-OPTIONS)
                        :READER SERVER-CAPABILITIES-DEFINITION-PROVIDER)
                       (TYPE-DEFINITION-PROVIDER? :INITARG :TYPE-DEFINITION-PROVIDER :DOCUMENTATION "*
* The server provides goto type definition support.
*
* @since 3.6.0"
                        :TYPE
                        (COMMON-LISP:OR LEM-LSP-UTILS/TYPE:TS-BOOLEAN TYPE-DEFINITION-OPTIONS
                                        TYPE-DEFINITION-REGISTRATION-OPTIONS)
                        :READER SERVER-CAPABILITIES-TYPE-DEFINITION-PROVIDER)
                       (IMPLEMENTATION-PROVIDER? :INITARG :IMPLEMENTATION-PROVIDER :DOCUMENTATION "*
* The server provides goto implementation support.
*
* @since 3.6.0"
                        :TYPE
                        (COMMON-LISP:OR LEM-LSP-UTILS/TYPE:TS-BOOLEAN IMPLEMENTATION-OPTIONS
                                        IMPLEMENTATION-REGISTRATION-OPTIONS)
                        :READER SERVER-CAPABILITIES-IMPLEMENTATION-PROVIDER)
                       (REFERENCES-PROVIDER? :INITARG :REFERENCES-PROVIDER :DOCUMENTATION "*
* The server provides find references support."
                        :TYPE (COMMON-LISP:OR LEM-LSP-UTILS/TYPE:TS-BOOLEAN REFERENCE-OPTIONS)
                        :READER SERVER-CAPABILITIES-REFERENCES-PROVIDER)
                       (DOCUMENT-HIGHLIGHT-PROVIDER? :INITARG :DOCUMENT-HIGHLIGHT-PROVIDER
                        :DOCUMENTATION "*
* The server provides document highlight support."
                        :TYPE
                        (COMMON-LISP:OR LEM-LSP-UTILS/TYPE:TS-BOOLEAN DOCUMENT-HIGHLIGHT-OPTIONS)
                        :READER SERVER-CAPABILITIES-DOCUMENT-HIGHLIGHT-PROVIDER)
                       (DOCUMENT-SYMBOL-PROVIDER? :INITARG :DOCUMENT-SYMBOL-PROVIDER :DOCUMENTATION "*
* The server provides document symbol support."
                        :TYPE (COMMON-LISP:OR LEM-LSP-UTILS/TYPE:TS-BOOLEAN DOCUMENT-SYMBOL-OPTIONS)
                        :READER SERVER-CAPABILITIES-DOCUMENT-SYMBOL-PROVIDER)
                       (CODE-ACTION-PROVIDER? :INITARG :CODE-ACTION-PROVIDER :DOCUMENTATION "*
* The server provides code actions. The `CodeActionOptions` return type is only
* valid if the client signals code action literal support via the property
* `textDocument.codeAction.codeActionLiteralSupport`."
                        :TYPE (COMMON-LISP:OR LEM-LSP-UTILS/TYPE:TS-BOOLEAN CODE-ACTION-OPTIONS)
                        :READER SERVER-CAPABILITIES-CODE-ACTION-PROVIDER)
                       (CODE-LENS-PROVIDER? :INITARG :CODE-LENS-PROVIDER :DOCUMENTATION "*
* The server provides code lens."
                        :TYPE CODE-LENS-OPTIONS :READER SERVER-CAPABILITIES-CODE-LENS-PROVIDER)
                       (DOCUMENT-LINK-PROVIDER? :INITARG :DOCUMENT-LINK-PROVIDER :DOCUMENTATION "*
* The server provides document link support."
                        :TYPE DOCUMENT-LINK-OPTIONS :READER
                        SERVER-CAPABILITIES-DOCUMENT-LINK-PROVIDER)
                       (COLOR-PROVIDER? :INITARG :COLOR-PROVIDER :DOCUMENTATION "*
* The server provides color provider support.
*
* @since 3.6.0"
                        :TYPE
                        (COMMON-LISP:OR LEM-LSP-UTILS/TYPE:TS-BOOLEAN DOCUMENT-COLOR-OPTIONS
                                        DOCUMENT-COLOR-REGISTRATION-OPTIONS)
                        :READER SERVER-CAPABILITIES-COLOR-PROVIDER)
                       (DOCUMENT-FORMATTING-PROVIDER? :INITARG :DOCUMENT-FORMATTING-PROVIDER
                        :DOCUMENTATION "*
* The server provides document formatting."
                        :TYPE
                        (COMMON-LISP:OR LEM-LSP-UTILS/TYPE:TS-BOOLEAN DOCUMENT-FORMATTING-OPTIONS)
                        :READER SERVER-CAPABILITIES-DOCUMENT-FORMATTING-PROVIDER)
                       (DOCUMENT-RANGE-FORMATTING-PROVIDER? :INITARG
                        :DOCUMENT-RANGE-FORMATTING-PROVIDER :DOCUMENTATION "*
* The server provides document range formatting."
                        :TYPE
                        (COMMON-LISP:OR LEM-LSP-UTILS/TYPE:TS-BOOLEAN
                                        DOCUMENT-RANGE-FORMATTING-OPTIONS)
                        :READER SERVER-CAPABILITIES-DOCUMENT-RANGE-FORMATTING-PROVIDER)
                       (DOCUMENT-ON-TYPE-FORMATTING-PROVIDER? :INITARG
                        :DOCUMENT-ON-TYPE-FORMATTING-PROVIDER :DOCUMENTATION "*
* The server provides document formatting on typing."
                        :TYPE DOCUMENT-ON-TYPE-FORMATTING-OPTIONS :READER
                        SERVER-CAPABILITIES-DOCUMENT-ON-TYPE-FORMATTING-PROVIDER)
                       (RENAME-PROVIDER? :INITARG :RENAME-PROVIDER :DOCUMENTATION "*
* The server provides rename support. RenameOptions may only be
* specified if the client states that it supports
* `prepareSupport` in its initial `initialize` request."
                        :TYPE (COMMON-LISP:OR LEM-LSP-UTILS/TYPE:TS-BOOLEAN RENAME-OPTIONS) :READER
                        SERVER-CAPABILITIES-RENAME-PROVIDER)
                       (FOLDING-RANGE-PROVIDER? :INITARG :FOLDING-RANGE-PROVIDER :DOCUMENTATION "*
* The server provides folding provider support.
*
* @since 3.10.0"
                        :TYPE
                        (COMMON-LISP:OR LEM-LSP-UTILS/TYPE:TS-BOOLEAN FOLDING-RANGE-OPTIONS
                                        FOLDING-RANGE-REGISTRATION-OPTIONS)
                        :READER SERVER-CAPABILITIES-FOLDING-RANGE-PROVIDER)
                       (EXECUTE-COMMAND-PROVIDER? :INITARG :EXECUTE-COMMAND-PROVIDER :DOCUMENTATION "*
* The server provides execute command support."
                        :TYPE EXECUTE-COMMAND-OPTIONS :READER
                        SERVER-CAPABILITIES-EXECUTE-COMMAND-PROVIDER)
                       (SELECTION-RANGE-PROVIDER? :INITARG :SELECTION-RANGE-PROVIDER :DOCUMENTATION "*
* The server provides selection range support.
*
* @since 3.15.0"
                        :TYPE
                        (COMMON-LISP:OR LEM-LSP-UTILS/TYPE:TS-BOOLEAN SELECTION-RANGE-OPTIONS
                                        SELECTION-RANGE-REGISTRATION-OPTIONS)
                        :READER SERVER-CAPABILITIES-SELECTION-RANGE-PROVIDER)
                       (WORKSPACE-SYMBOL-PROVIDER? :INITARG :WORKSPACE-SYMBOL-PROVIDER :DOCUMENTATION
                        "*
* The server provides workspace symbol support."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        SERVER-CAPABILITIES-WORKSPACE-SYMBOL-PROVIDER)
                       (WORKSPACE? :INITARG :WORKSPACE :DOCUMENTATION "*
* Workspace specific server capabilities"
                        :TYPE
                        (LEM-LSP-UTILS/TYPE:TS-INTERFACE
                         ("workspaceFolders" :TYPE WORKSPACE-FOLDERS-SERVER-CAPABILITIES :OPTIONAL-P
                          COMMON-LISP:T))
                        :READER SERVER-CAPABILITIES-WORKSPACE)
                       (EXPERIMENTAL? :INITARG :EXPERIMENTAL :DOCUMENTATION "*
* Experimental server capabilities."
                        :TYPE COMMON-LISP:T :READER SERVER-CAPABILITIES-EXPERIMENTAL)))

(COMMON-LISP:DEFCLASS INITIALIZED-PARAMS (cl-lsp.lem-lsp-utils/json:OBJECT) COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS SHOW-MESSAGE-PARAMS (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((TYPE :INITARG :TYPE :DOCUMENTATION "*
* The message type. See {@link MessageType}."
                        :TYPE COMMON-LISP:NUMBER :READER SHOW-MESSAGE-PARAMS-TYPE)
                       (MESSAGE :INITARG :MESSAGE :DOCUMENTATION "*
* The actual message."
                        :TYPE COMMON-LISP:STRING :READER SHOW-MESSAGE-PARAMS-MESSAGE)))

(COMMON-LISP:PROGN
 (COMMON-LISP:DEFTYPE MESSAGE-TYPE () COMMON-LISP:T)
 (COMMON-LISP:DEFPARAMETER MESSAGE-TYPE.ERROR 1)
 (COMMON-LISP:DEFPARAMETER MESSAGE-TYPE.WARNING 2)
 (COMMON-LISP:DEFPARAMETER MESSAGE-TYPE.INFO 3)
 (COMMON-LISP:DEFPARAMETER MESSAGE-TYPE.LOG 4))

(COMMON-LISP:DEFCLASS SHOW-MESSAGE-REQUEST-PARAMS (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((TYPE :INITARG :TYPE :DOCUMENTATION "*
* The message type. See {@link MessageType}"
                        :TYPE COMMON-LISP:NUMBER :READER SHOW-MESSAGE-REQUEST-PARAMS-TYPE)
                       (MESSAGE :INITARG :MESSAGE :DOCUMENTATION "*
* The actual message"
                        :TYPE COMMON-LISP:STRING :READER SHOW-MESSAGE-REQUEST-PARAMS-MESSAGE)
                       (ACTIONS? :INITARG :ACTIONS :DOCUMENTATION "*
* The message action items to present."
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY MESSAGE-ACTION-ITEM) :READER
                        SHOW-MESSAGE-REQUEST-PARAMS-ACTIONS)))

(COMMON-LISP:DEFCLASS MESSAGE-ACTION-ITEM (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((TITLE :INITARG :TITLE :DOCUMENTATION "*
* A short title like 'Retry', 'Open Log' etc."
                        :TYPE COMMON-LISP:STRING :READER MESSAGE-ACTION-ITEM-TITLE)))

(COMMON-LISP:DEFCLASS LOG-MESSAGE-PARAMS (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((TYPE :INITARG :TYPE :DOCUMENTATION "*
* The message type. See {@link MessageType}"
                        :TYPE COMMON-LISP:NUMBER :READER LOG-MESSAGE-PARAMS-TYPE)
                       (MESSAGE :INITARG :MESSAGE :DOCUMENTATION "*
* The actual message"
                        :TYPE COMMON-LISP:STRING :READER LOG-MESSAGE-PARAMS-MESSAGE)))

(COMMON-LISP:DEFCLASS WORK-DONE-PROGRESS-CREATE-PARAMS (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((TOKEN :INITARG :TOKEN :DOCUMENTATION "*
* The token to be used to report progress."
                        :TYPE PROGRESS-TOKEN :READER WORK-DONE-PROGRESS-CREATE-PARAMS-TOKEN)))

(COMMON-LISP:DEFCLASS WORK-DONE-PROGRESS-CANCEL-PARAMS (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((TOKEN :INITARG :TOKEN :DOCUMENTATION "*
* The token to be used to report progress."
                        :TYPE PROGRESS-TOKEN :READER WORK-DONE-PROGRESS-CANCEL-PARAMS-TOKEN)))

(COMMON-LISP:DEFCLASS REGISTRATION (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((ID :INITARG :ID :DOCUMENTATION "*
* The id used to register the request. The id can be used to deregister
* the request again."
                        :TYPE COMMON-LISP:STRING :READER REGISTRATION-ID)
                       (METHOD :INITARG :METHOD :DOCUMENTATION "*
* The method / capability to register for."
                        :TYPE COMMON-LISP:STRING :READER REGISTRATION-METHOD)
                       (REGISTER-OPTIONS? :INITARG :REGISTER-OPTIONS :DOCUMENTATION "*
* Options necessary for the registration."
                        :TYPE COMMON-LISP:T :READER REGISTRATION-REGISTER-OPTIONS)))

(COMMON-LISP:DEFCLASS REGISTRATION-PARAMS (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((REGISTRATIONS :INITARG :REGISTRATIONS :DOCUMENTATION "" :TYPE
                        (LEM-LSP-UTILS/TYPE:TS-ARRAY REGISTRATION) :READER
                        REGISTRATION-PARAMS-REGISTRATIONS)))

(COMMON-LISP:DEFCLASS UNREGISTRATION (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((ID :INITARG :ID :DOCUMENTATION "*
* The id used to unregister the request or notification. Usually an id
* provided during the register request."
                        :TYPE COMMON-LISP:STRING :READER UNREGISTRATION-ID)
                       (METHOD :INITARG :METHOD :DOCUMENTATION "*
* The method / capability to unregister for."
                        :TYPE COMMON-LISP:STRING :READER UNREGISTRATION-METHOD)))

(COMMON-LISP:DEFCLASS UNREGISTRATION-PARAMS (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((UNREGISTERATIONS :INITARG :UNREGISTERATIONS :DOCUMENTATION
                        "This should correctly be named `unregistrations`. However changing this
 is a breaking change and needs to wait until we deliver a 4.x version
 of the specification."
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY UNREGISTRATION) :READER
                        UNREGISTRATION-PARAMS-UNREGISTERATIONS)))

(COMMON-LISP:DEFCLASS WORKSPACE-FOLDERS-SERVER-CAPABILITIES (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((SUPPORTED? :INITARG :SUPPORTED :DOCUMENTATION "*
* The server has support for workspace folders"
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        WORKSPACE-FOLDERS-SERVER-CAPABILITIES-SUPPORTED)
                       (CHANGE-NOTIFICATIONS? :INITARG :CHANGE-NOTIFICATIONS :DOCUMENTATION "*
* Whether the server wants to receive workspace folder
* change notifications.
*
* If a string is provided, the string is treated as an ID
* under which the notification is registered on the client
* side. The ID can be used to unregister for these events
* using the `client/unregisterCapability` request."
                        :TYPE (COMMON-LISP:OR COMMON-LISP:STRING LEM-LSP-UTILS/TYPE:TS-BOOLEAN)
                        :READER WORKSPACE-FOLDERS-SERVER-CAPABILITIES-CHANGE-NOTIFICATIONS)))

(COMMON-LISP:DEFCLASS WORKSPACE-FOLDER (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((URI :INITARG :URI :DOCUMENTATION "*
* The associated URI for this workspace folder."
                        :TYPE DOCUMENT-URI :READER WORKSPACE-FOLDER-URI)
                       (NAME :INITARG :NAME :DOCUMENTATION "*
* The name of the workspace folder. Used to refer to this
* workspace folder in the user interface."
                        :TYPE COMMON-LISP:STRING :READER WORKSPACE-FOLDER-NAME)))

(COMMON-LISP:DEFCLASS DID-CHANGE-WORKSPACE-FOLDERS-PARAMS (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((EVENT :INITARG :EVENT :DOCUMENTATION "*
* The actual workspace folder change event."
                        :TYPE WORKSPACE-FOLDERS-CHANGE-EVENT :READER
                        DID-CHANGE-WORKSPACE-FOLDERS-PARAMS-EVENT)))

(COMMON-LISP:DEFCLASS WORKSPACE-FOLDERS-CHANGE-EVENT (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((ADDED :INITARG :ADDED :DOCUMENTATION "*
* The array of added workspace folders"
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY WORKSPACE-FOLDER) :READER
                        WORKSPACE-FOLDERS-CHANGE-EVENT-ADDED)
                       (REMOVED :INITARG :REMOVED :DOCUMENTATION "*
* The array of the removed workspace folders"
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY WORKSPACE-FOLDER) :READER
                        WORKSPACE-FOLDERS-CHANGE-EVENT-REMOVED)))

(COMMON-LISP:DEFCLASS DID-CHANGE-CONFIGURATION-CLIENT-CAPABILITIES (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((DYNAMIC-REGISTRATION? :INITARG :DYNAMIC-REGISTRATION :DOCUMENTATION "*
* Did change configuration notification supports dynamic registration."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        DID-CHANGE-CONFIGURATION-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION)))

(COMMON-LISP:DEFCLASS DID-CHANGE-CONFIGURATION-PARAMS (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((SETTINGS :INITARG :SETTINGS :DOCUMENTATION "*
* The actual changed settings"
                        :TYPE COMMON-LISP:T :READER DID-CHANGE-CONFIGURATION-PARAMS-SETTINGS)))

(COMMON-LISP:DEFCLASS CONFIGURATION-PARAMS (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((ITEMS :INITARG :ITEMS :DOCUMENTATION "" :TYPE
                        (LEM-LSP-UTILS/TYPE:TS-ARRAY CONFIGURATION-ITEM) :READER
                        CONFIGURATION-PARAMS-ITEMS)))

(COMMON-LISP:DEFCLASS CONFIGURATION-ITEM (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((SCOPE-URI? :INITARG :SCOPE-URI :DOCUMENTATION "*
* The scope to get the configuration section for."
                        :TYPE DOCUMENT-URI :READER CONFIGURATION-ITEM-SCOPE-URI)
                       (SECTION? :INITARG :SECTION :DOCUMENTATION "*
* The configuration section asked for."
                        :TYPE COMMON-LISP:STRING :READER CONFIGURATION-ITEM-SECTION)))

(COMMON-LISP:DEFCLASS DID-CHANGE-WATCHED-FILES-CLIENT-CAPABILITIES (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((DYNAMIC-REGISTRATION? :INITARG :DYNAMIC-REGISTRATION :DOCUMENTATION "*
* Did change watched files notification supports dynamic registration. Please note
* that the current protocol doesn't support static configuration for file changes
* from the server side."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        DID-CHANGE-WATCHED-FILES-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION)))

(COMMON-LISP:DEFCLASS DID-CHANGE-WATCHED-FILES-REGISTRATION-OPTIONS (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((WATCHERS :INITARG :WATCHERS :DOCUMENTATION "*
* The watchers to register."
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY FILE-SYSTEM-WATCHER) :READER
                        DID-CHANGE-WATCHED-FILES-REGISTRATION-OPTIONS-WATCHERS)))

(COMMON-LISP:DEFCLASS FILE-SYSTEM-WATCHER (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((GLOB-PATTERN :INITARG :GLOB-PATTERN :DOCUMENTATION "*
* The  glob pattern to watch.
*
* Glob patterns can have the following syntax:
* - `*` to match one or more characters in a path segment
* - `?` to match on one character in a path segment
* - `**` to match any number of path segments, including none
* - `{}` to group conditions (e.g. `**​/*.{ts,js}` matches all TypeScript and JavaScript files)
* - `[]` to declare a range of characters to match in a path segment (e.g., `example.[0-9]` to match on `example.0`, `example.1`, …)
* - `[!...]` to negate a range of characters to match in a path segment (e.g., `example.[!0-9]` to match on `example.a`, `example.b`, but not `example.0`)"
                        :TYPE COMMON-LISP:STRING :READER FILE-SYSTEM-WATCHER-GLOB-PATTERN)
                       (KIND? :INITARG :KIND :DOCUMENTATION "*
* The kind of events of interest. If omitted it defaults
* to WatchKind.Create | WatchKind.Change | WatchKind.Delete
* which is 7."
                        :TYPE COMMON-LISP:NUMBER :READER FILE-SYSTEM-WATCHER-KIND)))

(COMMON-LISP:PROGN
 (COMMON-LISP:DEFTYPE WATCH-KIND () COMMON-LISP:T)
 (COMMON-LISP:DEFPARAMETER WATCH-KIND.CREATE 1)
 (COMMON-LISP:DEFPARAMETER WATCH-KIND.CHANGE 2)
 (COMMON-LISP:DEFPARAMETER WATCH-KIND.DELETE 4))

(COMMON-LISP:DEFCLASS DID-CHANGE-WATCHED-FILES-PARAMS (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((CHANGES :INITARG :CHANGES :DOCUMENTATION "*
* The actual file events."
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY FILE-EVENT) :READER
                        DID-CHANGE-WATCHED-FILES-PARAMS-CHANGES)))

(COMMON-LISP:DEFCLASS FILE-EVENT (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((URI :INITARG :URI :DOCUMENTATION "*
* The file's URI."
                        :TYPE DOCUMENT-URI :READER FILE-EVENT-URI)
                       (TYPE :INITARG :TYPE :DOCUMENTATION "*
* The change type."
                        :TYPE COMMON-LISP:NUMBER :READER FILE-EVENT-TYPE)))

(COMMON-LISP:PROGN
 (COMMON-LISP:DEFTYPE FILE-CHANGE-TYPE () COMMON-LISP:T)
 (COMMON-LISP:DEFPARAMETER FILE-CHANGE-TYPE.CREATED 1)
 (COMMON-LISP:DEFPARAMETER FILE-CHANGE-TYPE.CHANGED 2)
 (COMMON-LISP:DEFPARAMETER FILE-CHANGE-TYPE.DELETED 3))

(COMMON-LISP:DEFCLASS WORKSPACE-SYMBOL-CLIENT-CAPABILITIES (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((DYNAMIC-REGISTRATION? :INITARG :DYNAMIC-REGISTRATION :DOCUMENTATION "*
* Symbol request supports dynamic registration."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        WORKSPACE-SYMBOL-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION)
                       (SYMBOL-KIND? :INITARG :SYMBOL-KIND :DOCUMENTATION "*
* Specific capabilities for the `SymbolKind` in the `workspace/symbol` request."
                        :TYPE
                        (LEM-LSP-UTILS/TYPE:TS-INTERFACE
                         ("valueSet" :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY SYMBOL-KIND) :OPTIONAL-P
                          COMMON-LISP:T))
                        :READER WORKSPACE-SYMBOL-CLIENT-CAPABILITIES-SYMBOL-KIND)))

(COMMON-LISP:DEFCLASS WORKSPACE-SYMBOL-OPTIONS (WORK-DONE-PROGRESS-OPTIONS) COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS WORKSPACE-SYMBOL-REGISTRATION-OPTIONS (WORKSPACE-SYMBOL-OPTIONS)
                      COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS WORKSPACE-SYMBOL-PARAMS (WORK-DONE-PROGRESS-PARAMS PARTIAL-RESULT-PARAMS)
                      ((QUERY :INITARG :QUERY :DOCUMENTATION "*
* A query string to filter symbols by. Clients may send an empty
* string here to request all symbols."
                        :TYPE COMMON-LISP:STRING :READER WORKSPACE-SYMBOL-PARAMS-QUERY)))

(COMMON-LISP:DEFCLASS EXECUTE-COMMAND-CLIENT-CAPABILITIES (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((DYNAMIC-REGISTRATION? :INITARG :DYNAMIC-REGISTRATION :DOCUMENTATION "*
* Execute command supports dynamic registration."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        EXECUTE-COMMAND-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION)))

(COMMON-LISP:DEFCLASS EXECUTE-COMMAND-OPTIONS (WORK-DONE-PROGRESS-OPTIONS)
                      ((COMMANDS :INITARG :COMMANDS :DOCUMENTATION "*
* The commands to be executed on the server"
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY COMMON-LISP:STRING) :READER
                        EXECUTE-COMMAND-OPTIONS-COMMANDS)))

(COMMON-LISP:DEFCLASS EXECUTE-COMMAND-REGISTRATION-OPTIONS (EXECUTE-COMMAND-OPTIONS) COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS EXECUTE-COMMAND-PARAMS (WORK-DONE-PROGRESS-PARAMS)
                      ((COMMAND :INITARG :COMMAND :DOCUMENTATION "*
* The identifier of the actual command handler."
                        :TYPE COMMON-LISP:STRING :READER EXECUTE-COMMAND-PARAMS-COMMAND)
                       (ARGUMENTS? :INITARG :ARGUMENTS :DOCUMENTATION "*
* Arguments that the command should be invoked with."
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY COMMON-LISP:T) :READER
                        EXECUTE-COMMAND-PARAMS-ARGUMENTS)))

(COMMON-LISP:DEFCLASS APPLY-WORKSPACE-EDIT-PARAMS (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((LABEL? :INITARG :LABEL :DOCUMENTATION "*
* An optional label of the workspace edit. This label is
* presented in the user interface for example on an undo
* stack to undo the workspace edit."
                        :TYPE COMMON-LISP:STRING :READER APPLY-WORKSPACE-EDIT-PARAMS-LABEL)
                       (EDIT :INITARG :EDIT :DOCUMENTATION "*
* The edits to apply."
                        :TYPE WORKSPACE-EDIT :READER APPLY-WORKSPACE-EDIT-PARAMS-EDIT)))

(COMMON-LISP:DEFCLASS APPLY-WORKSPACE-EDIT-RESPONSE (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((APPLIED :INITARG :APPLIED :DOCUMENTATION "*
* Indicates whether the edit was applied or not."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        APPLY-WORKSPACE-EDIT-RESPONSE-APPLIED)
                       (FAILURE-REASON? :INITARG :FAILURE-REASON :DOCUMENTATION "*
* An optional textual description for why the edit was not applied.
* This may be used may be used by the server for diagnostic
* logging or to provide a suitable error for a request that
* triggered the edit."
                        :TYPE COMMON-LISP:STRING :READER
                        APPLY-WORKSPACE-EDIT-RESPONSE-FAILURE-REASON)))

(COMMON-LISP:PROGN
 (COMMON-LISP:DEFTYPE TEXT-DOCUMENT-SYNC-KIND () COMMON-LISP:T)
 (COMMON-LISP:DEFPARAMETER TEXT-DOCUMENT-SYNC-KIND.NONE 0)
 (COMMON-LISP:DEFPARAMETER TEXT-DOCUMENT-SYNC-KIND.FULL 1)
 (COMMON-LISP:DEFPARAMETER TEXT-DOCUMENT-SYNC-KIND.INCREMENTAL 2))

(COMMON-LISP:DEFCLASS TEXT-DOCUMENT-SYNC-OPTIONS (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((OPEN-CLOSE? :INITARG :OPEN-CLOSE :DOCUMENTATION "*
* Open and close notifications are sent to the server. If omitted open close notification should not
* be sent."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        TEXT-DOCUMENT-SYNC-OPTIONS-OPEN-CLOSE)
                       (CHANGE? :INITARG :CHANGE :DOCUMENTATION "*
* Change notifications are sent to the server. See TextDocumentSyncKind.None, TextDocumentSyncKind.Full
* and TextDocumentSyncKind.Incremental. If omitted it defaults to TextDocumentSyncKind.None."
                        :TYPE TEXT-DOCUMENT-SYNC-KIND :READER TEXT-DOCUMENT-SYNC-OPTIONS-CHANGE)))

(COMMON-LISP:DEFCLASS DID-OPEN-TEXT-DOCUMENT-PARAMS (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((TEXT-DOCUMENT :INITARG :TEXT-DOCUMENT :DOCUMENTATION "*
* The document that was opened."
                        :TYPE TEXT-DOCUMENT-ITEM :READER
                        DID-OPEN-TEXT-DOCUMENT-PARAMS-TEXT-DOCUMENT)))

(COMMON-LISP:DEFCLASS TEXT-DOCUMENT-CHANGE-REGISTRATION-OPTIONS (TEXT-DOCUMENT-REGISTRATION-OPTIONS)
                      ((SYNC-KIND :INITARG :SYNC-KIND :DOCUMENTATION "*
* How documents are synced to the server. See TextDocumentSyncKind.Full
* and TextDocumentSyncKind.Incremental."
                        :TYPE TEXT-DOCUMENT-SYNC-KIND :READER
                        TEXT-DOCUMENT-CHANGE-REGISTRATION-OPTIONS-SYNC-KIND)))

(COMMON-LISP:DEFCLASS DID-CHANGE-TEXT-DOCUMENT-PARAMS (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((TEXT-DOCUMENT :INITARG :TEXT-DOCUMENT :DOCUMENTATION "*
* The document that did change. The version number points
* to the version after all provided content changes have
* been applied."
                        :TYPE VERSIONED-TEXT-DOCUMENT-IDENTIFIER :READER
                        DID-CHANGE-TEXT-DOCUMENT-PARAMS-TEXT-DOCUMENT)
                       (CONTENT-CHANGES :INITARG :CONTENT-CHANGES :DOCUMENTATION "*
* The actual content changes. The content changes describe single state changes
* to the document. So if there are two content changes c1 (at array index 0) and
* c2 (at array index 1) for a document in state S then c1 moves the document from
* S to S' and c2 from S' to S''. So c1 is computed on the state S and c2 is computed
* on the state S'.
*
* To mirror the content of a document using change events use the following approach:
* - start with the same initial content
* - apply the 'textDocument/didChange' notifications in the order you recevie them.
* - apply the `TextDocumentContentChangeEvent`s in a single notification in the order
*   you receive them."
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY TEXT-DOCUMENT-CONTENT-CHANGE-EVENT)
                        :READER DID-CHANGE-TEXT-DOCUMENT-PARAMS-CONTENT-CHANGES)))

(COMMON-LISP:DEFTYPE TEXT-DOCUMENT-CONTENT-CHANGE-EVENT ()
  '(COMMON-LISP:OR
    (LEM-LSP-UTILS/TYPE:TS-INTERFACE ("range" :TYPE RANGE :OPTIONAL-P COMMON-LISP:NIL)
     ("rangeLength" :TYPE COMMON-LISP:NUMBER :OPTIONAL-P COMMON-LISP:T)
     ("text" :TYPE COMMON-LISP:STRING :OPTIONAL-P COMMON-LISP:NIL))
    (LEM-LSP-UTILS/TYPE:TS-INTERFACE ("text" :TYPE COMMON-LISP:STRING :OPTIONAL-P COMMON-LISP:NIL))))

(COMMON-LISP:DEFCLASS WILL-SAVE-TEXT-DOCUMENT-PARAMS (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((TEXT-DOCUMENT :INITARG :TEXT-DOCUMENT :DOCUMENTATION "*
* The document that will be saved."
                        :TYPE TEXT-DOCUMENT-IDENTIFIER :READER
                        WILL-SAVE-TEXT-DOCUMENT-PARAMS-TEXT-DOCUMENT)
                       (REASON :INITARG :REASON :DOCUMENTATION "*
* The 'TextDocumentSaveReason'."
                        :TYPE COMMON-LISP:NUMBER :READER WILL-SAVE-TEXT-DOCUMENT-PARAMS-REASON)))

(COMMON-LISP:PROGN
 (COMMON-LISP:DEFTYPE TEXT-DOCUMENT-SAVE-REASON () COMMON-LISP:T)
 (COMMON-LISP:DEFPARAMETER TEXT-DOCUMENT-SAVE-REASON.MANUAL 1)
 (COMMON-LISP:DEFPARAMETER TEXT-DOCUMENT-SAVE-REASON.AFTER-DELAY 2)
 (COMMON-LISP:DEFPARAMETER TEXT-DOCUMENT-SAVE-REASON.FOCUS-OUT 3))

(COMMON-LISP:DEFCLASS SAVE-OPTIONS (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((INCLUDE-TEXT? :INITARG :INCLUDE-TEXT :DOCUMENTATION "*
* The client is supposed to include the content on save."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER SAVE-OPTIONS-INCLUDE-TEXT)))

(COMMON-LISP:DEFCLASS TEXT-DOCUMENT-SAVE-REGISTRATION-OPTIONS (TEXT-DOCUMENT-REGISTRATION-OPTIONS)
                      ((INCLUDE-TEXT? :INITARG :INCLUDE-TEXT :DOCUMENTATION "*
* The client is supposed to include the content on save."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        TEXT-DOCUMENT-SAVE-REGISTRATION-OPTIONS-INCLUDE-TEXT)))

(COMMON-LISP:DEFCLASS DID-SAVE-TEXT-DOCUMENT-PARAMS (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((TEXT-DOCUMENT :INITARG :TEXT-DOCUMENT :DOCUMENTATION "*
* The document that was saved."
                        :TYPE TEXT-DOCUMENT-IDENTIFIER :READER
                        DID-SAVE-TEXT-DOCUMENT-PARAMS-TEXT-DOCUMENT)
                       (TEXT? :INITARG :TEXT :DOCUMENTATION "*
* Optional the content when saved. Depends on the includeText value
* when the save notification was requested."
                        :TYPE COMMON-LISP:STRING :READER DID-SAVE-TEXT-DOCUMENT-PARAMS-TEXT)))

(COMMON-LISP:DEFCLASS DID-CLOSE-TEXT-DOCUMENT-PARAMS (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((TEXT-DOCUMENT :INITARG :TEXT-DOCUMENT :DOCUMENTATION "*
* The document that was closed."
                        :TYPE TEXT-DOCUMENT-IDENTIFIER :READER
                        DID-CLOSE-TEXT-DOCUMENT-PARAMS-TEXT-DOCUMENT)))

(COMMON-LISP:DEFCLASS TEXT-DOCUMENT-SYNC-CLIENT-CAPABILITIES (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((DYNAMIC-REGISTRATION? :INITARG :DYNAMIC-REGISTRATION :DOCUMENTATION "*
* Whether text document synchronization supports dynamic registration."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        TEXT-DOCUMENT-SYNC-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION)
                       (WILL-SAVE? :INITARG :WILL-SAVE :DOCUMENTATION "*
* The client supports sending will save notifications."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        TEXT-DOCUMENT-SYNC-CLIENT-CAPABILITIES-WILL-SAVE)
                       (WILL-SAVE-WAIT-UNTIL? :INITARG :WILL-SAVE-WAIT-UNTIL :DOCUMENTATION "*
* The client supports sending a will save request and
* waits for a response providing text edits which will
* be applied to the document before it is saved."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        TEXT-DOCUMENT-SYNC-CLIENT-CAPABILITIES-WILL-SAVE-WAIT-UNTIL)
                       (DID-SAVE? :INITARG :DID-SAVE :DOCUMENTATION "*
* The client supports did save notifications."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        TEXT-DOCUMENT-SYNC-CLIENT-CAPABILITIES-DID-SAVE)))

(COMMON-LISP:PROGN
 (COMMON-LISP:DEFTYPE TEXT-DOCUMENT-SYNC-KIND () COMMON-LISP:T)
 (COMMON-LISP:DEFPARAMETER TEXT-DOCUMENT-SYNC-KIND.NONE 0)
 (COMMON-LISP:DEFPARAMETER TEXT-DOCUMENT-SYNC-KIND.FULL 1)
 (COMMON-LISP:DEFPARAMETER TEXT-DOCUMENT-SYNC-KIND.INCREMENTAL 2))

(COMMON-LISP:DEFCLASS TEXT-DOCUMENT-SYNC-OPTIONS (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((OPEN-CLOSE? :INITARG :OPEN-CLOSE :DOCUMENTATION "*
* Open and close notifications are sent to the server. If omitted open close notification should not
* be sent."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        TEXT-DOCUMENT-SYNC-OPTIONS-OPEN-CLOSE)
                       (CHANGE? :INITARG :CHANGE :DOCUMENTATION "*
* Change notifications are sent to the server. See TextDocumentSyncKind.None, TextDocumentSyncKind.Full
* and TextDocumentSyncKind.Incremental. If omitted it defaults to TextDocumentSyncKind.None."
                        :TYPE COMMON-LISP:NUMBER :READER TEXT-DOCUMENT-SYNC-OPTIONS-CHANGE)
                       (WILL-SAVE? :INITARG :WILL-SAVE :DOCUMENTATION "*
* If present will save notifications are sent to the server. If omitted the notification should not be
* sent."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        TEXT-DOCUMENT-SYNC-OPTIONS-WILL-SAVE)
                       (WILL-SAVE-WAIT-UNTIL? :INITARG :WILL-SAVE-WAIT-UNTIL :DOCUMENTATION "*
* If present will save wait until requests are sent to the server. If omitted the request should not be
* sent."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        TEXT-DOCUMENT-SYNC-OPTIONS-WILL-SAVE-WAIT-UNTIL)
                       (SAVE? :INITARG :SAVE :DOCUMENTATION "*
* If present save notifications are sent to the server. If omitted the notification should not be
* sent."
                        :TYPE (COMMON-LISP:OR LEM-LSP-UTILS/TYPE:TS-BOOLEAN SAVE-OPTIONS) :READER
                        TEXT-DOCUMENT-SYNC-OPTIONS-SAVE)))

(COMMON-LISP:DEFCLASS PUBLISH-DIAGNOSTICS-CLIENT-CAPABILITIES (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((RELATED-INFORMATION? :INITARG :RELATED-INFORMATION :DOCUMENTATION "*
* Whether the clients accepts diagnostics with related information."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        PUBLISH-DIAGNOSTICS-CLIENT-CAPABILITIES-RELATED-INFORMATION)
                       (TAG-SUPPORT? :INITARG :TAG-SUPPORT :DOCUMENTATION "*
* Client supports the tag property to provide meta data about a diagnostic.
* Clients supporting tags have to handle unknown tags gracefully.
*
* @since 3.15.0"
                        :TYPE
                        (LEM-LSP-UTILS/TYPE:TS-INTERFACE
                         ("valueSet" :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY DIAGNOSTIC-TAG) :OPTIONAL-P
                          COMMON-LISP:NIL))
                        :READER PUBLISH-DIAGNOSTICS-CLIENT-CAPABILITIES-TAG-SUPPORT)
                       (VERSION-SUPPORT? :INITARG :VERSION-SUPPORT :DOCUMENTATION "*
* Whether the client interprets the version property of the
* `textDocument/publishDiagnostics` notification's parameter.
*
* @since 3.15.0"
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        PUBLISH-DIAGNOSTICS-CLIENT-CAPABILITIES-VERSION-SUPPORT)))

(COMMON-LISP:DEFCLASS PUBLISH-DIAGNOSTICS-PARAMS (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((URI :INITARG :URI :DOCUMENTATION "*
* The URI for which diagnostic information is reported."
                        :TYPE DOCUMENT-URI :READER PUBLISH-DIAGNOSTICS-PARAMS-URI)
                       (VERSION? :INITARG :VERSION :DOCUMENTATION "*
* Optional the version number of the document the diagnostics are published for.
*
* @since 3.15.0"
                        :TYPE COMMON-LISP:NUMBER :READER PUBLISH-DIAGNOSTICS-PARAMS-VERSION)
                       (DIAGNOSTICS :INITARG :DIAGNOSTICS :DOCUMENTATION "*
* An array of diagnostic information items."
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY DIAGNOSTIC) :READER
                        PUBLISH-DIAGNOSTICS-PARAMS-DIAGNOSTICS)))

(COMMON-LISP:DEFCLASS COMPLETION-CLIENT-CAPABILITIES (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((DYNAMIC-REGISTRATION? :INITARG :DYNAMIC-REGISTRATION :DOCUMENTATION "*
* Whether completion supports dynamic registration."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        COMPLETION-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION)
                       (COMPLETION-ITEM? :INITARG :COMPLETION-ITEM :DOCUMENTATION "*
* The client supports the following `CompletionItem` specific
* capabilities."
                        :TYPE
                        (LEM-LSP-UTILS/TYPE:TS-INTERFACE
                         ("snippetSupport" :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :OPTIONAL-P
                          COMMON-LISP:T)
                         ("commitCharactersSupport" :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :OPTIONAL-P
                          COMMON-LISP:T)
                         ("documentationFormat" :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY MARKUP-KIND)
                          :OPTIONAL-P COMMON-LISP:T)
                         ("deprecatedSupport" :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :OPTIONAL-P
                          COMMON-LISP:T)
                         ("preselectSupport" :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :OPTIONAL-P
                          COMMON-LISP:T)
                         ("tagSupport" :TYPE
                          (LEM-LSP-UTILS/TYPE:TS-INTERFACE
                           ("valueSet" :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY COMPLETION-ITEM-TAG)
                            :OPTIONAL-P COMMON-LISP:NIL))
                          :OPTIONAL-P COMMON-LISP:T))
                        :READER COMPLETION-CLIENT-CAPABILITIES-COMPLETION-ITEM)
                       (COMPLETION-ITEM-KIND? :INITARG :COMPLETION-ITEM-KIND :DOCUMENTATION "" :TYPE
                        (LEM-LSP-UTILS/TYPE:TS-INTERFACE
                         ("valueSet" :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY COMPLETION-ITEM-KIND)
                          :OPTIONAL-P COMMON-LISP:T))
                        :READER COMPLETION-CLIENT-CAPABILITIES-COMPLETION-ITEM-KIND)
                       (CONTEXT-SUPPORT? :INITARG :CONTEXT-SUPPORT :DOCUMENTATION "*
* The client supports to send additional context information for a
* `textDocument/completion` request."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        COMPLETION-CLIENT-CAPABILITIES-CONTEXT-SUPPORT)))

(COMMON-LISP:DEFCLASS COMPLETION-OPTIONS (WORK-DONE-PROGRESS-OPTIONS)
                      ((TRIGGER-CHARACTERS? :INITARG :TRIGGER-CHARACTERS :DOCUMENTATION "*
* Most tools trigger completion request automatically without explicitly requesting
* it using a keyboard shortcut (e.g. Ctrl+Space). Typically they do so when the user
* starts to type an identifier. For example if the user types `c` in a JavaScript file
* code complete will automatically pop up present `console` besides others as a
* completion item. Characters that make up identifiers don't need to be listed here.
*
* If code complete should automatically be trigger on characters not being valid inside
* an identifier (for example `.` in JavaScript) list them in `triggerCharacters`."
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY COMMON-LISP:STRING) :READER
                        COMPLETION-OPTIONS-TRIGGER-CHARACTERS)
                       (ALL-COMMIT-CHARACTERS? :INITARG :ALL-COMMIT-CHARACTERS :DOCUMENTATION "*
* The list of all possible characters that commit a completion. This field can be used
* if clients don't support individual commit characters per completion item. See
* `ClientCapabilities.textDocument.completion.completionItem.commitCharactersSupport`.
*
* If a server provides both `allCommitCharacters` and commit characters on an individual
* completion item the ones on the completion item win.
*
* @since 3.2.0"
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY COMMON-LISP:STRING) :READER
                        COMPLETION-OPTIONS-ALL-COMMIT-CHARACTERS)
                       (RESOLVE-PROVIDER? :INITARG :RESOLVE-PROVIDER :DOCUMENTATION "*
* The server provides support to resolve additional
* information for a completion item."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        COMPLETION-OPTIONS-RESOLVE-PROVIDER)))

(COMMON-LISP:DEFCLASS COMPLETION-REGISTRATION-OPTIONS
                      (TEXT-DOCUMENT-REGISTRATION-OPTIONS COMPLETION-OPTIONS) COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS COMPLETION-PARAMS
                      (TEXT-DOCUMENT-POSITION-PARAMS WORK-DONE-PROGRESS-PARAMS PARTIAL-RESULT-PARAMS)
                      ((CONTEXT? :INITARG :CONTEXT :DOCUMENTATION "*
* The completion context. This is only available if the client specifies
* to send this using `ClientCapabilities.textDocument.completion.contextSupport === true`"
                        :TYPE COMPLETION-CONTEXT :READER COMPLETION-PARAMS-CONTEXT)))

(COMMON-LISP:PROGN
 (COMMON-LISP:DEFTYPE COMPLETION-TRIGGER-KIND () COMMON-LISP:T)
 (COMMON-LISP:DEFPARAMETER COMPLETION-TRIGGER-KIND.INVOKED 1)
 (COMMON-LISP:DEFPARAMETER COMPLETION-TRIGGER-KIND.TRIGGER-CHARACTER 2)
 (COMMON-LISP:DEFPARAMETER COMPLETION-TRIGGER-KIND.TRIGGER-FOR-INCOMPLETE-COMPLETIONS 3))

(COMMON-LISP:DEFTYPE COMPLETION-TRIGGER-KIND ()
  '(COMMON-LISP:OR (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 1)
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 2)
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 3)))

(COMMON-LISP:DEFCLASS COMPLETION-CONTEXT (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((TRIGGER-KIND :INITARG :TRIGGER-KIND :DOCUMENTATION "*
* How the completion was triggered."
                        :TYPE COMPLETION-TRIGGER-KIND :READER COMPLETION-CONTEXT-TRIGGER-KIND)
                       (TRIGGER-CHARACTER? :INITARG :TRIGGER-CHARACTER :DOCUMENTATION "*
* The trigger character (a single character) that has trigger code complete.
* Is undefined if `triggerKind !== CompletionTriggerKind.TriggerCharacter`"
                        :TYPE COMMON-LISP:STRING :READER COMPLETION-CONTEXT-TRIGGER-CHARACTER)))

(COMMON-LISP:DEFCLASS COMPLETION-LIST (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((IS-INCOMPLETE :INITARG :IS-INCOMPLETE :DOCUMENTATION "*
* This list it not complete. Further typing should result in recomputing
* this list."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER COMPLETION-LIST-IS-INCOMPLETE)
                       (ITEMS :INITARG :ITEMS :DOCUMENTATION "*
* The completion items."
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY COMPLETION-ITEM) :READER
                        COMPLETION-LIST-ITEMS)))

(COMMON-LISP:PROGN
 (COMMON-LISP:DEFTYPE INSERT-TEXT-FORMAT () COMMON-LISP:T)
 (COMMON-LISP:DEFPARAMETER INSERT-TEXT-FORMAT.PLAIN-TEXT 1)
 (COMMON-LISP:DEFPARAMETER INSERT-TEXT-FORMAT.SNIPPET 2))

(COMMON-LISP:DEFTYPE INSERT-TEXT-FORMAT ()
  '(COMMON-LISP:OR (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 1)
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 2)))

(COMMON-LISP:PROGN
 (COMMON-LISP:DEFTYPE COMPLETION-ITEM-TAG () COMMON-LISP:T)
 (COMMON-LISP:DEFPARAMETER COMPLETION-ITEM-TAG.DEPRECATED 1))

(COMMON-LISP:DEFTYPE COMPLETION-ITEM-TAG () '(LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 1))

(COMMON-LISP:DEFCLASS COMPLETION-ITEM (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((LABEL :INITARG :LABEL :DOCUMENTATION "*
* The label of this completion item. By default
* also the text that is inserted when selecting
* this completion."
                        :TYPE COMMON-LISP:STRING :READER COMPLETION-ITEM-LABEL)
                       (KIND? :INITARG :KIND :DOCUMENTATION "*
* The kind of this completion item. Based of the kind
* an icon is chosen by the editor. The standardized set
* of available values is defined in `CompletionItemKind`."
                        :TYPE COMMON-LISP:NUMBER :READER COMPLETION-ITEM-KIND)
                       (TAGS? :INITARG :TAGS :DOCUMENTATION "*
* Tags for this completion item.
*
* @since 3.15.0"
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY COMPLETION-ITEM-TAG) :READER
                        COMPLETION-ITEM-TAGS)
                       (DETAIL? :INITARG :DETAIL :DOCUMENTATION "*
* A human-readable string with additional information
* about this item, like type or symbol information."
                        :TYPE COMMON-LISP:STRING :READER COMPLETION-ITEM-DETAIL)
                       (DOCUMENTATION? :INITARG :DOCUMENTATION :DOCUMENTATION "*
* A human-readable string that represents a doc-comment."
                        :TYPE (COMMON-LISP:OR COMMON-LISP:STRING MARKUP-CONTENT) :READER
                        COMPLETION-ITEM-DOCUMENTATION)
                       (DEPRECATED? :INITARG :DEPRECATED :DOCUMENTATION "*
* Indicates if this item is deprecated.
*
* @deprecated Use `tags` instead if supported."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER COMPLETION-ITEM-DEPRECATED)
                       (PRESELECT? :INITARG :PRESELECT :DOCUMENTATION "*
* Select this item when showing.
*
* *Note* that only one completion item can be selected and that the
* tool / client decides which item that is. The rule is that the *first*
* item of those that match best is selected."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER COMPLETION-ITEM-PRESELECT)
                       (SORT-TEXT? :INITARG :SORT-TEXT :DOCUMENTATION "*
* A string that should be used when comparing this item
* with other items. When `falsy` the label is used."
                        :TYPE COMMON-LISP:STRING :READER COMPLETION-ITEM-SORT-TEXT)
                       (FILTER-TEXT? :INITARG :FILTER-TEXT :DOCUMENTATION "*
* A string that should be used when filtering a set of
* completion items. When `falsy` the label is used."
                        :TYPE COMMON-LISP:STRING :READER COMPLETION-ITEM-FILTER-TEXT)
                       (INSERT-TEXT? :INITARG :INSERT-TEXT :DOCUMENTATION "*
* A string that should be inserted into a document when selecting
* this completion. When `falsy` the label is used.
*
* The `insertText` is subject to interpretation by the client side.
* Some tools might not take the string literally. For example
* VS Code when code complete is requested in this example `con<cursor position>`
* and a completion item with an `insertText` of `console` is provided it
* will only insert `sole`. Therefore it is recommended to use `textEdit` instead
* since it avoids additional client side interpretation."
                        :TYPE COMMON-LISP:STRING :READER COMPLETION-ITEM-INSERT-TEXT)
                       (INSERT-TEXT-FORMAT? :INITARG :INSERT-TEXT-FORMAT :DOCUMENTATION "*
* The format of the insert text. The format applies to both the `insertText` property
* and the `newText` property of a provided `textEdit`. If omitted defaults to
* `InsertTextFormat.PlainText`."
                        :TYPE INSERT-TEXT-FORMAT :READER COMPLETION-ITEM-INSERT-TEXT-FORMAT)
                       (TEXT-EDIT? :INITARG :TEXT-EDIT :DOCUMENTATION "*
* An edit which is applied to a document when selecting this completion. When an edit is provided the value of
* `insertText` is ignored.
*
* *Note:* The range of the edit must be a single line range and it must contain the position at which completion
* has been requested."
                        :TYPE TEXT-EDIT :READER COMPLETION-ITEM-TEXT-EDIT)
                       (ADDITIONAL-TEXT-EDITS? :INITARG :ADDITIONAL-TEXT-EDITS :DOCUMENTATION "*
* An optional array of additional text edits that are applied when
* selecting this completion. Edits must not overlap (including the same insert position)
* with the main edit nor with themselves.
*
* Additional text edits should be used to change text unrelated to the current cursor position
* (for example adding an import statement at the top of the file if the completion item will
* insert an unqualified type)."
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY TEXT-EDIT) :READER
                        COMPLETION-ITEM-ADDITIONAL-TEXT-EDITS)
                       (COMMIT-CHARACTERS? :INITARG :COMMIT-CHARACTERS :DOCUMENTATION "*
* An optional set of characters that when pressed while this completion is active will accept it first and
* then type that character. *Note* that all commit characters should have `length=1` and that superfluous
* characters will be ignored."
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY COMMON-LISP:STRING) :READER
                        COMPLETION-ITEM-COMMIT-CHARACTERS)
                       (COMMAND? :INITARG :COMMAND :DOCUMENTATION "*
* An optional command that is executed *after* inserting this completion. *Note* that
* additional modifications to the current document should be described with the
* additionalTextEdits-property."
                        :TYPE COMMAND :READER COMPLETION-ITEM-COMMAND)
                       (DATA? :INITARG :DATA :DOCUMENTATION "*
* A data entry field that is preserved on a completion item between
* a completion and a completion resolve request."
                        :TYPE COMMON-LISP:T :READER COMPLETION-ITEM-DATA)))

(COMMON-LISP:PROGN
 (COMMON-LISP:DEFTYPE COMPLETION-ITEM-KIND () COMMON-LISP:T)
 (COMMON-LISP:DEFPARAMETER COMPLETION-ITEM-KIND.TEXT 1)
 (COMMON-LISP:DEFPARAMETER COMPLETION-ITEM-KIND.METHOD 2)
 (COMMON-LISP:DEFPARAMETER COMPLETION-ITEM-KIND.FUNCTION 3)
 (COMMON-LISP:DEFPARAMETER COMPLETION-ITEM-KIND.CONSTRUCTOR 4)
 (COMMON-LISP:DEFPARAMETER COMPLETION-ITEM-KIND.FIELD 5)
 (COMMON-LISP:DEFPARAMETER COMPLETION-ITEM-KIND.VARIABLE 6)
 (COMMON-LISP:DEFPARAMETER COMPLETION-ITEM-KIND.CLASS 7)
 (COMMON-LISP:DEFPARAMETER COMPLETION-ITEM-KIND.INTERFACE 8)
 (COMMON-LISP:DEFPARAMETER COMPLETION-ITEM-KIND.MODULE 9)
 (COMMON-LISP:DEFPARAMETER COMPLETION-ITEM-KIND.PROPERTY 10)
 (COMMON-LISP:DEFPARAMETER COMPLETION-ITEM-KIND.UNIT 11)
 (COMMON-LISP:DEFPARAMETER COMPLETION-ITEM-KIND.VALUE 12)
 (COMMON-LISP:DEFPARAMETER COMPLETION-ITEM-KIND.ENUM 13)
 (COMMON-LISP:DEFPARAMETER COMPLETION-ITEM-KIND.KEYWORD 14)
 (COMMON-LISP:DEFPARAMETER COMPLETION-ITEM-KIND.SNIPPET 15)
 (COMMON-LISP:DEFPARAMETER COMPLETION-ITEM-KIND.COLOR 16)
 (COMMON-LISP:DEFPARAMETER COMPLETION-ITEM-KIND.FILE 17)
 (COMMON-LISP:DEFPARAMETER COMPLETION-ITEM-KIND.REFERENCE 18)
 (COMMON-LISP:DEFPARAMETER COMPLETION-ITEM-KIND.FOLDER 19)
 (COMMON-LISP:DEFPARAMETER COMPLETION-ITEM-KIND.ENUM-MEMBER 20)
 (COMMON-LISP:DEFPARAMETER COMPLETION-ITEM-KIND.CONSTANT 21)
 (COMMON-LISP:DEFPARAMETER COMPLETION-ITEM-KIND.STRUCT 22)
 (COMMON-LISP:DEFPARAMETER COMPLETION-ITEM-KIND.EVENT 23)
 (COMMON-LISP:DEFPARAMETER COMPLETION-ITEM-KIND.OPERATOR 24)
 (COMMON-LISP:DEFPARAMETER COMPLETION-ITEM-KIND.TYPE-PARAMETER 25))

(COMMON-LISP:DEFCLASS HOVER-CLIENT-CAPABILITIES (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((DYNAMIC-REGISTRATION? :INITARG :DYNAMIC-REGISTRATION :DOCUMENTATION "*
* Whether hover supports dynamic registration."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        HOVER-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION)
                       (CONTENT-FORMAT? :INITARG :CONTENT-FORMAT :DOCUMENTATION "*
* Client supports the follow content formats for the content
* property. The order describes the preferred format of the client."
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY MARKUP-KIND) :READER
                        HOVER-CLIENT-CAPABILITIES-CONTENT-FORMAT)))

(COMMON-LISP:DEFCLASS HOVER-OPTIONS (WORK-DONE-PROGRESS-OPTIONS) COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS HOVER-REGISTRATION-OPTIONS (TEXT-DOCUMENT-REGISTRATION-OPTIONS HOVER-OPTIONS)
                      COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS HOVER-PARAMS (TEXT-DOCUMENT-POSITION-PARAMS WORK-DONE-PROGRESS-PARAMS)
                      COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS HOVER (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((CONTENTS :INITARG :CONTENTS :DOCUMENTATION "*
* The hover's content"
                        :TYPE
                        (COMMON-LISP:OR MARKED-STRING (LEM-LSP-UTILS/TYPE:TS-ARRAY MARKED-STRING)
                                        MARKUP-CONTENT)
                        :READER HOVER-CONTENTS)
                       (RANGE? :INITARG :RANGE :DOCUMENTATION "*
* An optional range is a range inside a text document
* that is used to visualize a hover, e.g. by changing the background color."
                        :TYPE RANGE :READER HOVER-RANGE)))

(COMMON-LISP:DEFTYPE MARKED-STRING ()
  '(COMMON-LISP:OR COMMON-LISP:STRING
                   (LEM-LSP-UTILS/TYPE:TS-INTERFACE
                    ("language" :TYPE COMMON-LISP:STRING :OPTIONAL-P COMMON-LISP:NIL)
                    ("value" :TYPE COMMON-LISP:STRING :OPTIONAL-P COMMON-LISP:NIL))))

(COMMON-LISP:DEFCLASS SIGNATURE-HELP-CLIENT-CAPABILITIES (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((DYNAMIC-REGISTRATION? :INITARG :DYNAMIC-REGISTRATION :DOCUMENTATION "*
* Whether signature help supports dynamic registration."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        SIGNATURE-HELP-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION)
                       (SIGNATURE-INFORMATION? :INITARG :SIGNATURE-INFORMATION :DOCUMENTATION "*
* The client supports the following `SignatureInformation`
* specific properties."
                        :TYPE
                        (LEM-LSP-UTILS/TYPE:TS-INTERFACE
                         ("documentationFormat" :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY MARKUP-KIND)
                          :OPTIONAL-P COMMON-LISP:T)
                         ("parameterInformation" :TYPE
                          (LEM-LSP-UTILS/TYPE:TS-INTERFACE
                           ("labelOffsetSupport" :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :OPTIONAL-P
                            COMMON-LISP:T))
                          :OPTIONAL-P COMMON-LISP:T))
                        :READER SIGNATURE-HELP-CLIENT-CAPABILITIES-SIGNATURE-INFORMATION)
                       (CONTEXT-SUPPORT? :INITARG :CONTEXT-SUPPORT :DOCUMENTATION "*
* The client supports to send additional context information for a
* `textDocument/signatureHelp` request. A client that opts into
* contextSupport will also support the `retriggerCharacters` on
* `SignatureHelpOptions`.
*
* @since 3.15.0"
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        SIGNATURE-HELP-CLIENT-CAPABILITIES-CONTEXT-SUPPORT)))

(COMMON-LISP:DEFCLASS SIGNATURE-HELP-OPTIONS (WORK-DONE-PROGRESS-OPTIONS)
                      ((TRIGGER-CHARACTERS? :INITARG :TRIGGER-CHARACTERS :DOCUMENTATION "*
* The characters that trigger signature help
* automatically."
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY COMMON-LISP:STRING) :READER
                        SIGNATURE-HELP-OPTIONS-TRIGGER-CHARACTERS)
                       (RETRIGGER-CHARACTERS? :INITARG :RETRIGGER-CHARACTERS :DOCUMENTATION "*
* List of characters that re-trigger signature help.
*
* These trigger characters are only active when signature help is already showing. All trigger characters
* are also counted as re-trigger characters.
*
* @since 3.15.0"
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY COMMON-LISP:STRING) :READER
                        SIGNATURE-HELP-OPTIONS-RETRIGGER-CHARACTERS)))

(COMMON-LISP:DEFCLASS SIGNATURE-HELP-REGISTRATION-OPTIONS
                      (TEXT-DOCUMENT-REGISTRATION-OPTIONS SIGNATURE-HELP-OPTIONS) COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS SIGNATURE-HELP-PARAMS (TEXT-DOCUMENT-POSITION-PARAMS WORK-DONE-PROGRESS-PARAMS)
                      ((CONTEXT? :INITARG :CONTEXT :DOCUMENTATION "*
* The signature help context. This is only available if the client specifies
* to send this using the client capability  `textDocument.signatureHelp.contextSupport === true`
*
* @since 3.15.0"
                        :TYPE SIGNATURE-HELP-CONTEXT :READER SIGNATURE-HELP-PARAMS-CONTEXT)))

(COMMON-LISP:PROGN
 (COMMON-LISP:DEFTYPE SIGNATURE-HELP-TRIGGER-KIND () COMMON-LISP:T)
 (COMMON-LISP:DEFPARAMETER SIGNATURE-HELP-TRIGGER-KIND.INVOKED 1)
 (COMMON-LISP:DEFPARAMETER SIGNATURE-HELP-TRIGGER-KIND.TRIGGER-CHARACTER 2)
 (COMMON-LISP:DEFPARAMETER SIGNATURE-HELP-TRIGGER-KIND.CONTENT-CHANGE 3))

(COMMON-LISP:DEFTYPE SIGNATURE-HELP-TRIGGER-KIND ()
  '(COMMON-LISP:OR (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 1)
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 2)
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 3)))

(COMMON-LISP:DEFCLASS SIGNATURE-HELP-CONTEXT (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((TRIGGER-KIND :INITARG :TRIGGER-KIND :DOCUMENTATION "*
* Action that caused signature help to be triggered."
                        :TYPE SIGNATURE-HELP-TRIGGER-KIND :READER
                        SIGNATURE-HELP-CONTEXT-TRIGGER-KIND)
                       (TRIGGER-CHARACTER? :INITARG :TRIGGER-CHARACTER :DOCUMENTATION "*
* Character that caused signature help to be triggered.
*
* This is undefined when `triggerKind !== SignatureHelpTriggerKind.TriggerCharacter`"
                        :TYPE COMMON-LISP:STRING :READER SIGNATURE-HELP-CONTEXT-TRIGGER-CHARACTER)
                       (IS-RETRIGGER :INITARG :IS-RETRIGGER :DOCUMENTATION "*
* `true` if signature help was already showing when it was triggered.
*
* Retriggers occur when the signature help is already active and can be caused by actions such as
* typing a trigger character, a cursor move, or document content changes."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        SIGNATURE-HELP-CONTEXT-IS-RETRIGGER)
                       (ACTIVE-SIGNATURE-HELP? :INITARG :ACTIVE-SIGNATURE-HELP :DOCUMENTATION "*
* The currently active `SignatureHelp`.
*
* The `activeSignatureHelp` has its `SignatureHelp.activeSignature` field updated based on
* the user navigating through available signatures."
                        :TYPE SIGNATURE-HELP :READER SIGNATURE-HELP-CONTEXT-ACTIVE-SIGNATURE-HELP)))

(COMMON-LISP:DEFCLASS SIGNATURE-HELP (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((SIGNATURES :INITARG :SIGNATURES :DOCUMENTATION "*
* One or more signatures. If no signaures are availabe the signature help
* request should return `null`."
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY SIGNATURE-INFORMATION) :READER
                        SIGNATURE-HELP-SIGNATURES)
                       (ACTIVE-SIGNATURE? :INITARG :ACTIVE-SIGNATURE :DOCUMENTATION "*
* The active signature. If omitted or the value lies outside the
* range of `signatures` the value defaults to zero or is ignore if
* the `SignatureHelp` as no signatures.
*
* Whenever possible implementors should make an active decision about
* the active signature and shouldn't rely on a default value.
*
* In future version of the protocol this property might become
* mandatory to better express this."
                        :TYPE COMMON-LISP:NUMBER :READER SIGNATURE-HELP-ACTIVE-SIGNATURE)
                       (ACTIVE-PARAMETER? :INITARG :ACTIVE-PARAMETER :DOCUMENTATION "*
* The active parameter of the active signature. If omitted or the value
* lies outside the range of `signatures[activeSignature].parameters`
* defaults to 0 if the active signature has parameters. If
* the active signature has no parameters it is ignored.
* In future version of the protocol this property might become
* mandatory to better express the active parameter if the
* active signature does have any."
                        :TYPE COMMON-LISP:NUMBER :READER SIGNATURE-HELP-ACTIVE-PARAMETER)))

(COMMON-LISP:DEFCLASS SIGNATURE-INFORMATION (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((LABEL :INITARG :LABEL :DOCUMENTATION "*
* The label of this signature. Will be shown in
* the UI."
                        :TYPE COMMON-LISP:STRING :READER SIGNATURE-INFORMATION-LABEL)
                       (DOCUMENTATION? :INITARG :DOCUMENTATION :DOCUMENTATION "*
* The human-readable doc-comment of this signature. Will be shown
* in the UI but can be omitted."
                        :TYPE (COMMON-LISP:OR COMMON-LISP:STRING MARKUP-CONTENT) :READER
                        SIGNATURE-INFORMATION-DOCUMENTATION)
                       (PARAMETERS? :INITARG :PARAMETERS :DOCUMENTATION "*
* The parameters of this signature."
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY PARAMETER-INFORMATION) :READER
                        SIGNATURE-INFORMATION-PARAMETERS)))

(COMMON-LISP:DEFCLASS PARAMETER-INFORMATION (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((LABEL :INITARG :LABEL :DOCUMENTATION "*
* The label of this parameter information.
*
* Either a string or an inclusive start and exclusive end offsets within its containing
* signature label. (see SignatureInformation.label). The offsets are based on a UTF-16
* string representation as `Position` and `Range` does.
*
* *Note*: a label of type string should be a substring of its containing signature label.
* Its intended use case is to highlight the parameter label part in the `SignatureInformation.label`."
                        :TYPE
                        (COMMON-LISP:OR COMMON-LISP:STRING
                                        (LEM-LSP-UTILS/TYPE:TS-TUPLE COMMON-LISP:NUMBER
                                         COMMON-LISP:NUMBER))
                        :READER PARAMETER-INFORMATION-LABEL)
                       (DOCUMENTATION? :INITARG :DOCUMENTATION :DOCUMENTATION "*
* The human-readable doc-comment of this parameter. Will be shown
* in the UI but can be omitted."
                        :TYPE (COMMON-LISP:OR COMMON-LISP:STRING MARKUP-CONTENT) :READER
                        PARAMETER-INFORMATION-DOCUMENTATION)))

(COMMON-LISP:DEFCLASS DECLARATION-CLIENT-CAPABILITIES (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((DYNAMIC-REGISTRATION? :INITARG :DYNAMIC-REGISTRATION :DOCUMENTATION "*
* Whether declaration supports dynamic registration. If this is set to `true`
* the client supports the new `DeclarationRegistrationOptions` return value
* for the corresponding server capability as well."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        DECLARATION-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION)
                       (LINK-SUPPORT? :INITARG :LINK-SUPPORT :DOCUMENTATION "*
* The client supports additional metadata in the form of declaration links."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        DECLARATION-CLIENT-CAPABILITIES-LINK-SUPPORT)))

(COMMON-LISP:DEFCLASS DECLARATION-OPTIONS (WORK-DONE-PROGRESS-OPTIONS) COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS DECLARATION-REGISTRATION-OPTIONS
                      (DECLARATION-OPTIONS TEXT-DOCUMENT-REGISTRATION-OPTIONS
                       STATIC-REGISTRATION-OPTIONS)
                      COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS DECLARATION-PARAMS
                      (TEXT-DOCUMENT-POSITION-PARAMS WORK-DONE-PROGRESS-PARAMS PARTIAL-RESULT-PARAMS)
                      COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS DEFINITION-CLIENT-CAPABILITIES (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((DYNAMIC-REGISTRATION? :INITARG :DYNAMIC-REGISTRATION :DOCUMENTATION "*
* Whether definition supports dynamic registration."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        DEFINITION-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION)
                       (LINK-SUPPORT? :INITARG :LINK-SUPPORT :DOCUMENTATION "*
* The client supports additional metadata in the form of definition links.
*
* @since 3.14.0"
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        DEFINITION-CLIENT-CAPABILITIES-LINK-SUPPORT)))

(COMMON-LISP:DEFCLASS DEFINITION-OPTIONS (WORK-DONE-PROGRESS-OPTIONS) COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS DEFINITION-REGISTRATION-OPTIONS
                      (TEXT-DOCUMENT-REGISTRATION-OPTIONS DEFINITION-OPTIONS) COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS DEFINITION-PARAMS
                      (TEXT-DOCUMENT-POSITION-PARAMS WORK-DONE-PROGRESS-PARAMS PARTIAL-RESULT-PARAMS)
                      COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS TYPE-DEFINITION-CLIENT-CAPABILITIES (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((DYNAMIC-REGISTRATION? :INITARG :DYNAMIC-REGISTRATION :DOCUMENTATION "*
* Whether implementation supports dynamic registration. If this is set to `true`
* the client supports the new `TypeDefinitionRegistrationOptions` return value
* for the corresponding server capability as well."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        TYPE-DEFINITION-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION)
                       (LINK-SUPPORT? :INITARG :LINK-SUPPORT :DOCUMENTATION "*
* The client supports additional metadata in the form of definition links.
*
* @since 3.14.0"
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        TYPE-DEFINITION-CLIENT-CAPABILITIES-LINK-SUPPORT)))

(COMMON-LISP:DEFCLASS TYPE-DEFINITION-OPTIONS (WORK-DONE-PROGRESS-OPTIONS) COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS TYPE-DEFINITION-REGISTRATION-OPTIONS
                      (TEXT-DOCUMENT-REGISTRATION-OPTIONS TYPE-DEFINITION-OPTIONS
                       STATIC-REGISTRATION-OPTIONS)
                      COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS TYPE-DEFINITION-PARAMS
                      (TEXT-DOCUMENT-POSITION-PARAMS WORK-DONE-PROGRESS-PARAMS PARTIAL-RESULT-PARAMS)
                      COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS IMPLEMENTATION-CLIENT-CAPABILITIES (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((DYNAMIC-REGISTRATION? :INITARG :DYNAMIC-REGISTRATION :DOCUMENTATION "*
* Whether implementation supports dynamic registration. If this is set to `true`
* the client supports the new `ImplementationRegistrationOptions` return value
* for the corresponding server capability as well."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        IMPLEMENTATION-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION)
                       (LINK-SUPPORT? :INITARG :LINK-SUPPORT :DOCUMENTATION "*
* The client supports additional metadata in the form of definition links.
*
* @since 3.14.0"
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        IMPLEMENTATION-CLIENT-CAPABILITIES-LINK-SUPPORT)))

(COMMON-LISP:DEFCLASS IMPLEMENTATION-OPTIONS (WORK-DONE-PROGRESS-OPTIONS) COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS IMPLEMENTATION-REGISTRATION-OPTIONS
                      (TEXT-DOCUMENT-REGISTRATION-OPTIONS IMPLEMENTATION-OPTIONS
                       STATIC-REGISTRATION-OPTIONS)
                      COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS IMPLEMENTATION-PARAMS
                      (TEXT-DOCUMENT-POSITION-PARAMS WORK-DONE-PROGRESS-PARAMS PARTIAL-RESULT-PARAMS)
                      COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS REFERENCE-CLIENT-CAPABILITIES (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((DYNAMIC-REGISTRATION? :INITARG :DYNAMIC-REGISTRATION :DOCUMENTATION "*
* Whether references supports dynamic registration."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        REFERENCE-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION)))

(COMMON-LISP:DEFCLASS REFERENCE-OPTIONS (WORK-DONE-PROGRESS-OPTIONS) COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS REFERENCE-REGISTRATION-OPTIONS
                      (TEXT-DOCUMENT-REGISTRATION-OPTIONS REFERENCE-OPTIONS) COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS REFERENCE-PARAMS
                      (TEXT-DOCUMENT-POSITION-PARAMS WORK-DONE-PROGRESS-PARAMS PARTIAL-RESULT-PARAMS)
                      ((CONTEXT :INITARG :CONTEXT :DOCUMENTATION "" :TYPE REFERENCE-CONTEXT :READER
                        REFERENCE-PARAMS-CONTEXT)))

(COMMON-LISP:DEFCLASS REFERENCE-CONTEXT (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((INCLUDE-DECLARATION :INITARG :INCLUDE-DECLARATION :DOCUMENTATION "*
* Include the declaration of the current symbol."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        REFERENCE-CONTEXT-INCLUDE-DECLARATION)))

(COMMON-LISP:DEFCLASS DOCUMENT-HIGHLIGHT-CLIENT-CAPABILITIES (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((DYNAMIC-REGISTRATION? :INITARG :DYNAMIC-REGISTRATION :DOCUMENTATION "*
* Whether document highlight supports dynamic registration."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        DOCUMENT-HIGHLIGHT-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION)))

(COMMON-LISP:DEFCLASS DOCUMENT-HIGHLIGHT-OPTIONS (WORK-DONE-PROGRESS-OPTIONS) COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS DOCUMENT-HIGHLIGHT-REGISTRATION-OPTIONS
                      (TEXT-DOCUMENT-REGISTRATION-OPTIONS DOCUMENT-HIGHLIGHT-OPTIONS) COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS DOCUMENT-HIGHLIGHT-PARAMS
                      (TEXT-DOCUMENT-POSITION-PARAMS WORK-DONE-PROGRESS-PARAMS PARTIAL-RESULT-PARAMS)
                      COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS DOCUMENT-HIGHLIGHT (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((RANGE :INITARG :RANGE :DOCUMENTATION "*
* The range this highlight applies to."
                        :TYPE RANGE :READER DOCUMENT-HIGHLIGHT-RANGE)
                       (KIND? :INITARG :KIND :DOCUMENTATION "*
* The highlight kind, default is DocumentHighlightKind.Text."
                        :TYPE COMMON-LISP:NUMBER :READER DOCUMENT-HIGHLIGHT-KIND)))

(COMMON-LISP:PROGN
 (COMMON-LISP:DEFTYPE DOCUMENT-HIGHLIGHT-KIND () COMMON-LISP:T)
 (COMMON-LISP:DEFPARAMETER DOCUMENT-HIGHLIGHT-KIND.TEXT 1)
 (COMMON-LISP:DEFPARAMETER DOCUMENT-HIGHLIGHT-KIND.READ 2)
 (COMMON-LISP:DEFPARAMETER DOCUMENT-HIGHLIGHT-KIND.WRITE 3))

(COMMON-LISP:DEFCLASS DOCUMENT-SYMBOL-CLIENT-CAPABILITIES (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((DYNAMIC-REGISTRATION? :INITARG :DYNAMIC-REGISTRATION :DOCUMENTATION "*
* Whether document symbol supports dynamic registration."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        DOCUMENT-SYMBOL-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION)
                       (SYMBOL-KIND? :INITARG :SYMBOL-KIND :DOCUMENTATION "*
* Specific capabilities for the `SymbolKind` in the `textDocument/documentSymbol` request."
                        :TYPE
                        (LEM-LSP-UTILS/TYPE:TS-INTERFACE
                         ("valueSet" :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY SYMBOL-KIND) :OPTIONAL-P
                          COMMON-LISP:T))
                        :READER DOCUMENT-SYMBOL-CLIENT-CAPABILITIES-SYMBOL-KIND)
                       (HIERARCHICAL-DOCUMENT-SYMBOL-SUPPORT? :INITARG
                        :HIERARCHICAL-DOCUMENT-SYMBOL-SUPPORT :DOCUMENTATION "*
* The client supports hierarchical document symbols."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        DOCUMENT-SYMBOL-CLIENT-CAPABILITIES-HIERARCHICAL-DOCUMENT-SYMBOL-SUPPORT)))

(COMMON-LISP:DEFCLASS DOCUMENT-SYMBOL-OPTIONS (WORK-DONE-PROGRESS-OPTIONS) COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS DOCUMENT-SYMBOL-REGISTRATION-OPTIONS
                      (TEXT-DOCUMENT-REGISTRATION-OPTIONS DOCUMENT-SYMBOL-OPTIONS) COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS DOCUMENT-SYMBOL-PARAMS (WORK-DONE-PROGRESS-PARAMS PARTIAL-RESULT-PARAMS)
                      ((TEXT-DOCUMENT :INITARG :TEXT-DOCUMENT :DOCUMENTATION "*
* The text document."
                        :TYPE TEXT-DOCUMENT-IDENTIFIER :READER DOCUMENT-SYMBOL-PARAMS-TEXT-DOCUMENT)))

(COMMON-LISP:PROGN
 (COMMON-LISP:DEFTYPE SYMBOL-KIND () COMMON-LISP:T)
 (COMMON-LISP:DEFPARAMETER SYMBOL-KIND.FILE 1)
 (COMMON-LISP:DEFPARAMETER SYMBOL-KIND.MODULE 2)
 (COMMON-LISP:DEFPARAMETER SYMBOL-KIND.NAMESPACE 3)
 (COMMON-LISP:DEFPARAMETER SYMBOL-KIND.PACKAGE 4)
 (COMMON-LISP:DEFPARAMETER SYMBOL-KIND.CLASS 5)
 (COMMON-LISP:DEFPARAMETER SYMBOL-KIND.METHOD 6)
 (COMMON-LISP:DEFPARAMETER SYMBOL-KIND.PROPERTY 7)
 (COMMON-LISP:DEFPARAMETER SYMBOL-KIND.FIELD 8)
 (COMMON-LISP:DEFPARAMETER SYMBOL-KIND.CONSTRUCTOR 9)
 (COMMON-LISP:DEFPARAMETER SYMBOL-KIND.ENUM 10)
 (COMMON-LISP:DEFPARAMETER SYMBOL-KIND.INTERFACE 11)
 (COMMON-LISP:DEFPARAMETER SYMBOL-KIND.FUNCTION 12)
 (COMMON-LISP:DEFPARAMETER SYMBOL-KIND.VARIABLE 13)
 (COMMON-LISP:DEFPARAMETER SYMBOL-KIND.CONSTANT 14)
 (COMMON-LISP:DEFPARAMETER SYMBOL-KIND.STRING 15)
 (COMMON-LISP:DEFPARAMETER SYMBOL-KIND.NUMBER 16)
 (COMMON-LISP:DEFPARAMETER SYMBOL-KIND.BOOLEAN 17)
 (COMMON-LISP:DEFPARAMETER SYMBOL-KIND.ARRAY 18)
 (COMMON-LISP:DEFPARAMETER SYMBOL-KIND.OBJECT 19)
 (COMMON-LISP:DEFPARAMETER SYMBOL-KIND.KEY 20)
 (COMMON-LISP:DEFPARAMETER SYMBOL-KIND.NULL 21)
 (COMMON-LISP:DEFPARAMETER SYMBOL-KIND.ENUM-MEMBER 22)
 (COMMON-LISP:DEFPARAMETER SYMBOL-KIND.STRUCT 23)
 (COMMON-LISP:DEFPARAMETER SYMBOL-KIND.EVENT 24)
 (COMMON-LISP:DEFPARAMETER SYMBOL-KIND.OPERATOR 25)
 (COMMON-LISP:DEFPARAMETER SYMBOL-KIND.TYPE-PARAMETER 26))

(COMMON-LISP:DEFCLASS DOCUMENT-SYMBOL (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((NAME :INITARG :NAME :DOCUMENTATION "*
* The name of this symbol. Will be displayed in the user interface and therefore must not be
* an empty string or a string only consisting of white spaces."
                        :TYPE COMMON-LISP:STRING :READER DOCUMENT-SYMBOL-NAME)
                       (DETAIL? :INITARG :DETAIL :DOCUMENTATION "*
* More detail for this symbol, e.g the signature of a function."
                        :TYPE COMMON-LISP:STRING :READER DOCUMENT-SYMBOL-DETAIL)
                       (KIND :INITARG :KIND :DOCUMENTATION "*
* The kind of this symbol."
                        :TYPE SYMBOL-KIND :READER DOCUMENT-SYMBOL-KIND)
                       (DEPRECATED? :INITARG :DEPRECATED :DOCUMENTATION "*
* Indicates if this symbol is deprecated."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER DOCUMENT-SYMBOL-DEPRECATED)
                       (RANGE :INITARG :RANGE :DOCUMENTATION "*
* The range enclosing this symbol not including leading/trailing whitespace but everything else
* like comments. This information is typically used to determine if the clients cursor is
* inside the symbol to reveal in the symbol in the UI."
                        :TYPE RANGE :READER DOCUMENT-SYMBOL-RANGE)
                       (SELECTION-RANGE :INITARG :SELECTION-RANGE :DOCUMENTATION "*
* The range that should be selected and revealed when this symbol is being picked, e.g the name of a function.
* Must be contained by the `range`."
                        :TYPE RANGE :READER DOCUMENT-SYMBOL-SELECTION-RANGE)
                       (CHILDREN? :INITARG :CHILDREN :DOCUMENTATION "*
* Children of this symbol, e.g. properties of a class."
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY DOCUMENT-SYMBOL) :READER
                        DOCUMENT-SYMBOL-CHILDREN)))

(COMMON-LISP:DEFCLASS SYMBOL-INFORMATION (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((NAME :INITARG :NAME :DOCUMENTATION "*
* The name of this symbol."
                        :TYPE COMMON-LISP:STRING :READER SYMBOL-INFORMATION-NAME)
                       (KIND :INITARG :KIND :DOCUMENTATION "*
* The kind of this symbol."
                        :TYPE SYMBOL-KIND :READER SYMBOL-INFORMATION-KIND)
                       (DEPRECATED? :INITARG :DEPRECATED :DOCUMENTATION "*
* Indicates if this symbol is deprecated."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER SYMBOL-INFORMATION-DEPRECATED)
                       (LOCATION :INITARG :LOCATION :DOCUMENTATION "*
* The location of this symbol. The location's range is used by a tool
* to reveal the location in the editor. If the symbol is selected in the
* tool the range's start information is used to position the cursor. So
* the range usually spans more then the actual symbol's name and does
* normally include things like visibility modifiers.
*
* The range doesn't have to denote a node range in the sense of a abstract
* syntax tree. It can therefore not be used to re-construct a hierarchy of
* the symbols."
                        :TYPE LOCATION :READER SYMBOL-INFORMATION-LOCATION)
                       (CONTAINER-NAME? :INITARG :CONTAINER-NAME :DOCUMENTATION "*
* The name of the symbol containing this symbol. This information is for
* user interface purposes (e.g. to render a qualifier in the user interface
* if necessary). It can't be used to re-infer a hierarchy for the document
* symbols."
                        :TYPE COMMON-LISP:STRING :READER SYMBOL-INFORMATION-CONTAINER-NAME)))

(COMMON-LISP:DEFCLASS CODE-ACTION-CLIENT-CAPABILITIES (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((DYNAMIC-REGISTRATION? :INITARG :DYNAMIC-REGISTRATION :DOCUMENTATION "*
* Whether code action supports dynamic registration."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        CODE-ACTION-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION)
                       (CODE-ACTION-LITERAL-SUPPORT? :INITARG :CODE-ACTION-LITERAL-SUPPORT
                        :DOCUMENTATION "*
* The client supports code action literals as a valid
* response of the `textDocument/codeAction` request.
*
* @since 3.8.0"
                        :TYPE
                        (LEM-LSP-UTILS/TYPE:TS-INTERFACE
                         ("codeActionKind" :TYPE
                          (LEM-LSP-UTILS/TYPE:TS-INTERFACE
                           ("valueSet" :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY CODE-ACTION-KIND)
                            :OPTIONAL-P COMMON-LISP:NIL))
                          :OPTIONAL-P COMMON-LISP:NIL))
                        :READER CODE-ACTION-CLIENT-CAPABILITIES-CODE-ACTION-LITERAL-SUPPORT)
                       (IS-PREFERRED-SUPPORT? :INITARG :IS-PREFERRED-SUPPORT :DOCUMENTATION "*
* Whether code action supports the `isPreferred` property.
* @since 3.15.0"
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        CODE-ACTION-CLIENT-CAPABILITIES-IS-PREFERRED-SUPPORT)))

(COMMON-LISP:DEFCLASS CODE-ACTION-OPTIONS (WORK-DONE-PROGRESS-OPTIONS)
                      ((CODE-ACTION-KINDS? :INITARG :CODE-ACTION-KINDS :DOCUMENTATION "*
* CodeActionKinds that this server may return.
*
* The list of kinds may be generic, such as `CodeActionKind.Refactor`, or the server
* may list out every specific kind they provide."
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY CODE-ACTION-KIND) :READER
                        CODE-ACTION-OPTIONS-CODE-ACTION-KINDS)))

(COMMON-LISP:DEFCLASS CODE-ACTION-REGISTRATION-OPTIONS
                      (TEXT-DOCUMENT-REGISTRATION-OPTIONS CODE-ACTION-OPTIONS) COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS CODE-ACTION-PARAMS (WORK-DONE-PROGRESS-PARAMS PARTIAL-RESULT-PARAMS)
                      ((TEXT-DOCUMENT :INITARG :TEXT-DOCUMENT :DOCUMENTATION "*
* The document in which the command was invoked."
                        :TYPE TEXT-DOCUMENT-IDENTIFIER :READER CODE-ACTION-PARAMS-TEXT-DOCUMENT)
                       (RANGE :INITARG :RANGE :DOCUMENTATION "*
* The range for which the command was invoked."
                        :TYPE RANGE :READER CODE-ACTION-PARAMS-RANGE)
                       (CONTEXT :INITARG :CONTEXT :DOCUMENTATION "*
* Context carrying additional information."
                        :TYPE CODE-ACTION-CONTEXT :READER CODE-ACTION-PARAMS-CONTEXT)))

(COMMON-LISP:DEFTYPE CODE-ACTION-KIND () 'COMMON-LISP:STRING)

(COMMON-LISP:PROGN
 (COMMON-LISP:DEFTYPE CODE-ACTION-KIND () COMMON-LISP:T)
 (COMMON-LISP:DEFPARAMETER CODE-ACTION-KIND.EMPTY "")
 (COMMON-LISP:DEFPARAMETER CODE-ACTION-KIND.QUICK-FIX "quickfix")
 (COMMON-LISP:DEFPARAMETER CODE-ACTION-KIND.REFACTOR "refactor")
 (COMMON-LISP:DEFPARAMETER CODE-ACTION-KIND.REFACTOR-EXTRACT "refactor.extract")
 (COMMON-LISP:DEFPARAMETER CODE-ACTION-KIND.REFACTOR-INLINE "refactor.inline")
 (COMMON-LISP:DEFPARAMETER CODE-ACTION-KIND.REFACTOR-REWRITE "refactor.rewrite")
 (COMMON-LISP:DEFPARAMETER CODE-ACTION-KIND.SOURCE "source")
 (COMMON-LISP:DEFPARAMETER CODE-ACTION-KIND.SOURCE-ORGANIZE-IMPORTS "source.organizeImports"))

(COMMON-LISP:DEFCLASS CODE-ACTION-CONTEXT (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((DIAGNOSTICS :INITARG :DIAGNOSTICS :DOCUMENTATION "*
* An array of diagnostics known on the client side overlapping the range provided to the
* `textDocument/codeAction` request. They are provided so that the server knows which
* errors are currently presented to the user for the given range. There is no guarantee
* that these accurately reflect the error state of the resource. The primary parameter
* to compute code actions is the provided range."
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY DIAGNOSTIC) :READER
                        CODE-ACTION-CONTEXT-DIAGNOSTICS)
                       (ONLY? :INITARG :ONLY :DOCUMENTATION "*
* Requested kind of actions to return.
*
* Actions not of this kind are filtered out by the client before being shown. So servers
* can omit computing them."
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY CODE-ACTION-KIND) :READER
                        CODE-ACTION-CONTEXT-ONLY)))

(COMMON-LISP:DEFCLASS CODE-ACTION (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((TITLE :INITARG :TITLE :DOCUMENTATION "*
* A short, human-readable, title for this code action."
                        :TYPE COMMON-LISP:STRING :READER CODE-ACTION-TITLE)
                       (KIND? :INITARG :KIND :DOCUMENTATION "*
* The kind of the code action.
*
* Used to filter code actions."
                        :TYPE CODE-ACTION-KIND :READER CODE-ACTION-KIND)
                       (DIAGNOSTICS? :INITARG :DIAGNOSTICS :DOCUMENTATION "*
* The diagnostics that this code action resolves."
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY DIAGNOSTIC) :READER
                        CODE-ACTION-DIAGNOSTICS)
                       (IS-PREFERRED? :INITARG :IS-PREFERRED :DOCUMENTATION "*
* Marks this as a preferred action. Preferred actions are used by the `auto fix` command and can be targeted
* by keybindings.
*
* A quick fix should be marked preferred if it properly addresses the underlying error.
* A refactoring should be marked preferred if it is the most reasonable choice of actions to take.
*
* @since 3.15.0"
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER CODE-ACTION-IS-PREFERRED)
                       (EDIT? :INITARG :EDIT :DOCUMENTATION "*
* The workspace edit this code action performs."
                        :TYPE WORKSPACE-EDIT :READER CODE-ACTION-EDIT)
                       (COMMAND? :INITARG :COMMAND :DOCUMENTATION "*
* A command this code action executes. If a code action
* provides an edit and a command, first the edit is
* executed and then the command."
                        :TYPE COMMAND :READER CODE-ACTION-COMMAND)))

(COMMON-LISP:DEFCLASS CODE-LENS-CLIENT-CAPABILITIES (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((DYNAMIC-REGISTRATION? :INITARG :DYNAMIC-REGISTRATION :DOCUMENTATION "*
* Whether code lens supports dynamic registration."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        CODE-LENS-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION)))

(COMMON-LISP:DEFCLASS CODE-LENS-OPTIONS (WORK-DONE-PROGRESS-OPTIONS)
                      ((RESOLVE-PROVIDER? :INITARG :RESOLVE-PROVIDER :DOCUMENTATION "*
* Code lens has a resolve provider as well."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        CODE-LENS-OPTIONS-RESOLVE-PROVIDER)))

(COMMON-LISP:DEFCLASS CODE-LENS-REGISTRATION-OPTIONS
                      (TEXT-DOCUMENT-REGISTRATION-OPTIONS CODE-LENS-OPTIONS) COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS CODE-LENS-PARAMS (WORK-DONE-PROGRESS-PARAMS PARTIAL-RESULT-PARAMS)
                      ((TEXT-DOCUMENT :INITARG :TEXT-DOCUMENT :DOCUMENTATION "*
* The document to request code lens for."
                        :TYPE TEXT-DOCUMENT-IDENTIFIER :READER CODE-LENS-PARAMS-TEXT-DOCUMENT)))

(COMMON-LISP:DEFCLASS CODE-LENS (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((RANGE :INITARG :RANGE :DOCUMENTATION "*
* The range in which this code lens is valid. Should only span a single line."
                        :TYPE RANGE :READER CODE-LENS-RANGE)
                       (COMMAND? :INITARG :COMMAND :DOCUMENTATION "*
* The command this code lens represents."
                        :TYPE COMMAND :READER CODE-LENS-COMMAND)
                       (DATA? :INITARG :DATA :DOCUMENTATION "*
* A data entry field that is preserved on a code lens item between
* a code lens and a code lens resolve request."
                        :TYPE COMMON-LISP:T :READER CODE-LENS-DATA)))

(COMMON-LISP:DEFCLASS DOCUMENT-LINK-CLIENT-CAPABILITIES (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((DYNAMIC-REGISTRATION? :INITARG :DYNAMIC-REGISTRATION :DOCUMENTATION "*
* Whether document link supports dynamic registration."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        DOCUMENT-LINK-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION)
                       (TOOLTIP-SUPPORT? :INITARG :TOOLTIP-SUPPORT :DOCUMENTATION "*
* Whether the client supports the `tooltip` property on `DocumentLink`.
*
* @since 3.15.0"
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        DOCUMENT-LINK-CLIENT-CAPABILITIES-TOOLTIP-SUPPORT)))

(COMMON-LISP:DEFCLASS DOCUMENT-LINK-OPTIONS (WORK-DONE-PROGRESS-OPTIONS)
                      ((RESOLVE-PROVIDER? :INITARG :RESOLVE-PROVIDER :DOCUMENTATION "*
* Document links have a resolve provider as well."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        DOCUMENT-LINK-OPTIONS-RESOLVE-PROVIDER)))

(COMMON-LISP:DEFCLASS DOCUMENT-LINK-REGISTRATION-OPTIONS
                      (TEXT-DOCUMENT-REGISTRATION-OPTIONS DOCUMENT-LINK-OPTIONS) COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS DOCUMENT-LINK-PARAMS (WORK-DONE-PROGRESS-PARAMS PARTIAL-RESULT-PARAMS)
                      ((TEXT-DOCUMENT :INITARG :TEXT-DOCUMENT :DOCUMENTATION "*
* The document to provide document links for."
                        :TYPE TEXT-DOCUMENT-IDENTIFIER :READER DOCUMENT-LINK-PARAMS-TEXT-DOCUMENT)))

(COMMON-LISP:DEFCLASS DOCUMENT-LINK (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((RANGE :INITARG :RANGE :DOCUMENTATION "*
* The range this link applies to."
                        :TYPE RANGE :READER DOCUMENT-LINK-RANGE)
                       (TARGET? :INITARG :TARGET :DOCUMENTATION "*
* The uri this link points to. If missing a resolve request is sent later."
                        :TYPE DOCUMENT-URI :READER DOCUMENT-LINK-TARGET)
                       (TOOLTIP? :INITARG :TOOLTIP :DOCUMENTATION "*
* The tooltip text when you hover over this link.
*
* If a tooltip is provided, is will be displayed in a string that includes instructions on how to
* trigger the link, such as `{0} (ctrl + click)`. The specific instructions vary depending on OS,
* user settings, and localization.
*
* @since 3.15.0"
                        :TYPE COMMON-LISP:STRING :READER DOCUMENT-LINK-TOOLTIP)
                       (DATA? :INITARG :DATA :DOCUMENTATION "*
* A data entry field that is preserved on a document link between a
* DocumentLinkRequest and a DocumentLinkResolveRequest."
                        :TYPE COMMON-LISP:T :READER DOCUMENT-LINK-DATA)))

(COMMON-LISP:DEFCLASS DOCUMENT-COLOR-CLIENT-CAPABILITIES (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((DYNAMIC-REGISTRATION? :INITARG :DYNAMIC-REGISTRATION :DOCUMENTATION "*
* Whether document color supports dynamic registration."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        DOCUMENT-COLOR-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION)))

(COMMON-LISP:DEFCLASS DOCUMENT-COLOR-OPTIONS (WORK-DONE-PROGRESS-OPTIONS) COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS DOCUMENT-COLOR-REGISTRATION-OPTIONS
                      (TEXT-DOCUMENT-REGISTRATION-OPTIONS STATIC-REGISTRATION-OPTIONS
                       DOCUMENT-COLOR-OPTIONS)
                      COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS DOCUMENT-COLOR-PARAMS (WORK-DONE-PROGRESS-PARAMS PARTIAL-RESULT-PARAMS)
                      ((TEXT-DOCUMENT :INITARG :TEXT-DOCUMENT :DOCUMENTATION "*
* The text document."
                        :TYPE TEXT-DOCUMENT-IDENTIFIER :READER DOCUMENT-COLOR-PARAMS-TEXT-DOCUMENT)))

(COMMON-LISP:DEFCLASS COLOR-INFORMATION (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((RANGE :INITARG :RANGE :DOCUMENTATION "*
* The range in the document where this color appears."
                        :TYPE RANGE :READER COLOR-INFORMATION-RANGE)
                       (COLOR :INITARG :COLOR :DOCUMENTATION "*
* The actual color value for this color range."
                        :TYPE COLOR :READER COLOR-INFORMATION-COLOR)))

(COMMON-LISP:DEFCLASS COLOR (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((RED :INITARG :RED :DOCUMENTATION "*
* The red component of this color in the range [0-1]."
                        :TYPE COMMON-LISP:NUMBER :READER COLOR-RED)
                       (GREEN :INITARG :GREEN :DOCUMENTATION "*
* The green component of this color in the range [0-1]."
                        :TYPE COMMON-LISP:NUMBER :READER COLOR-GREEN)
                       (BLUE :INITARG :BLUE :DOCUMENTATION "*
* The blue component of this color in the range [0-1]."
                        :TYPE COMMON-LISP:NUMBER :READER COLOR-BLUE)
                       (ALPHA :INITARG :ALPHA :DOCUMENTATION "*
* The alpha component of this color in the range [0-1]."
                        :TYPE COMMON-LISP:NUMBER :READER COLOR-ALPHA)))

(COMMON-LISP:DEFCLASS COLOR-PRESENTATION-PARAMS (WORK-DONE-PROGRESS-PARAMS PARTIAL-RESULT-PARAMS)
                      ((TEXT-DOCUMENT :INITARG :TEXT-DOCUMENT :DOCUMENTATION "*
* The text document."
                        :TYPE TEXT-DOCUMENT-IDENTIFIER :READER
                        COLOR-PRESENTATION-PARAMS-TEXT-DOCUMENT)
                       (COLOR :INITARG :COLOR :DOCUMENTATION "*
* The color information to request presentations for."
                        :TYPE COLOR :READER COLOR-PRESENTATION-PARAMS-COLOR)
                       (RANGE :INITARG :RANGE :DOCUMENTATION "*
* The range where the color would be inserted. Serves as a context."
                        :TYPE RANGE :READER COLOR-PRESENTATION-PARAMS-RANGE)))

(COMMON-LISP:DEFCLASS COLOR-PRESENTATION (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((LABEL :INITARG :LABEL :DOCUMENTATION "*
* The label of this color presentation. It will be shown on the color
* picker header. By default this is also the text that is inserted when selecting
* this color presentation."
                        :TYPE COMMON-LISP:STRING :READER COLOR-PRESENTATION-LABEL)
                       (TEXT-EDIT? :INITARG :TEXT-EDIT :DOCUMENTATION "*
* An [edit](#TextEdit) which is applied to a document when selecting
* this presentation for the color.  When `falsy` the [label](#ColorPresentation.label)
* is used."
                        :TYPE TEXT-EDIT :READER COLOR-PRESENTATION-TEXT-EDIT)
                       (ADDITIONAL-TEXT-EDITS? :INITARG :ADDITIONAL-TEXT-EDITS :DOCUMENTATION "*
* An optional array of additional [text edits](#TextEdit) that are applied when
* selecting this color presentation. Edits must not overlap with the main [edit](#ColorPresentation.textEdit) nor with themselves."
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY TEXT-EDIT) :READER
                        COLOR-PRESENTATION-ADDITIONAL-TEXT-EDITS)))

(COMMON-LISP:DEFCLASS DOCUMENT-FORMATTING-CLIENT-CAPABILITIES (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((DYNAMIC-REGISTRATION? :INITARG :DYNAMIC-REGISTRATION :DOCUMENTATION "*
* Whether formatting supports dynamic registration."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        DOCUMENT-FORMATTING-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION)))

(COMMON-LISP:DEFCLASS DOCUMENT-FORMATTING-OPTIONS (WORK-DONE-PROGRESS-OPTIONS) COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS DOCUMENT-FORMATTING-REGISTRATION-OPTIONS
                      (TEXT-DOCUMENT-REGISTRATION-OPTIONS DOCUMENT-FORMATTING-OPTIONS)
                      COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS DOCUMENT-FORMATTING-PARAMS (WORK-DONE-PROGRESS-PARAMS)
                      ((TEXT-DOCUMENT :INITARG :TEXT-DOCUMENT :DOCUMENTATION "*
* The document to format."
                        :TYPE TEXT-DOCUMENT-IDENTIFIER :READER
                        DOCUMENT-FORMATTING-PARAMS-TEXT-DOCUMENT)
                       (OPTIONS :INITARG :OPTIONS :DOCUMENTATION "*
* The format options."
                        :TYPE FORMATTING-OPTIONS :READER DOCUMENT-FORMATTING-PARAMS-OPTIONS)))

(COMMON-LISP:DEFCLASS FORMATTING-OPTIONS (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((TAB-SIZE :INITARG :TAB-SIZE :DOCUMENTATION "*
* Size of a tab in spaces."
                        :TYPE COMMON-LISP:NUMBER :READER FORMATTING-OPTIONS-TAB-SIZE)
                       (INSERT-SPACES :INITARG :INSERT-SPACES :DOCUMENTATION "*
* Prefer spaces over tabs."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER FORMATTING-OPTIONS-INSERT-SPACES)
                       (TRIM-TRAILING-WHITESPACE? :INITARG :TRIM-TRAILING-WHITESPACE :DOCUMENTATION "*
* Trim trailing whitespace on a line.
*
* @since 3.15.0"
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        FORMATTING-OPTIONS-TRIM-TRAILING-WHITESPACE)
                       (INSERT-FINAL-NEWLINE? :INITARG :INSERT-FINAL-NEWLINE :DOCUMENTATION "*
* Insert a newline character at the end of the file if one does not exist.
*
* @since 3.15.0"
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        FORMATTING-OPTIONS-INSERT-FINAL-NEWLINE)
                       (TRIM-FINAL-NEWLINES? :INITARG :TRIM-FINAL-NEWLINES :DOCUMENTATION "*
* Trim all newlines after the final newline at the end of the file.
*
* @since 3.15.0"
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        FORMATTING-OPTIONS-TRIM-FINAL-NEWLINES)
                       (KEY? :INITARG :KEY :DOCUMENTATION "*
* Signature for further properties."
                        :TYPE
                        (LEM-LSP-UTILS/TYPE:TS-OBJECT COMMON-LISP:STRING
                         (COMMON-LISP:OR LEM-LSP-UTILS/TYPE:TS-BOOLEAN COMMON-LISP:NUMBER
                                         COMMON-LISP:STRING))
                        :READER FORMATTING-OPTIONS-KEY)))

(COMMON-LISP:DEFCLASS DOCUMENT-RANGE-FORMATTING-CLIENT-CAPABILITIES (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((DYNAMIC-REGISTRATION? :INITARG :DYNAMIC-REGISTRATION :DOCUMENTATION "*
* Whether formatting supports dynamic registration."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        DOCUMENT-RANGE-FORMATTING-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION)))

(COMMON-LISP:DEFCLASS DOCUMENT-RANGE-FORMATTING-OPTIONS (WORK-DONE-PROGRESS-OPTIONS) COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS DOCUMENT-RANGE-FORMATTING-REGISTRATION-OPTIONS
                      (TEXT-DOCUMENT-REGISTRATION-OPTIONS DOCUMENT-RANGE-FORMATTING-OPTIONS)
                      COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS DOCUMENT-RANGE-FORMATTING-PARAMS (WORK-DONE-PROGRESS-PARAMS)
                      ((TEXT-DOCUMENT :INITARG :TEXT-DOCUMENT :DOCUMENTATION "*
* The document to format."
                        :TYPE TEXT-DOCUMENT-IDENTIFIER :READER
                        DOCUMENT-RANGE-FORMATTING-PARAMS-TEXT-DOCUMENT)
                       (RANGE :INITARG :RANGE :DOCUMENTATION "*
* The range to format"
                        :TYPE RANGE :READER DOCUMENT-RANGE-FORMATTING-PARAMS-RANGE)
                       (OPTIONS :INITARG :OPTIONS :DOCUMENTATION "*
* The format options"
                        :TYPE FORMATTING-OPTIONS :READER DOCUMENT-RANGE-FORMATTING-PARAMS-OPTIONS)))

(COMMON-LISP:DEFCLASS DOCUMENT-ON-TYPE-FORMATTING-CLIENT-CAPABILITIES (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((DYNAMIC-REGISTRATION? :INITARG :DYNAMIC-REGISTRATION :DOCUMENTATION "*
* Whether on type formatting supports dynamic registration."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        DOCUMENT-ON-TYPE-FORMATTING-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION)))

(COMMON-LISP:DEFCLASS DOCUMENT-ON-TYPE-FORMATTING-OPTIONS (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((FIRST-TRIGGER-CHARACTER :INITARG :FIRST-TRIGGER-CHARACTER :DOCUMENTATION "*
* A character on which formatting should be triggered, like `}`."
                        :TYPE COMMON-LISP:STRING :READER
                        DOCUMENT-ON-TYPE-FORMATTING-OPTIONS-FIRST-TRIGGER-CHARACTER)
                       (MORE-TRIGGER-CHARACTER? :INITARG :MORE-TRIGGER-CHARACTER :DOCUMENTATION "*
* More trigger characters."
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY COMMON-LISP:STRING) :READER
                        DOCUMENT-ON-TYPE-FORMATTING-OPTIONS-MORE-TRIGGER-CHARACTER)))

(COMMON-LISP:DEFCLASS DOCUMENT-ON-TYPE-FORMATTING-REGISTRATION-OPTIONS
                      (TEXT-DOCUMENT-REGISTRATION-OPTIONS DOCUMENT-ON-TYPE-FORMATTING-OPTIONS)
                      COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS DOCUMENT-ON-TYPE-FORMATTING-PARAMS (TEXT-DOCUMENT-POSITION-PARAMS)
                      ((CH :INITARG :CH :DOCUMENTATION "*
* The character that has been typed."
                        :TYPE COMMON-LISP:STRING :READER DOCUMENT-ON-TYPE-FORMATTING-PARAMS-CH)
                       (OPTIONS :INITARG :OPTIONS :DOCUMENTATION "*
* The format options."
                        :TYPE FORMATTING-OPTIONS :READER DOCUMENT-ON-TYPE-FORMATTING-PARAMS-OPTIONS)))

(COMMON-LISP:DEFCLASS RENAME-CLIENT-CAPABILITIES (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((DYNAMIC-REGISTRATION? :INITARG :DYNAMIC-REGISTRATION :DOCUMENTATION "*
* Whether rename supports dynamic registration."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        RENAME-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION)
                       (PREPARE-SUPPORT? :INITARG :PREPARE-SUPPORT :DOCUMENTATION "*
* Client supports testing for validity of rename operations
* before execution.
*
* @since version 3.12.0"
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        RENAME-CLIENT-CAPABILITIES-PREPARE-SUPPORT)))

(COMMON-LISP:DEFCLASS RENAME-OPTIONS (WORK-DONE-PROGRESS-OPTIONS)
                      ((PREPARE-PROVIDER? :INITARG :PREPARE-PROVIDER :DOCUMENTATION "*
* Renames should be checked and tested before being executed."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER RENAME-OPTIONS-PREPARE-PROVIDER)))

(COMMON-LISP:DEFCLASS RENAME-REGISTRATION-OPTIONS (TEXT-DOCUMENT-REGISTRATION-OPTIONS RENAME-OPTIONS)
                      COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS RENAME-PARAMS (TEXT-DOCUMENT-POSITION-PARAMS WORK-DONE-PROGRESS-PARAMS)
                      ((NEW-NAME :INITARG :NEW-NAME :DOCUMENTATION "*
* The new name of the symbol. If the given name is not valid the
* request must return a [ResponseError](#ResponseError) with an
* appropriate message set."
                        :TYPE COMMON-LISP:STRING :READER RENAME-PARAMS-NEW-NAME)))

(COMMON-LISP:DEFCLASS PREPARE-RENAME-PARAMS (TEXT-DOCUMENT-POSITION-PARAMS) COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS FOLDING-RANGE-CLIENT-CAPABILITIES (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((DYNAMIC-REGISTRATION? :INITARG :DYNAMIC-REGISTRATION :DOCUMENTATION "*
* Whether implementation supports dynamic registration for folding range providers. If this is set to `true`
* the client supports the new `FoldingRangeRegistrationOptions` return value for the corresponding server
* capability as well."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        FOLDING-RANGE-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION)
                       (RANGE-LIMIT? :INITARG :RANGE-LIMIT :DOCUMENTATION "*
* The maximum number of folding ranges that the client prefers to receive per document. The value serves as a
* hint, servers are free to follow the limit."
                        :TYPE COMMON-LISP:NUMBER :READER
                        FOLDING-RANGE-CLIENT-CAPABILITIES-RANGE-LIMIT)
                       (LINE-FOLDING-ONLY? :INITARG :LINE-FOLDING-ONLY :DOCUMENTATION "*
* If set, the client signals that it only supports folding complete lines. If set, client will
* ignore specified `startCharacter` and `endCharacter` properties in a FoldingRange."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        FOLDING-RANGE-CLIENT-CAPABILITIES-LINE-FOLDING-ONLY)))

(COMMON-LISP:DEFCLASS FOLDING-RANGE-OPTIONS (WORK-DONE-PROGRESS-OPTIONS) COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS FOLDING-RANGE-REGISTRATION-OPTIONS
                      (TEXT-DOCUMENT-REGISTRATION-OPTIONS FOLDING-RANGE-OPTIONS
                       STATIC-REGISTRATION-OPTIONS)
                      COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS FOLDING-RANGE-PARAMS (WORK-DONE-PROGRESS-PARAMS PARTIAL-RESULT-PARAMS)
                      ((TEXT-DOCUMENT :INITARG :TEXT-DOCUMENT :DOCUMENTATION "*
* The text document."
                        :TYPE TEXT-DOCUMENT-IDENTIFIER :READER FOLDING-RANGE-PARAMS-TEXT-DOCUMENT)))

COMMON-LISP:NIL

(COMMON-LISP:DEFCLASS FOLDING-RANGE (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((START-LINE :INITARG :START-LINE :DOCUMENTATION "*
* The zero-based line number from where the folded range starts."
                        :TYPE COMMON-LISP:NUMBER :READER FOLDING-RANGE-START-LINE)
                       (START-CHARACTER? :INITARG :START-CHARACTER :DOCUMENTATION "*
* The zero-based character offset from where the folded range starts. If not defined, defaults to the length of the start line."
                        :TYPE COMMON-LISP:NUMBER :READER FOLDING-RANGE-START-CHARACTER)
                       (END-LINE :INITARG :END-LINE :DOCUMENTATION "*
* The zero-based line number where the folded range ends."
                        :TYPE COMMON-LISP:NUMBER :READER FOLDING-RANGE-END-LINE)
                       (END-CHARACTER? :INITARG :END-CHARACTER :DOCUMENTATION "*
* The zero-based character offset before the folded range ends. If not defined, defaults to the length of the end line."
                        :TYPE COMMON-LISP:NUMBER :READER FOLDING-RANGE-END-CHARACTER)
                       (KIND? :INITARG :KIND :DOCUMENTATION "*
* Describes the kind of the folding range such as `comment` or `region`. The kind
* is used to categorize folding ranges and used by commands like 'Fold all comments'. See
* [FoldingRangeKind](#FoldingRangeKind) for an enumeration of standardized kinds."
                        :TYPE COMMON-LISP:STRING :READER FOLDING-RANGE-KIND)))

(COMMON-LISP:DEFCLASS SELECTION-RANGE-CLIENT-CAPABILITIES (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((DYNAMIC-REGISTRATION? :INITARG :DYNAMIC-REGISTRATION :DOCUMENTATION "*
* Whether implementation supports dynamic registration for selection range providers. If this is set to `true`
* the client supports the new `SelectionRangeRegistrationOptions` return value for the corresponding server
* capability as well."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        SELECTION-RANGE-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION)))

(COMMON-LISP:DEFCLASS SELECTION-RANGE-OPTIONS (WORK-DONE-PROGRESS-OPTIONS) COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS SELECTION-RANGE-REGISTRATION-OPTIONS
                      (SELECTION-RANGE-OPTIONS TEXT-DOCUMENT-REGISTRATION-OPTIONS
                       STATIC-REGISTRATION-OPTIONS)
                      COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS SELECTION-RANGE-PARAMS (WORK-DONE-PROGRESS-PARAMS PARTIAL-RESULT-PARAMS)
                      ((TEXT-DOCUMENT :INITARG :TEXT-DOCUMENT :DOCUMENTATION "*
* The text document."
                        :TYPE TEXT-DOCUMENT-IDENTIFIER :READER SELECTION-RANGE-PARAMS-TEXT-DOCUMENT)
                       (POSITIONS :INITARG :POSITIONS :DOCUMENTATION "*
* The positions inside the text document."
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY POSITION) :READER
                        SELECTION-RANGE-PARAMS-POSITIONS)))

(COMMON-LISP:DEFCLASS SELECTION-RANGE (cl-lsp.lem-lsp-utils/json:OBJECT)
                      ((RANGE :INITARG :RANGE :DOCUMENTATION "*
* The [range](#Range) of this selection range."
                        :TYPE RANGE :READER SELECTION-RANGE-RANGE)
                       (PARENT? :INITARG :PARENT :DOCUMENTATION "*
* The parent selection range containing this range. Therefore `parent.range` must contain `this.range`."
                        :TYPE SELECTION-RANGE :READER SELECTION-RANGE-PARENT)))
